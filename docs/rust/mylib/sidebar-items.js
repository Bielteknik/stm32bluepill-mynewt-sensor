initSidebarItems({"fn":[["main","main() will be called at Mynewt startup. It replaces the C version of the main() function."],["panic","This function is called on panic, like an assertion failure. We display the filename and line number and pause in the debugger. From https://os.phil-opp.com/freestanding-rust-binary/"]],"mod":[["base","Common declarations for the application.  Includes custom sensor declarations."],["listen_sensor","Poll the temperature sensor every 10 seconds.  We support 2 types of temperature sensors: (1)  BME280 Temperature Sensor, connected to Blue Pill on port SPI1.      This sensor is selected if BME280_OFB is defined in syscfg.yml. (2)  Blue Pill internal temperature sensor, connected to port ADC1 on channel 16      This sensor is selected if TEMP_STM32 is defined in syscfg.yml. If this is the Collector Node, send the sensor data to the CoAP Server after polling. This is the Rust version of `https://github.com/lupyuen/stm32bluepill-mynewt-sensor/blob/rust/apps/my_sensor_app/OLDsrc/listen_sensor.c`"],["send_coap","Send sensor data to a CoAP Server or a Collector Node.  The CoAP payload will be encoded as JSON for CoAP Server and CBOR for Collector Node.  The sensor data will be transmitted to  CoAP Server over WiFi via the ESP8266 transceiver, and to Collector Node via nRF24L01 transceiver."],["sensor","Import the Mynewt Sensor API and export the safe version of the API. Based on `repos/apache-mynewt-core/hw/sensor/include/sensor/sensor.h`"]]});