var N=null,E="",T="t",U="u",searchIndex={};
var R=["result","c_void","Aligned","aligned","deref","deref_mut","rangeto","usize","index","index_mut","try_from","Reads the value of the register","try_into","borrow_mut","type_id","An iterator over all occurrences of the needles in a…","An iterator over all occurrences of the needle in a…","memchr2","memchr3","memchr","option","Creates a new iterator that yields all positions of needle…","into_iter","next_back","size_hint","borrow","typeid","A potential output from `Cmp`, this is the type equivalent…","Instantiates a singleton representing this bit.","typenum","Instantiates a singleton representing this unsigned integer.","Instantiates a singleton representing this strictly…","to_isize","Output","This function isn't used in this crate, but may be useful…","The type representing either `True` or `False`","Method returning `True` or `False`.","typenum::bit","is_equal","is_greater","is_less_or_equal","is_not_equal","is_greater_or_equal","is_less","typenum::uint","partial_div","typenum::int","typenum::array","to_ordering","ordering","to_bool","to_usize","to_i16","to_i32","to_i64","formatter","partial_cmp","greater","bitand","bitxor","default","Unsigned","PartialDiv","IsGreater","IsLessOrEqual","IsNotEqual","IsGreaterOrEqual","criticalsection","Peripheral","CriticalSection","frombyteswithnulerror","utf8error","FromBytesWithNulError","generic_array","mappedsequence","as_slice","as_mut_slice","genericarray","generic_array::iter","generate","pop_back","pop_front","AddLength","MappedGenericSequence","FunctionalSequence","GenericArrayIter","GenericSequence","Lengthen","ArrayLength","GenericArray","AsMutSlice","A newtype with alignment of at least `A` bytes","cortex_m","Critical section token","A \"mutex\" based on critical sections","Interrupt number","Returns the number associated with an interrupt","Core peripherals","Debug Control Block","Data Watchpoint and Trace unit","Instrumentation Trace Macrocell","Memory Protection Unit","Nested Vector Interrupt Controller","System Control Block","SysTick: System Timer","Cache and branch predictor maintenance operations","cortex_m::peripheral","I-cache invalidate all to PoU","I-cache invalidate by MVA to PoU","D-cache invalidate by MVA to PoC","D-cache invalidate by set-way","D-cache clean by MVA to PoU","D-cache clean by MVA to PoC","D-cache clean by set-way","D-cache clean and invalidate by MVA to PoC","D-cache clean and invalidate by set-way","Branch predictor invalidate all","RegisterBlock","Register block","csselrcachetype","Comparator","Flash Patch and Breakpoint unit","Lock Access","Lock Status","Stimulus Port","Forces `interrupt` into pending state","Clears `interrupt`'s pending state","Exception","cortex_m::peripheral::scb","MemoryManagement","Memory management interrupt (not present on Cortex-M0…","Bus fault interrupt (not present on Cortex-M0 variants)","UsageFault","Usage fault interrupt (not present on Cortex-M0 variants)","SV call interrupt","DebugMonitor","Debug monitor interrupt (not present on Cortex-M0 variants)","Pend SV interrupt","System Tick interrupt","Set the PENDSTCLR bit in the ICSR register which will…","get_priority","set_priority","systemhandler","systclksource","Returns a pointer to the register block","cortex_m::register","Control register","Privileged","Unprivileged","Reads the CPU register","Thread mode privilege level","Currently active stack pointer","Whether context floating-point is currently active","is_active","faultmask","Inactive","is_inactive","Writes `bits` to the CPU register","cortex_m::interrupt","cortex_m::peripheral::cbp","cortex_m::peripheral::cpuid","cortex_m::peripheral::dcb","cortex_m::peripheral::dwt","cortex_m::peripheral::fpb","cortex_m::peripheral::itm","cortex_m::peripheral::mpu","cortex_m::peripheral::nvic","cortex_m::peripheral::syst","cortex_m::peripheral::tpiu","cortex_m::register::control","cortex_m::register::faultmask","cortex_m::register::primask","vectactive","exception","Creates a critical section token","Creates a new mutex","Borrows the data for the duration of the critical section","Peripherals","CsselrCacheType","VectActive","SystemHandler","SystClkSource","Faultmask","bindgen_union_field","character","mylib::mynewt::encoding","__uint8_t","__uint16_t","__uint64_t","mylib::mynewt","stqe_next","stqh_first","stqh_last","slh_first","sle_next","@cond INTERNAL_HIDDEN","tqe_next","tqe_prev","tqh_first","__uint32_t","__int64_t","mynewterror","__BindgenBitfieldUnit","__BindgenUnionField","os_timeval","os_timezone","tz_minuteswest","tz_dsttime","ev_queued","os_event__bindgen_ty_1","os_eventq","evq_owner","os_eventq__bindgen_ty_1","os_callout","os_callout__bindgen_ty_1","os_dev_handlers","od_suspend","od_resume","od_handlers","od_init_arg","od_priority","od_open_ref","os_dev__bindgen_ty_1","os_memblock","os_memblock__bindgen_ty_1","os_mempool","mp_block_size","mp_num_blocks","mp_num_free","mp_min_free","mp_membuf_addr","__bindgen_anon_1","os_mempool__bindgen_ty_1","os_mempool__bindgen_ty_2","os_mutex__bindgen_ty_1","os_sanity_check","sc_checkin_last","sc_checkin_itvl","os_sanity_check__bindgen_ty_1","t_stackptr","t_stacktop","t_stacksize","t_lockcnt","t_sanity_check","t_next_wakeup","t_run_time","t_ctx_sw_cnt","t_os_task_list","t_os_list","t_obj_list","os_task__bindgen_ty_1","os_task__bindgen_ty_2","os_task__bindgen_ty_3","sensor_listener","_bitfield_1","__int16_t","__int32_t","os_stack_t","os_time_t","os_event_fn","os_dev_init_func_t","os_dev_open_func_t","os_dev_suspend_func_t","os_dev_resume_func_t","os_dev_close_func_t","os_membuf_t","os_sanity_check_func_t","os_task_func_t","new_bitfield_1","__bindgenbitfieldunit","mylib::mynewt::hw::sensor","__IncompleteArrayField","os_mbuf_pool","omp_databuf_len","omp_next","os_mbuf_pool__bindgen_ty_1","om_pkthdr_len","om_databuf","os_mbuf__bindgen_ty_1","mp_flags","json_value","json_value__bindgen_ty_1","composite","json_value__bindgen_ty_1__bindgen_ty_1","json_encoder","je_encode_buf","json_write_func_t","storage","as_mut_ptr","je_wr_commas","set_je_wr_commas","mylib::mynewt::libs","sensor_value","float_val","oc_server_handle","init_sensor_post","do_sensor_post","SYS_ENOMEM","SYS_EINVAL","SYS_ETIMEOUT","SYS_ENOENT","SYS_EAGAIN","SYS_EACCES","SYS_EBUSY","SYS_ENODEV","SYS_ERANGE","SYS_EALREADY","SYS_ENOTSUP","SYS_EUNKNOWN","SYS_EREMOTEIO","SYS_EDONE","SYS_EPERUSER","sensorvalue","mylib::mynewt::encoding::json","mylib::mynewt::encoding::tinycbor","mylib::mynewt::kernel::os","mylib::mynewt::hw::sensor::bindings","mylib::mynewt::libs::sensor_coap","mylib::mynewt::libs::sensor_network","mylib::mynewt::result","mylib::base","__bindgenunionfield","assert_receiver_is_total_eq","__hstoragealign","json_buffer","cbor_encoder_writer","cbor_decoder_reader","os_mempool_info","os_task_info","sensor_cfg","sensor_driver","sensor_timestamp","sensor_int","sensor_accel_data","sensor_mag_data","sensor_light_data","sensor_quat_data","sensor_euler_data","sensor_color_data","sensor_temp_data","sensor_press_data","sensor_humid_data","sensor_gyro_data","__incompletearrayfield","oc_ep_hdr","oc_endpoint","stats_coap_stats","sensor_network_endpoint","json_enum_t","json_array_t","json_array_t__bindgen_ty_1","json_array_t__bindgen_ty_1__bindgen_ty_1","json_array_t__bindgen_ty_1__bindgen_ty_2","json_array_t__bindgen_ty_1__bindgen_ty_3","json_array_t__bindgen_ty_1__bindgen_ty_4","json_array_t__bindgen_ty_1__bindgen_ty_5","json_array_t__bindgen_ty_1__bindgen_ty_6","json_attr_t","json_attr_t__bindgen_ty_1","json_attr_t__bindgen_ty_2","File_methods","cbor_iovec","CborEncoder","CborParser","CborValue","os_time_change_info","os_time_change_listener","os_time_change_listener__bindgen_ty_1","os_event","os_callout_list","hal_timer","hal_timer__bindgen_ty_1","os_mbuf_pkthdr","os_mbuf_pkthdr__bindgen_ty_1","os_mqueue","os_mqueue__bindgen_ty_1","os_mempool_ext","os_mutex","os_task_obj","os_task_obj__bindgen_ty_1","os_task_stailq","os_task_list","os_sem__bindgen_ty_1","sensor_data_t","sensor_listener__bindgen_ty_1","sensor_notifier","sensor_notifier__bindgen_ty_1","sensor_read_ev_ctx","sensor_type_traits","sensor_type_traits__bindgen_ty_1","sensor_notify_ev_ctx","sensor_notify_os_ev","sensor_itf","sensor__bindgen_ty_1","sensor__bindgen_ty_2","sensor__bindgen_ty_3","sensor__bindgen_ty_4","sensor_read_ctx","_bindgen_ty_1","_bindgen_ty_1__bindgen_ty_1","sensor_network_interface","MynewtError","SensorValue","sensor_temp_raw_data","SensorValueType","Structure representing time since Jan 1 1970 with…","Structure representing a timezone offset","Minutes west of GMT","Daylight savings time correction (if any)","Structure representing an OS event. OS events get placed…","Whether this OS event is queued on an event queue.","Callback to call when the event is taken off of an event…","Argument to pass to the event queue callback.","Pointer to task that \"owns\" this event queue.","Pointer to the task that is sleeping on this event queue,…","Structure containing the definition of a callout,…","Event to post when the callout expires.","Pointer to the event queue to post the event to","Number of ticks in the future to expire the callout","Device handlers, implementers of device drivers should…","Device open handler, called when the user opens the…","Suspend handler, called when the device is being…","Resume handler, restores device state after a suspend…","Close handler, releases the device, including any locks…","Device handlers.  Implementation of base device functions.","Device initialization function.","Argument to pass to device initialization function.","Stage during which to initialize this device.","Priority within a given stage to initialize a device.","Number of references to a device being open before marking…","Device flags.","Device name","A memory block structure. This simply contains a pointer…","Memory pool","Size of the memory blocks, in bytes.","The number of memory blocks.","The number of free blocks left","The lowest number of free blocks seen","Bitmap of OS_MEMPOOL_F_[...] values.","Address of memory buffer used by pool","Name for memory block","OS mutex structure","Mutex owner's default priority","Mutex call nesting level","Task that owns the mutex","Time this check last ran successfully.","Interval this task should check in at","Sanity check to run","Argument to pass to sanity check","Current stack pointer for this task","Pointer to top of this task's stack","Size of this task's stack","Task Priority","Task flags, bitmask","Task name","Task function that executes","Argument to pass to task function when called","Current object task is waiting on, either a semaphore or…","Default sanity check for this task","Next scheduled wakeup if this task is sleeping","Total task run time","Total number of times this task has been context switched…","Register a sensor listener. This allows a calling…","Initialize a device.","A mbuf pool from which to allocate mbufs. This contains a…","Total length of the databuf in each mbuf. This is the size…","The memory pool which to allocate mbufs out of","Chained memory buffer.","Current pointer to data in the structure","Flags associated with this buffer, see OS_MBUF_F_*…","Length of packet header","Length of data in this buffer","The mbuf pool this mbuf was allocated out of","Pointer to the beginning of the data, after this buffer","Contains Rust bindings for Mynewt Custom API…","sensor_type_t","sensor_event_type_t","sensor_data_func_t","Callback for handling sensor data, specified in a sensor…","sensor_trigger_cmp_func_t","Callback for trigger compare functions.","sensor_notifier_func_t","Callback for event notifications.","sensor_error_func_t","Callback for reporting a sensor read error.","sensor_read_func_t","Read a single value from a sensor, given a specific sensor…","sensor_get_config_func_t","Get the configuration of the sensor for the sensor type.…","sensor_set_config_func_t","Send a new configuration register set to the sensor.","sensor_set_trigger_thresh_t","Set the trigger and threshold values for a specific sensor…","sensor_clear_trigger_thresh_t","Clear the high/low threshold values for a specific sensor…","sensor_set_notification_t","Set the notification expectation for a targeted set of…","sensor_unset_notification_t","Unset the notification expectation for a targeted set of…","sensor_handle_interrupt_t","Let driver handle interrupt in the sensor context","sensor_reset_t","Reset Sensor function Ptr","sensor_type_t_SENSOR_TYPE_NONE","sensor_type_t_SENSOR_TYPE_ACCELEROMETER","sensor_type_t_SENSOR_TYPE_MAGNETIC_FIELD","sensor_type_t_SENSOR_TYPE_GYROSCOPE","sensor_type_t_SENSOR_TYPE_LIGHT","sensor_type_t_SENSOR_TYPE_TEMPERATURE","sensor_type_t_SENSOR_TYPE_AMBIENT_TEMPERATURE","sensor_type_t_SENSOR_TYPE_PRESSURE","sensor_type_t_SENSOR_TYPE_PROXIMITY","sensor_type_t_SENSOR_TYPE_RELATIVE_HUMIDITY","sensor_type_t_SENSOR_TYPE_ROTATION_VECTOR","sensor_type_t_SENSOR_TYPE_ALTITUDE","sensor_type_t_SENSOR_TYPE_WEIGHT","sensor_type_t_SENSOR_TYPE_LINEAR_ACCEL","sensor_type_t_SENSOR_TYPE_GRAVITY","sensor_type_t_SENSOR_TYPE_EULER","sensor_type_t_SENSOR_TYPE_COLOR","sensor_type_t_SENSOR_TYPE_USER_DEFINED_1","sensor_type_t_SENSOR_TYPE_USER_DEFINED_2","sensor_type_t_SENSOR_TYPE_USER_DEFINED_3","sensor_type_t_SENSOR_TYPE_USER_DEFINED_4","sensor_type_t_SENSOR_TYPE_USER_DEFINED_5","sensor_type_t_SENSOR_TYPE_USER_DEFINED_6","sensor_type_t_SENSOR_TYPE_ALL","sensor_event_type_t_SENSOR_EVENT_TYPE_DOUBLE_TAP","sensor_event_type_t_SENSOR_EVENT_TYPE_SINGLE_TAP","sensor_event_type_t_SENSOR_EVENT_TYPE_FREE_FALL","sensor_event_type_t_SENSOR_EVENT_TYPE_SLEEP_CHANGE","sensor_event_type_t_SENSOR_EVENT_TYPE_WAKEUP","sensor_event_type_t_SENSOR_EVENT_TYPE_SLEEP","sensor_event_type_t_SENSOR_EVENT_TYPE_ORIENT_CHANGE","sensor_event_type_t_SENSOR_EVENT_TYPE_ORIENT_X_CHANGE","sensor_event_type_t_SENSOR_EVENT_TYPE_ORIENT_Y_CHANGE","sensor_event_type_t_SENSOR_EVENT_TYPE_ORIENT_Z_CHANGE","sensor_event_type_t_SENSOR_EVENT_TYPE_ORIENT_X_L_CHANGE","sensor_event_type_t_SENSOR_EVENT_TYPE_ORIENT_Y_L_CHANGE","sensor_event_type_t_SENSOR_EVENT_TYPE_ORIENT_Z_L_CHANGE","sensor_event_type_t_SENSOR_EVENT_TYPE_ORIENT_X_H_CHANGE","sensor_event_type_t_SENSOR_EVENT_TYPE_ORIENT_Y_H_CHANGE","sensor_event_type_t_SENSOR_EVENT_TYPE_ORIENT_Z_H_CHANGE","strd_temp_raw","strd_temp_raw_is_valid","rust_sysinit","Initialise the Mynewt system. Start the Mynewt drivers and…","get_temp_raw_data","Interpret `sensor_data` as a `sensor_temp_raw_data` struct…","get_temp_data","Interpret `sensor_data` as a `sensor_temp_data` struct…","sensor_get_device","device_get_name","Return the name for the Mynewt device. Assumes name is…","null_sensor","is_null_sensor","is_null_sensor_data","mylib::mynewt::libs::mynewt_rust","mylib::send_coap"];
searchIndex["aligned"]={"doc":R[91],"i":[[3,"A2",R[3],"2-byte alignment",N,N],[3,"A4",E,"4-byte alignment",N,N],[3,"A8",E,"8-byte alignment",N,N],[3,"A16",E,"16-byte alignment",N,N],[3,R[2],E,R[91],N,N],[5,R[2],E,"Changes the alignment of `value` to be at least `A` bytes",N,[[[T]],[R[3]]]],[11,R[10],E,E,0,[[[U]],[R[0]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[12],E,E,0,[[],[R[0]]]],[11,R[25],E,E,0,[[["self"]],[T]]],[11,R[13],E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[["self"]],[R[26]]]],[11,R[10],E,E,1,[[[U]],[R[0]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[12],E,E,1,[[],[R[0]]]],[11,R[25],E,E,1,[[["self"]],[T]]],[11,R[13],E,E,1,[[["self"]],[T]]],[11,R[14],E,E,1,[[["self"]],[R[26]]]],[11,R[10],E,E,2,[[[U]],[R[0]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[12],E,E,2,[[],[R[0]]]],[11,R[25],E,E,2,[[["self"]],[T]]],[11,R[13],E,E,2,[[["self"]],[T]]],[11,R[14],E,E,2,[[["self"]],[R[26]]]],[11,R[10],E,E,3,[[[U]],[R[0]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[12],E,E,3,[[],[R[0]]]],[11,R[25],E,E,3,[[["self"]],[T]]],[11,R[13],E,E,3,[[["self"]],[T]]],[11,R[14],E,E,3,[[["self"]],[R[26]]]],[11,R[10],E,E,4,[[[U]],[R[0]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[12],E,E,4,[[],[R[0]]]],[11,R[25],E,E,4,[[["self"]],[T]]],[11,R[13],E,E,4,[[["self"]],[T]]],[11,R[14],E,E,4,[[["self"]],[R[26]]]],[11,R[4],E,E,4,[[["self"]],[T]]],[11,R[5],E,E,4,[[["self"]],[T]]],[11,R[75],E,E,4,[[["self"]]]],[11,R[76],E,E,4,[[["self"]]]]],"p":[[3,"A2"],[3,"A4"],[3,"A8"],[3,"A16"],[3,R[2]]]};
searchIndex["as_slice"]={"doc":"`AsSlice` and `AsMutSlice` traits","i":[[8,"AsSlice",R[75],"Something that can be seen as an immutable slice",N,N],[16,"Element",E,"The element type of the slice view",0,N],[10,R[75],E,"Returns the immutable slice view of `Self`",0,[[["self"]]]],[8,R[90],E,"Something that can be seen as an mutable slice",N,N],[10,R[76],E,"Returns the mutable slice view of `Self`",1,[[["self"]]]]],"p":[[8,"AsSlice"],[8,R[90]]]};
searchIndex["bare_metal"]={"doc":"Abstractions common to bare metal systems","i":[[3,R[68],"bare_metal","A peripheral",N,N],[3,R[69],E,R[93],N,N],[3,"Mutex",E,R[94],N,N],[8,"Nr",E,R[95],N,N],[10,"nr",E,R[96],0,[[["self"]],["u8"]]],[11,"new",E,"Creates a new peripheral",1,[[[R[7]]],["self"]]],[11,R[25],E,"Borrows the peripheral for the duration of a critical…",1,[[["self"],[R[67]]],[T]]],[11,"get",E,R[144],1,[[["self"]]]],[11,"new",E,R[174],2,[[],["self"]]],[11,"new",E,R[175],3,[[[T]],["self"]]],[11,R[25],E,R[176],3,[[["self"],[R[67]]],[T]]],[11,R[10],E,E,1,[[[U]],[R[0]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[12],E,E,1,[[],[R[0]]]],[11,R[25],E,E,1,[[["self"]],[T]]],[11,R[13],E,E,1,[[["self"]],[T]]],[11,R[14],E,E,1,[[["self"]],[R[26]]]],[11,R[10],E,E,2,[[[U]],[R[0]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[12],E,E,2,[[],[R[0]]]],[11,R[25],E,E,2,[[["self"]],[T]]],[11,R[13],E,E,2,[[["self"]],[T]]],[11,R[14],E,E,2,[[["self"]],[R[26]]]],[11,R[10],E,E,3,[[[U]],[R[0]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[12],E,E,3,[[],[R[0]]]],[11,R[25],E,E,3,[[["self"]],[T]]],[11,R[13],E,E,3,[[["self"]],[T]]],[11,R[14],E,E,3,[[["self"]],[R[26]]]],[11,"fmt",E,E,1,[[["self"],[R[55]]],[R[0]]]]],"p":[[8,"Nr"],[3,R[68]],[3,R[69]],[3,"Mutex"]]};
searchIndex["cortex_m"]={"doc":"Low level access to Cortex-M processors","i":[[0,"asm",R[92],"Miscellaneous assembly instructions",N,N],[5,"bkpt","cortex_m::asm","Puts the processor in Debug state. Debuggers can pick this…",N,[[]]],[5,"delay",E,"Blocks the program for at least `n` instruction cycles",N,[[["u32"]]]],[5,"nop",E,"A no-operation. Useful to prevent delay loops from being…",N,[[]]],[5,"wfe",E,"Wait For Event",N,[[]]],[5,"wfi",E,"Wait For Interrupt",N,[[]]],[5,"sev",E,"Send Event",N,[[]]],[5,"isb",E,"Instruction Synchronization Barrier",N,[[]]],[5,"dsb",E,"Data Synchronization Barrier",N,[[]]],[5,"dmb",E,"Data Memory Barrier",N,[[]]],[0,"interrupt",R[92],"Interrupts",N,N],[5,"disable",R[158],"Disables all interrupts",N,[[]]],[5,"enable",E,"Enables all the interrupts",N,[[]]],[5,"free",E,"Execute closure `f` in an interrupt-free context.",N,[[["f"]],["r"]]],[3,R[69],E,R[93],N,N],[8,"Nr",E,R[95],N,N],[10,"nr",E,R[96],0,[[["self"]],["u8"]]],[3,"Mutex",E,R[94],N,N],[0,"register",R[92],"Processor core registers",N,N],[0,"basepri",R[145],"Base Priority Mask Register",N,N],[5,"read","cortex_m::register::basepri",R[149],N,[[],["u8"]]],[5,"write",E,"Writes to the CPU register",N,[[["u8"]]]],[0,"basepri_max",R[145],"Base Priority Mask Register (conditional write)",N,N],[5,"write","cortex_m::register::basepri_max","Writes to BASEPRI if",N,[[["u8"]]]],[0,"control",R[145],R[146],N,N],[3,"Control",R[169],R[146],N,N],[4,"Npriv",E,R[150],N,N],[13,R[147],E,R[147],1,N],[13,R[148],E,R[148],1,N],[4,"Spsel",E,R[151],N,N],[13,"Msp",E,"MSP is the current stack pointer",2,N],[13,"Psp",E,"PSP is the current stack pointer",2,N],[4,"Fpca",E,R[152],N,N],[13,"Active",E,"Floating-point context active.",3,N],[13,"NotActive",E,"No floating-point context active",3,N],[5,"read",E,R[149],N,[[],["control"]]],[0,R[154],R[145],"Fault Mask Register",N,N],[4,R[182],R[170],"All exceptions are ...",N,N],[13,"Active",E,"Active",4,N],[13,R[155],E,"Inactive, expect for NMI",4,N],[5,"read",E,R[149],N,[[],[R[154]]]],[0,"msp",R[145],"Main Stack Pointer",N,N],[5,"read","cortex_m::register::msp",R[149],N,[[],["u32"]]],[5,"write",E,R[157],N,[[["u32"]]]],[0,"primask",R[145],"Priority mask register",N,N],[4,"Primask",R[171],"All exceptions with configurable priority are ...",N,N],[13,"Active",E,"Active",5,N],[13,R[155],E,R[155],5,N],[5,"read",E,R[149],N,[[],["primask"]]],[0,"psp",R[145],"Process Stack Pointer",N,N],[5,"read","cortex_m::register::psp",R[149],N,[[],["u32"]]],[5,"write",E,R[157],N,[[["u32"]]]],[0,"itm",R[92],R[100],N,N],[5,"write_all","cortex_m::itm","Writes a `buffer` to the ITM `port`",N,[[["stim"]]]],[5,"write_aligned",E,"Writes a 4-byte aligned `buffer` to the ITM `port`",N,[[["stim"],[R[3]]]]],[5,"write_fmt",E,"Writes `fmt::Arguments` to the ITM `port`",N,[[["arguments"],["stim"]]]],[5,"write_str",E,"Writes a string to the ITM `port`",N,[[["stim"],["str"]]]],[0,"peripheral",R[92],R[97],N,N],[0,"cbp",R[106],R[105],N,N],[3,R[117],R[159],R[118],N,N],[12,"iciallu",E,R[107],6,N],[12,"icimvau",E,R[108],6,N],[12,"dcimvac",E,R[109],6,N],[12,"dcisw",E,R[110],6,N],[12,"dccmvau",E,R[111],6,N],[12,"dccmvac",E,R[112],6,N],[12,"dccsw",E,R[113],6,N],[12,"dccimvac",E,R[114],6,N],[12,"dccisw",E,R[115],6,N],[12,"bpiall",E,R[116],6,N],[0,"fpb",R[106],R[121],N,N],[3,R[117],R[163],R[118],N,N],[12,"ctrl",E,"Control",7,N],[12,"remap",E,"Remap",7,N],[12,"comp",E,R[120],7,N],[12,"lar",E,R[122],7,N],[12,"lsr",E,R[123],7,N],[0,"itm",R[106],R[100],N,N],[3,R[117],R[164],R[118],N,N],[12,"stim",E,R[124],8,N],[12,"ter",E,"Trace Enable",8,N],[12,"tpr",E,"Trace Privilege",8,N],[12,"tcr",E,"Trace Control",8,N],[12,"lar",E,R[122],8,N],[12,"lsr",E,R[123],8,N],[3,"Stim",E,R[124],N,N],[0,"tpiu",R[106],"Trace Port Interface Unit;",N,N],[3,R[117],R[168],R[118],N,N],[12,"sspsr",E,"Supported Parallel Port Sizes",9,N],[12,"cspsr",E,"Current Parallel Port Size",9,N],[12,"acpr",E,"Asynchronous Clock Prescaler",9,N],[12,"sppr",E,"Selected Pin Control",9,N],[12,"ffcr",E,"Formatter and Flush Control",9,N],[12,"lar",E,R[122],9,N],[12,"lsr",E,R[123],9,N],[12,"_type",E,"TPIU Type",9,N],[0,"cpuid",R[106],"CPUID",N,N],[3,R[117],R[160],R[118],N,N],[12,"base",E,"CPUID base",10,N],[12,"pfr",E,"Processor Feature (not present on Cortex-M0 variants)",10,N],[12,"dfr",E,"Debug Feature (not present on Cortex-M0 variants)",10,N],[12,"afr",E,"Auxiliary Feature (not present on Cortex-M0 variants)",10,N],[12,"mmfr",E,"Memory Model Feature (not present on Cortex-M0 variants)",10,N],[12,"isar",E,"Instruction Set Attribute (not present on Cortex-M0…",10,N],[12,"clidr",E,"Cache Level ID (only present on Cortex-M7)",10,N],[12,"ctr",E,"Cache Type (only present on Cortex-M7)",10,N],[12,"ccsidr",E,"Cache Size ID (only present on Cortex-M7)",10,N],[12,"csselr",E,"Cache Size Selection (only present on Cortex-M7)",10,N],[4,R[178],E,"Type of cache to select on CSSELR writes.",N,N],[13,"DataOrUnified",E,"Select DCache or unified cache",11,N],[13,"Instruction",E,"Select ICache",11,N],[0,"dcb",R[106],R[98],N,N],[3,R[117],R[161],R[118],N,N],[12,"dhcsr",E,"Debug Halting Control and Status",12,N],[12,"dcrsr",E,"Debug Core Register Selector",12,N],[12,"dcrdr",E,"Debug Core Register Data",12,N],[12,"demcr",E,"Debug Exception and Monitor Control",12,N],[0,"mpu",R[106],R[101],N,N],[3,R[117],R[165],R[118],N,N],[12,"_type",E,"Type",13,N],[12,"ctrl",E,"Control",13,N],[12,"rnr",E,"Region Number",13,N],[12,"rbar",E,"Region Base Address",13,N],[12,"rasr",E,"Region Attribute and Size",13,N],[12,"rbar_a1",E,"Alias 1 of RBAR",13,N],[12,"rsar_a1",E,"Alias 1 of RSAR",13,N],[12,"rbar_a2",E,"Alias 2 of RBAR",13,N],[12,"rsar_a2",E,"Alias 2 of RSAR",13,N],[12,"rbar_a3",E,"Alias 3 of RBAR",13,N],[12,"rsar_a3",E,"Alias 3 of RSAR",13,N],[0,"syst",R[106],R[104],N,N],[3,R[117],R[167],R[118],N,N],[12,"csr",E,"Control and Status",14,N],[12,"rvr",E,"Reload Value",14,N],[12,"cvr",E,"Current Value",14,N],[12,"calib",E,"Calibration Value",14,N],[4,R[181],E,"SysTick clock source",N,N],[13,"Core",E,"Core-provided clock",15,N],[13,"External",E,"External reference clock",15,N],[3,"CBP",R[106],R[105],N,N],[3,"CPUID",E,"CPUID",N,N],[3,"DCB",E,R[98],N,N],[3,"FPB",E,R[121],N,N],[3,"FPU",E,"Floating Point Unit",N,N],[3,"ITM",E,R[100],N,N],[3,"MPU",E,R[101],N,N],[3,"SYST",E,R[104],N,N],[3,"TPIU",E,"Trace Port Interface Unit",N,N],[3,R[177],E,R[97],N,N],[12,"CBP",E,"Cache and branch predictor maintenance operations (not…",16,N],[12,"CPUID",E,"CPUID",16,N],[12,"DCB",E,R[98],16,N],[12,"DWT",E,R[99],16,N],[12,"FPB",E,"Flash Patch and Breakpoint unit (not present on Cortex-M0…",16,N],[12,"FPU",E,"Floating Point Unit (only present on…",16,N],[12,"ITM",E,"Instrumentation Trace Macrocell (not present on Cortex-M0…",16,N],[12,"MPU",E,R[101],16,N],[12,"NVIC",E,R[102],16,N],[12,"SCB",E,R[103],16,N],[12,"SYST",E,R[104],16,N],[12,"TPIU",E,"Trace Port Interface Unit (not present on Cortex-M0…",16,N],[3,"DWT",E,R[99],N,N],[3,"NVIC",E,R[102],N,N],[3,"SCB",E,R[103],N,N],[0,"dwt",E,R[99],N,N],[3,R[120],R[162],R[120],N,N],[12,"comp",E,R[120],17,N],[12,"mask",E,"Comparator Mask",17,N],[12,"function",E,"Comparator Function",17,N],[3,R[117],E,R[118],N,N],[12,"ctrl",E,"Control",18,N],[12,"cyccnt",E,"Cycle Count",18,N],[12,"cpicnt",E,"CPI Count",18,N],[12,"exccnt",E,"Exception Overhead Count",18,N],[12,"sleepcnt",E,"Sleep Count",18,N],[12,"lsucnt",E,"LSU Count",18,N],[12,"foldcnt",E,"Folded-instruction Count",18,N],[12,"pcsr",E,"Program Counter Sample",18,N],[12,"c",E,"Comparators",18,N],[12,"lar",E,R[122],18,N],[12,"lsr",E,R[123],18,N],[11,"enable_cycle_counter",R[106],"Enables the cycle counter",19,[[["self"]]]],[11,"get_cycle_count",E,"Returns the current clock cycle count",19,[[],["u32"]]],[0,"nvic",E,R[102],N,N],[3,R[117],R[166],R[118],N,N],[12,"iser",E,"Interrupt Set-Enable",20,N],[12,"icer",E,"Interrupt Clear-Enable",20,N],[12,"ispr",E,"Interrupt Set-Pending",20,N],[12,"icpr",E,"Interrupt Clear-Pending",20,N],[12,"iabr",E,"Interrupt Active Bit (not present on Cortex-M0 variants)",20,N],[12,"ipr",E,"Interrupt Priority",20,N],[11,"clear_pending",R[106],R[126],21,[[["self"],["i"]]]],[11,"disable",E,"Disables `interrupt`",21,[[["self"],["i"]]]],[11,"enable",E,"Enables `interrupt`",21,[[["self"],["i"]]]],[11,R[140],E,"Returns the NVIC priority of `interrupt`",21,[[["i"]],["u8"]]],[11,R[153],E,"Is `interrupt` active or pre-empted and stacked",21,[[["i"]],["bool"]]],[11,"is_enabled",E,"Checks if `interrupt` is enabled",21,[[["i"]],["bool"]]],[11,"is_pending",E,"Checks if `interrupt` is pending",21,[[["i"]],["bool"]]],[11,"pend",E,R[125],21,[[["i"]]]],[11,"set_pending",E,R[125],21,[[["self"],["i"]]]],[11,R[141],E,"Sets the \"priority\" of `interrupt` to `prio`",21,[[["self"],["i"],["u8"]]]],[11,"unpend",E,R[126],21,[[["i"]]]],[0,"scb",E,R[103],N,N],[4,R[127],R[128],"Processor core exceptions (internal interrupts)",N,N],[13,"NonMaskableInt",E,"Non maskable interrupt",22,N],[13,"HardFault",E,"Hard fault interrupt",22,N],[13,R[129],E,R[130],22,N],[13,"BusFault",E,R[131],22,N],[13,R[132],E,R[133],22,N],[13,"SVCall",E,R[134],22,N],[13,R[135],E,R[136],22,N],[13,"PendSV",E,R[137],22,N],[13,"SysTick",E,R[138],22,N],[4,R[179],E,"Active exception number",N,N],[13,"ThreadMode",E,"Thread mode",23,N],[13,R[127],E,"Processor core exception (internal interrupts)",23,N],[13,"Interrupt",E,"Device specific exception (external interrupts)",23,N],[12,"irqn","cortex_m::peripheral::scb::VectActive","Interrupt number. This number is always within half open…",23,N],[4,R[180],R[128],"System handlers, exceptions with configurable priority",N,N],[13,R[129],E,R[130],24,N],[13,"BusFault",E,R[131],24,N],[13,R[132],E,R[133],24,N],[13,"SVCall",E,R[134],24,N],[13,R[135],E,R[136],24,N],[13,"PendSV",E,R[137],24,N],[13,"SysTick",E,R[138],24,N],[3,R[117],E,R[118],N,N],[12,"icsr",E,"Interrupt Control and State",25,N],[12,"vtor",E,"Vector Table Offset (not present on Cortex-M0 variants)",25,N],[12,"aircr",E,"Application Interrupt and Reset Control",25,N],[12,"scr",E,"System Control",25,N],[12,"ccr",E,"Configuration and Control",25,N],[12,"shpr",E,"System Handler Priority (word accessible only on Cortex-M0…",25,N],[12,"shcrs",E,"System Handler Control and State",25,N],[12,"cfsr",E,"Configurable Fault Status (not present on Cortex-M0…",25,N],[12,"hfsr",E,"HardFault Status (not present on Cortex-M0 variants)",25,N],[12,"dfsr",E,"Debug Fault Status (not present on Cortex-M0 variants)",25,N],[12,"mmfar",E,"MemManage Fault Address (not present on Cortex-M0 variants)",25,N],[12,"bfar",E,"BusFault Address (not present on Cortex-M0 variants)",25,N],[12,"afsr",E,"Auxiliary Fault Status (not present on Cortex-M0 variants)",25,N],[12,"cpacr",E,"Coprocessor Access Control (not present on Cortex-M0…",25,N],[11,"vect_active",R[106],"Returns the active exception number",26,[[],[R[172]]]],[11,"enable_icache",E,"Enables I-Cache if currently disabled",26,[[["self"]]]],[11,"disable_icache",E,"Disables I-Cache if currently enabled",26,[[["self"]]]],[11,"icache_enabled",E,"Returns whether the I-Cache is currently enabled",26,[[],["bool"]]],[11,"invalidate_icache",E,"Invalidates I-Cache",26,[[["self"]]]],[11,"enable_dcache",E,"Enables D-cache if currently disabled",26,[[["self"],["cpuid"]]]],[11,"disable_dcache",E,"Disables D-cache if currently enabled",26,[[["self"],["cpuid"]]]],[11,"dcache_enabled",E,"Returns whether the D-Cache is currently enabled",26,[[],["bool"]]],[11,"clean_dcache",E,"Cleans D-cache",26,[[["self"],["cpuid"]]]],[11,"clean_invalidate_dcache",E,"Cleans and invalidates D-cache",26,[[["self"],["cpuid"]]]],[11,"invalidate_dcache_by_address",E,"Invalidates D-cache by address",26,[[["self"],[R[7]]]]],[11,"clean_dcache_by_address",E,"Cleans D-cache by address",26,[[["self"],[R[7]]]]],[11,"clean_invalidate_dcache_by_address",E,"Cleans and invalidates D-cache by address",26,[[["self"],[R[7]]]]],[11,"set_sleepdeep",E,"Set the SLEEPDEEP bit in the SCR register",26,[[["self"]]]],[11,"clear_sleepdeep",E,"Clear the SLEEPDEEP bit in the SCR register",26,[[["self"]]]],[11,"system_reset",E,"Initiate a system reset request to reset the MCU",26,[[["self"]]]],[11,"set_pendsv",E,"Set the PENDSVSET bit in the ICSR register which will pend…",26,[[]]],[11,"is_pendsv_pending",E,"Check if PENDSVSET bit in the ICSR register is set meaning…",26,[[],["bool"]]],[11,"clear_pendsv",E,"Set the PENDSVCLR bit in the ICSR register which will…",26,[[]]],[11,"set_pendst",E,R[139],26,[[]]],[11,"is_pendst_pending",E,"Check if PENDSTSET bit in the ICSR register is set meaning…",26,[[],["bool"]]],[11,"clear_pendst",E,R[139],26,[[]]],[11,R[140],E,"Returns the hardware priority of `system_handler`",26,[[[R[142]]],["u8"]]],[11,R[141],E,"Sets the hardware priority of `system_handler` to `prio`",26,[[["self"],[R[142]],["u8"]]]],[11,"take",E,"Returns all the core peripherals once",16,[[],[R[20]]]],[11,"steal",E,"Unchecked version of `Peripherals::take`",16,[[],["self"]]],[11,"ptr",E,R[144],19,[[]]],[11,"ptr",E,R[144],21,[[]]],[11,"ptr",E,R[144],26,[[]]],[14,"iprint",R[92],"Macro for sending a formatted string through an ITM channel",N,N],[14,"iprintln",E,"Macro for sending a formatted string through an ITM…",N,N],[14,"singleton",E,"Macro to create a mutable reference to a statically…",N,N],[11,R[10],R[158],E,27,[[[U]],[R[0]]]],[11,"from",E,E,27,[[[T]],[T]]],[11,"into",E,E,27,[[],[U]]],[11,R[12],E,E,27,[[],[R[0]]]],[11,R[25],E,E,27,[[["self"]],[T]]],[11,R[13],E,E,27,[[["self"]],[T]]],[11,R[14],E,E,27,[[["self"]],[R[26]]]],[11,R[10],E,E,28,[[[U]],[R[0]]]],[11,"from",E,E,28,[[[T]],[T]]],[11,"into",E,E,28,[[],[U]]],[11,R[12],E,E,28,[[],[R[0]]]],[11,R[25],E,E,28,[[["self"]],[T]]],[11,R[13],E,E,28,[[["self"]],[T]]],[11,R[14],E,E,28,[[["self"]],[R[26]]]],[11,R[10],R[169],E,29,[[[U]],[R[0]]]],[11,"from",E,E,29,[[[T]],[T]]],[11,"into",E,E,29,[[],[U]]],[11,R[12],E,E,29,[[],[R[0]]]],[11,R[25],E,E,29,[[["self"]],[T]]],[11,R[13],E,E,29,[[["self"]],[T]]],[11,R[14],E,E,29,[[["self"]],[R[26]]]],[11,R[10],E,E,1,[[[U]],[R[0]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[12],E,E,1,[[],[R[0]]]],[11,R[25],E,E,1,[[["self"]],[T]]],[11,R[13],E,E,1,[[["self"]],[T]]],[11,R[14],E,E,1,[[["self"]],[R[26]]]],[11,R[10],E,E,2,[[[U]],[R[0]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[12],E,E,2,[[],[R[0]]]],[11,R[25],E,E,2,[[["self"]],[T]]],[11,R[13],E,E,2,[[["self"]],[T]]],[11,R[14],E,E,2,[[["self"]],[R[26]]]],[11,R[10],E,E,3,[[[U]],[R[0]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[12],E,E,3,[[],[R[0]]]],[11,R[25],E,E,3,[[["self"]],[T]]],[11,R[13],E,E,3,[[["self"]],[T]]],[11,R[14],E,E,3,[[["self"]],[R[26]]]],[11,R[10],R[170],E,4,[[[U]],[R[0]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[12],E,E,4,[[],[R[0]]]],[11,R[25],E,E,4,[[["self"]],[T]]],[11,R[13],E,E,4,[[["self"]],[T]]],[11,R[14],E,E,4,[[["self"]],[R[26]]]],[11,R[10],R[171],E,5,[[[U]],[R[0]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[12],E,E,5,[[],[R[0]]]],[11,R[25],E,E,5,[[["self"]],[T]]],[11,R[13],E,E,5,[[["self"]],[T]]],[11,R[14],E,E,5,[[["self"]],[R[26]]]],[11,R[10],R[159],E,6,[[[U]],[R[0]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[12],E,E,6,[[],[R[0]]]],[11,R[25],E,E,6,[[["self"]],[T]]],[11,R[13],E,E,6,[[["self"]],[T]]],[11,R[14],E,E,6,[[["self"]],[R[26]]]],[11,R[10],R[163],E,7,[[[U]],[R[0]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[12],E,E,7,[[],[R[0]]]],[11,R[25],E,E,7,[[["self"]],[T]]],[11,R[13],E,E,7,[[["self"]],[T]]],[11,R[14],E,E,7,[[["self"]],[R[26]]]],[11,R[10],R[164],E,8,[[[U]],[R[0]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[12],E,E,8,[[],[R[0]]]],[11,R[25],E,E,8,[[["self"]],[T]]],[11,R[13],E,E,8,[[["self"]],[T]]],[11,R[14],E,E,8,[[["self"]],[R[26]]]],[11,R[10],E,E,30,[[[U]],[R[0]]]],[11,"from",E,E,30,[[[T]],[T]]],[11,"into",E,E,30,[[],[U]]],[11,R[12],E,E,30,[[],[R[0]]]],[11,R[25],E,E,30,[[["self"]],[T]]],[11,R[13],E,E,30,[[["self"]],[T]]],[11,R[14],E,E,30,[[["self"]],[R[26]]]],[11,R[10],R[168],E,9,[[[U]],[R[0]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[12],E,E,9,[[],[R[0]]]],[11,R[25],E,E,9,[[["self"]],[T]]],[11,R[13],E,E,9,[[["self"]],[T]]],[11,R[14],E,E,9,[[["self"]],[R[26]]]],[11,R[10],R[160],E,10,[[[U]],[R[0]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,R[12],E,E,10,[[],[R[0]]]],[11,R[25],E,E,10,[[["self"]],[T]]],[11,R[13],E,E,10,[[["self"]],[T]]],[11,R[14],E,E,10,[[["self"]],[R[26]]]],[11,R[10],E,E,11,[[[U]],[R[0]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,"into",E,E,11,[[],[U]]],[11,R[12],E,E,11,[[],[R[0]]]],[11,R[25],E,E,11,[[["self"]],[T]]],[11,R[13],E,E,11,[[["self"]],[T]]],[11,R[14],E,E,11,[[["self"]],[R[26]]]],[11,R[10],R[161],E,12,[[[U]],[R[0]]]],[11,"from",E,E,12,[[[T]],[T]]],[11,"into",E,E,12,[[],[U]]],[11,R[12],E,E,12,[[],[R[0]]]],[11,R[25],E,E,12,[[["self"]],[T]]],[11,R[13],E,E,12,[[["self"]],[T]]],[11,R[14],E,E,12,[[["self"]],[R[26]]]],[11,R[10],R[165],E,13,[[[U]],[R[0]]]],[11,"from",E,E,13,[[[T]],[T]]],[11,"into",E,E,13,[[],[U]]],[11,R[12],E,E,13,[[],[R[0]]]],[11,R[25],E,E,13,[[["self"]],[T]]],[11,R[13],E,E,13,[[["self"]],[T]]],[11,R[14],E,E,13,[[["self"]],[R[26]]]],[11,R[10],R[167],E,14,[[[U]],[R[0]]]],[11,"from",E,E,14,[[[T]],[T]]],[11,"into",E,E,14,[[],[U]]],[11,R[12],E,E,14,[[],[R[0]]]],[11,R[25],E,E,14,[[["self"]],[T]]],[11,R[13],E,E,14,[[["self"]],[T]]],[11,R[14],E,E,14,[[["self"]],[R[26]]]],[11,R[10],E,E,15,[[[U]],[R[0]]]],[11,"from",E,E,15,[[[T]],[T]]],[11,"into",E,E,15,[[],[U]]],[11,R[12],E,E,15,[[],[R[0]]]],[11,R[25],E,E,15,[[["self"]],[T]]],[11,R[13],E,E,15,[[["self"]],[T]]],[11,R[14],E,E,15,[[["self"]],[R[26]]]],[11,R[10],R[106],E,31,[[[U]],[R[0]]]],[11,"from",E,E,31,[[[T]],[T]]],[11,"into",E,E,31,[[],[U]]],[11,R[12],E,E,31,[[],[R[0]]]],[11,R[25],E,E,31,[[["self"]],[T]]],[11,R[13],E,E,31,[[["self"]],[T]]],[11,R[14],E,E,31,[[["self"]],[R[26]]]],[11,R[10],E,E,32,[[[U]],[R[0]]]],[11,"from",E,E,32,[[[T]],[T]]],[11,"into",E,E,32,[[],[U]]],[11,R[12],E,E,32,[[],[R[0]]]],[11,R[25],E,E,32,[[["self"]],[T]]],[11,R[13],E,E,32,[[["self"]],[T]]],[11,R[14],E,E,32,[[["self"]],[R[26]]]],[11,R[10],E,E,33,[[[U]],[R[0]]]],[11,"from",E,E,33,[[[T]],[T]]],[11,"into",E,E,33,[[],[U]]],[11,R[12],E,E,33,[[],[R[0]]]],[11,R[25],E,E,33,[[["self"]],[T]]],[11,R[13],E,E,33,[[["self"]],[T]]],[11,R[14],E,E,33,[[["self"]],[R[26]]]],[11,R[10],E,E,34,[[[U]],[R[0]]]],[11,"from",E,E,34,[[[T]],[T]]],[11,"into",E,E,34,[[],[U]]],[11,R[12],E,E,34,[[],[R[0]]]],[11,R[25],E,E,34,[[["self"]],[T]]],[11,R[13],E,E,34,[[["self"]],[T]]],[11,R[14],E,E,34,[[["self"]],[R[26]]]],[11,R[10],E,E,35,[[[U]],[R[0]]]],[11,"from",E,E,35,[[[T]],[T]]],[11,"into",E,E,35,[[],[U]]],[11,R[12],E,E,35,[[],[R[0]]]],[11,R[25],E,E,35,[[["self"]],[T]]],[11,R[13],E,E,35,[[["self"]],[T]]],[11,R[14],E,E,35,[[["self"]],[R[26]]]],[11,R[10],E,E,36,[[[U]],[R[0]]]],[11,"from",E,E,36,[[[T]],[T]]],[11,"into",E,E,36,[[],[U]]],[11,R[12],E,E,36,[[],[R[0]]]],[11,R[25],E,E,36,[[["self"]],[T]]],[11,R[13],E,E,36,[[["self"]],[T]]],[11,R[14],E,E,36,[[["self"]],[R[26]]]],[11,R[10],E,E,37,[[[U]],[R[0]]]],[11,"from",E,E,37,[[[T]],[T]]],[11,"into",E,E,37,[[],[U]]],[11,R[12],E,E,37,[[],[R[0]]]],[11,R[25],E,E,37,[[["self"]],[T]]],[11,R[13],E,E,37,[[["self"]],[T]]],[11,R[14],E,E,37,[[["self"]],[R[26]]]],[11,R[10],E,E,38,[[[U]],[R[0]]]],[11,"from",E,E,38,[[[T]],[T]]],[11,"into",E,E,38,[[],[U]]],[11,R[12],E,E,38,[[],[R[0]]]],[11,R[25],E,E,38,[[["self"]],[T]]],[11,R[13],E,E,38,[[["self"]],[T]]],[11,R[14],E,E,38,[[["self"]],[R[26]]]],[11,R[10],E,E,39,[[[U]],[R[0]]]],[11,"from",E,E,39,[[[T]],[T]]],[11,"into",E,E,39,[[],[U]]],[11,R[12],E,E,39,[[],[R[0]]]],[11,R[25],E,E,39,[[["self"]],[T]]],[11,R[13],E,E,39,[[["self"]],[T]]],[11,R[14],E,E,39,[[["self"]],[R[26]]]],[11,R[10],E,E,16,[[[U]],[R[0]]]],[11,"from",E,E,16,[[[T]],[T]]],[11,"into",E,E,16,[[],[U]]],[11,R[12],E,E,16,[[],[R[0]]]],[11,R[25],E,E,16,[[["self"]],[T]]],[11,R[13],E,E,16,[[["self"]],[T]]],[11,R[14],E,E,16,[[["self"]],[R[26]]]],[11,R[10],E,E,19,[[[U]],[R[0]]]],[11,"from",E,E,19,[[[T]],[T]]],[11,"into",E,E,19,[[],[U]]],[11,R[12],E,E,19,[[],[R[0]]]],[11,R[25],E,E,19,[[["self"]],[T]]],[11,R[13],E,E,19,[[["self"]],[T]]],[11,R[14],E,E,19,[[["self"]],[R[26]]]],[11,R[10],E,E,21,[[[U]],[R[0]]]],[11,"from",E,E,21,[[[T]],[T]]],[11,"into",E,E,21,[[],[U]]],[11,R[12],E,E,21,[[],[R[0]]]],[11,R[25],E,E,21,[[["self"]],[T]]],[11,R[13],E,E,21,[[["self"]],[T]]],[11,R[14],E,E,21,[[["self"]],[R[26]]]],[11,R[10],E,E,26,[[[U]],[R[0]]]],[11,"from",E,E,26,[[[T]],[T]]],[11,"into",E,E,26,[[],[U]]],[11,R[12],E,E,26,[[],[R[0]]]],[11,R[25],E,E,26,[[["self"]],[T]]],[11,R[13],E,E,26,[[["self"]],[T]]],[11,R[14],E,E,26,[[["self"]],[R[26]]]],[11,R[10],R[162],E,17,[[[U]],[R[0]]]],[11,"from",E,E,17,[[[T]],[T]]],[11,"into",E,E,17,[[],[U]]],[11,R[12],E,E,17,[[],[R[0]]]],[11,R[25],E,E,17,[[["self"]],[T]]],[11,R[13],E,E,17,[[["self"]],[T]]],[11,R[14],E,E,17,[[["self"]],[R[26]]]],[11,R[10],E,E,18,[[[U]],[R[0]]]],[11,"from",E,E,18,[[[T]],[T]]],[11,"into",E,E,18,[[],[U]]],[11,R[12],E,E,18,[[],[R[0]]]],[11,R[25],E,E,18,[[["self"]],[T]]],[11,R[13],E,E,18,[[["self"]],[T]]],[11,R[14],E,E,18,[[["self"]],[R[26]]]],[11,R[10],R[166],E,20,[[[U]],[R[0]]]],[11,"from",E,E,20,[[[T]],[T]]],[11,"into",E,E,20,[[],[U]]],[11,R[12],E,E,20,[[],[R[0]]]],[11,R[25],E,E,20,[[["self"]],[T]]],[11,R[13],E,E,20,[[["self"]],[T]]],[11,R[14],E,E,20,[[["self"]],[R[26]]]],[11,R[10],R[128],E,22,[[[U]],[R[0]]]],[11,"from",E,E,22,[[[T]],[T]]],[11,"into",E,E,22,[[],[U]]],[11,R[12],E,E,22,[[],[R[0]]]],[11,R[25],E,E,22,[[["self"]],[T]]],[11,R[13],E,E,22,[[["self"]],[T]]],[11,R[14],E,E,22,[[["self"]],[R[26]]]],[11,R[10],E,E,23,[[[U]],[R[0]]]],[11,"from",E,E,23,[[[T]],[T]]],[11,"into",E,E,23,[[],[U]]],[11,R[12],E,E,23,[[],[R[0]]]],[11,R[25],E,E,23,[[["self"]],[T]]],[11,R[13],E,E,23,[[["self"]],[T]]],[11,R[14],E,E,23,[[["self"]],[R[26]]]],[11,R[10],E,E,24,[[[U]],[R[0]]]],[11,"from",E,E,24,[[[T]],[T]]],[11,"into",E,E,24,[[],[U]]],[11,R[12],E,E,24,[[],[R[0]]]],[11,R[25],E,E,24,[[["self"]],[T]]],[11,R[13],E,E,24,[[["self"]],[T]]],[11,R[14],E,E,24,[[["self"]],[R[26]]]],[11,R[10],E,E,25,[[[U]],[R[0]]]],[11,"from",E,E,25,[[[T]],[T]]],[11,"into",E,E,25,[[],[U]]],[11,R[12],E,E,25,[[],[R[0]]]],[11,R[25],E,E,25,[[["self"]],[T]]],[11,R[13],E,E,25,[[["self"]],[T]]],[11,R[14],E,E,25,[[["self"]],[R[26]]]],[11,"eq",R[170],E,4,[[["self"],[R[154]]],["bool"]]],[11,"eq",R[128],E,24,[[["self"],[R[142]]],["bool"]]],[11,"eq",R[169],E,2,[[["spsel"],["self"]],["bool"]]],[11,"eq",R[128],E,23,[[["self"],[R[172]]],["bool"]]],[11,"ne",E,E,23,[[["self"],[R[172]]],["bool"]]],[11,"eq",E,E,22,[[[R[173]],["self"]],["bool"]]],[11,"eq",R[171],E,5,[[["primask"],["self"]],["bool"]]],[11,"eq",R[169],E,3,[[["self"],["fpca"]],["bool"]]],[11,"eq",E,E,1,[[["self"],["npriv"]],["bool"]]],[11,"fmt",R[167],E,15,[[["self"],[R[55]]],[[R[0],["error"]],["error"]]]],[11,"fmt",R[171],E,5,[[["self"],[R[55]]],[[R[0],["error"]],["error"]]]],[11,"fmt",R[128],E,24,[[["self"],[R[55]]],[[R[0],["error"]],["error"]]]],[11,"fmt",R[169],E,3,[[["self"],[R[55]]],[[R[0],["error"]],["error"]]]],[11,"fmt",E,E,29,[[["self"],[R[55]]],[[R[0],["error"]],["error"]]]],[11,"fmt",R[128],E,23,[[["self"],[R[55]]],[[R[0],["error"]],["error"]]]],[11,"fmt",E,E,22,[[["self"],[R[55]]],[[R[0],["error"]],["error"]]]],[11,"fmt",R[170],E,4,[[["self"],[R[55]]],[[R[0],["error"]],["error"]]]],[11,"fmt",R[169],E,2,[[["self"],[R[55]]],[[R[0],["error"]],["error"]]]],[11,"fmt",E,E,1,[[["self"],[R[55]]],[[R[0],["error"]],["error"]]]],[11,R[4],R[106],E,37,[[["self"]]]],[11,R[4],E,E,36,[[["self"]]]],[11,R[4],E,E,32,[[["self"]]]],[11,R[4],E,E,33,[[["self"]]]],[11,R[4],E,E,38,[[["self"]]]],[11,R[4],E,E,31,[[["self"]]]],[11,R[4],E,E,39,[[["self"]]]],[11,R[4],E,E,34,[[["self"]]]],[11,"clone",R[169],E,29,[[["self"]],["control"]]],[11,"clone",R[171],E,5,[[["self"]],["primask"]]],[11,"clone",R[128],E,24,[[["self"]],[R[142]]]],[11,"clone",R[170],E,4,[[["self"]],[R[154]]]],[11,"clone",R[169],E,1,[[["self"]],["npriv"]]],[11,"clone",R[167],E,15,[[["self"]],[R[143]]]],[11,"clone",R[169],E,2,[[["self"]],["spsel"]]],[11,"clone",E,E,3,[[["self"]],["fpca"]]],[11,"clone",R[128],E,23,[[["self"]],[R[172]]]],[11,"clone",E,E,22,[[["self"]],[R[173]]]],[11,R[5],R[106],E,36,[[["self"]]]],[11,R[4],E,E,19,[[["self"]]]],[11,R[4],E,E,21,[[["self"]]]],[11,R[4],E,E,26,[[["self"]]]],[11,"new",R[158],R[174],27,[[],[R[67]]]],[11,"new",E,R[175],28,[[[T]],["mutex"]]],[11,R[25],E,R[176],28,[[["self"],[R[67]]],[T]]],[11,"bits",R[169],"Returns the contents of the register as raw bits",29,[[["self"]],["u32"]]],[11,"npriv",E,R[150],29,[[["self"]],["npriv"]]],[11,"spsel",E,R[151],29,[[["self"]],["spsel"]]],[11,"fpca",E,R[152],29,[[["self"]],["fpca"]]],[11,"is_privileged",E,"Is in privileged thread mode?",1,[[["self"]],["bool"]]],[11,"is_unprivileged",E,"Is in unprivileged thread mode?",1,[[["self"]],["bool"]]],[11,"is_msp",E,"Is MSP the current stack pointer?",2,[[["self"]],["bool"]]],[11,"is_psp",E,"Is PSP the current stack pointer?",2,[[["self"]],["bool"]]],[11,R[153],E,"Is a floating-point context active?",3,[[["self"]],["bool"]]],[11,"is_not_active",E,"Is a floating-point context not active?",3,[[["self"]],["bool"]]],[11,R[153],R[170],"All exceptions are active",4,[[["self"]],["bool"]]],[11,R[156],E,"All exceptions, except for NMI, are inactive",4,[[["self"]],["bool"]]],[11,R[153],R[171],"All exceptions with configurable priority are active",5,[[["self"]],["bool"]]],[11,R[156],E,"All exceptions with configurable priority are inactive",5,[[["self"]],["bool"]]],[11,"write_u8",R[164],"Writes an `u8` payload into the stimulus port",30,[[["self"],["u8"]]]],[11,"write_u16",E,"Writes an `u16` payload into the stimulus port",30,[[["self"],["u16"]]]],[11,"write_u32",E,"Writes an `u32` payload into the stimulus port",30,[[["self"],["u32"]]]],[11,"is_fifo_ready",E,"Returns `true` if the stimulus port is ready to accept…",30,[[["self"]],["bool"]]],[11,"iciallu",R[106],R[107],31,[[["self"]]]],[11,"icimvau",E,R[108],31,[[["self"],["u32"]]]],[11,"dcimvac",E,R[109],31,[[["self"],["u32"]]]],[11,"dcisw",E,R[110],31,[[["self"],["u16"]]]],[11,"dccmvau",E,R[111],31,[[["self"],["u32"]]]],[11,"dccmvac",E,R[112],31,[[["self"],["u32"]]]],[11,"dccsw",E,R[113],31,[[["self"],["u16"]]]],[11,"dccimvac",E,R[114],31,[[["self"],["u32"]]]],[11,"dccisw",E,R[115],31,[[["self"],["u16"]]]],[11,"bpiall",E,R[116],31,[[["self"]]]],[11,"ptr",E,R[144],31,[[]]],[11,"select_cache",E,"Selects the current CCSIDR",32,[[["self"],[R[119]],["u8"]]]],[11,"cache_num_sets_ways",E,"Returns the number of sets and ways in the selected cache",32,[[["self"],[R[119]],["u8"]]]],[11,"ptr",E,R[144],32,[[]]],[11,"enable_trace",E,"Enables TRACE. This is for example required by the…",33,[[["self"]]]],[11,"disable_trace",E,"Disables TRACE. See `DCB::enable_trace()` for more details",33,[[["self"]]]],[11,"is_debugger_attached",E,"Is there a debugger attached? (see note)",33,[[],["bool"]]],[11,"ptr",E,R[144],33,[[]]],[11,"ptr",E,R[144],34,[[]]],[11,"ptr",E,R[144],36,[[]]],[11,"ptr",E,R[144],37,[[]]],[11,"clear_current",E,"Clears current value to 0",38,[[["self"]]]],[11,"disable_counter",E,"Disables counter",38,[[["self"]]]],[11,"disable_interrupt",E,"Disables SysTick interrupt",38,[[["self"]]]],[11,"enable_counter",E,"Enables counter",38,[[["self"]]]],[11,"enable_interrupt",E,"Enables SysTick interrupt",38,[[["self"]]]],[11,"get_clock_source",E,"Gets clock source",38,[[["self"]],[R[143]]]],[11,"get_current",E,"Gets current value",38,[[],["u32"]]],[11,"get_reload",E,"Gets reload value",38,[[],["u32"]]],[11,"get_ticks_per_10ms",E,"Returns the reload value with which the counter would wrap…",38,[[],["u32"]]],[11,"has_reference_clock",E,"Checks if an external reference clock is available",38,[[],["bool"]]],[11,"has_wrapped",E,"Checks if the counter wrapped (underflowed) since the last…",38,[[["self"]],["bool"]]],[11,"is_counter_enabled",E,"Checks if counter is enabled",38,[[["self"]],["bool"]]],[11,"is_interrupt_enabled",E,"Checks if SysTick interrupt is enabled",38,[[["self"]],["bool"]]],[11,"is_precise",E,"Checks if the calibration value is precise",38,[[],["bool"]]],[11,"set_clock_source",E,"Sets clock source",38,[[["self"],[R[143]]]]],[11,"set_reload",E,"Sets reload value",38,[[["self"],["u32"]]]],[11,"ptr",E,R[144],38,[[]]],[11,"ptr",E,R[144],39,[[]]],[11,"irqn",R[128],"Returns the IRQ number of this `Exception`",22,[[["self"]],["i8"]]],[11,"from",E,"Converts a `byte` into `VectActive`",23,[[["u8"]],[[R[172]],[R[20],[R[172]]]]]]],"p":[[8,"Nr"],[4,"Npriv"],[4,"Spsel"],[4,"Fpca"],[4,R[182]],[4,"Primask"],[3,R[117]],[3,R[117]],[3,R[117]],[3,R[117]],[3,R[117]],[4,R[178]],[3,R[117]],[3,R[117]],[3,R[117]],[4,R[181]],[3,R[177]],[3,R[120]],[3,R[117]],[3,"DWT"],[3,R[117]],[3,"NVIC"],[4,R[127]],[4,R[179]],[4,R[180]],[3,R[117]],[3,"SCB"],[3,R[69]],[3,"Mutex"],[3,"Control"],[3,"Stim"],[3,"CBP"],[3,"CPUID"],[3,"DCB"],[3,"FPB"],[3,"FPU"],[3,"ITM"],[3,"MPU"],[3,"SYST"],[3,"TPIU"]]};
searchIndex["cstr_core"]={"doc":E,"i":[[6,"c_char","cstr_core",E,N,N],[3,"CStr",E,"Representation of a borrowed C string.",N,N],[3,R[72],E,"An error returned from [`CStr::from_bytes_with_nul`] to…",N,N],[11,"from_ptr",E,"Casts a raw C string to a safe C string wrapper.",0,[[],["cstr"]]],[11,"from_bytes_with_nul",E,"Creates a C string wrapper from a byte slice.",0,[[],[["cstr"],[R[0],["cstr",R[70]]],[R[70]]]]],[11,"from_bytes_with_nul_unchecked",E,"Unsafely creates a C string wrapper from a byte slice.",0,[[],["cstr"]]],[11,"as_ptr",E,"Returns the inner pointer to this C string.",0,[[["self"]]]],[11,"to_bytes",E,"Converts this C string to a byte slice.",0,[[["self"]]]],[11,"to_bytes_with_nul",E,"Converts this C string to a byte slice containing the…",0,[[["self"]]]],[11,"to_str",E,"Yields a [`&str`] slice if the `CStr` contains valid UTF-8.",0,[[["self"]],[[R[71]],[R[0],["str",R[71]]],["str"]]]],[11,R[25],E,E,0,[[["self"]],[T]]],[11,R[13],E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[["self"]],[R[26]]]],[11,R[10],E,E,1,[[[U]],[R[0]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[12],E,E,1,[[],[R[0]]]],[11,R[25],E,E,1,[[["self"]],[T]]],[11,R[13],E,E,1,[[["self"]],[T]]],[11,R[14],E,E,1,[[["self"]],[R[26]]]],[11,"fmt",E,E,1,[[["self"],[R[55]]],[R[0]]]],[11,"fmt",E,E,1,[[["self"],[R[55]]],[R[0]]]],[11,"fmt",E,E,0,[[["self"],[R[55]]],[R[0]]]],[11,"eq",E,E,1,[[[R[70]],["self"]],["bool"]]],[11,"ne",E,E,1,[[[R[70]],["self"]],["bool"]]],[11,"eq",E,E,0,[[["cstr"],["self"]],["bool"]]],[11,"cmp",E,E,0,[[["cstr"],["self"]],[R[49]]]],[11,R[56],E,E,0,[[["cstr"],["self"]],[[R[20],[R[49]]],[R[49]]]]],[11,"hash",E,E,0,[[["self"],["__h"]]]],[11,"as_ref",E,E,0,[[["self"]],["cstr"]]],[11,"clone",E,E,1,[[["self"]],[R[70]]]]],"p":[[3,"CStr"],[3,R[72]]]};
searchIndex["cty"]={"doc":"Type aliases to C types like c_int for use with bindgen","i":[[6,"c_char","cty",E,N,N],[6,"c_int",E,E,N,N],[6,"c_uint",E,E,N,N],[6,"c_long",E,E,N,N],[6,"c_ulong",E,E,N,N],[6,"int8_t",E,E,N,N],[6,"int16_t",E,E,N,N],[6,"int32_t",E,E,N,N],[6,"int64_t",E,E,N,N],[6,"uint8_t",E,E,N,N],[6,"uint16_t",E,E,N,N],[6,"uint32_t",E,E,N,N],[6,"uint64_t",E,E,N,N],[6,"c_schar",E,E,N,N],[6,"c_short",E,E,N,N],[6,"c_longlong",E,E,N,N],[6,"c_uchar",E,E,N,N],[6,"c_ushort",E,E,N,N],[6,"c_ulonglong",E,E,N,N],[6,"c_float",E,E,N,N],[6,"c_double",E,E,N,N],[6,"intmax_t",E,E,N,N],[6,"uintmax_t",E,E,N,N],[6,"size_t",E,E,N,N],[6,"ptrdiff_t",E,E,N,N],[6,"intptr_t",E,E,N,N],[6,"uintptr_t",E,E,N,N],[6,"ssize_t",E,E,N,N],[6,R[1],E,E,N,N]],"p":[]};
searchIndex["generic_array"]={"doc":"This crate implements a structure that can be used as a…","i":[[3,R[89],R[73],"Struct representing a generic array - `GenericArray<T, N>`…",N,N],[0,"arr",E,"Implementation for `arr!` macro.",N,N],[6,"Inc","generic_array::arr","Helper type for `arr!` macro",N,N],[8,R[82],E,"Helper trait for `arr!` macro",N,N],[16,R[33],E,"Resulting length",0,N],[0,"functional",R[73],"Functional programming with generic sequences",N,N],[6,"MappedSequence","generic_array::functional","Accessor type for a mapped generic sequence",N,N],[8,R[83],E,"Defines the relationship between one generic sequence and…",N,N],[16,"Mapped",E,"Mapped sequence type",1,N],[8,R[84],E,"Defines functional programming methods for generic sequences",N,N],[11,"map",E,"Maps a `GenericSequence` to another `GenericSequence`.",2,[[["f"]],[R[74]]]],[11,"zip",E,"Combines two `GenericSequence` instances and iterates…",2,[[["rhs"],["f"]],[R[74]]]],[11,"fold",E,"Folds (or reduces) a sequence of data into a single value.",2,[[[U],["f"]],[U]]],[0,"iter",R[73],"`GenericArray` iterator implementation.",N,N],[3,R[85],R[78],"An iterator that moves out of a `GenericArray`",N,N],[11,R[75],E,"Returns the remaining items of this iterator as a slice",3,[[["self"]]]],[11,R[76],E,"Returns the remaining items of this iterator as a mutable…",3,[[["self"]]]],[0,"sequence",R[73],"Useful traits for manipulating sequences of data stored in…",N,N],[6,"SequenceItem","generic_array::sequence","Accessor for `GenericSequence` item type, which is really…",N,N],[8,R[86],E,"Defines some sequence with an associated length and…",N,N],[16,"Length",E,"`GenericArray` associated length",4,N],[16,"Sequence",E,"Concrete sequence type used in conjuction with reference…",4,N],[10,R[79],E,"Initializes a new sequence instance using the given…",4,[[["f"]]]],[8,R[87],E,"Defines any `GenericSequence` which can be lengthened or…",N,N],[16,"Longer",E,"`GenericSequence` that has one more element than `Self`",5,N],[10,"append",E,"Returns a new array with the given element appended to the…",5,[[[T]]]],[10,"prepend",E,"Returns a new array with the given element prepended to…",5,[[[T]]]],[8,"Shorten",E,"Defines a `GenericSequence` which can be shortened by…",N,N],[16,"Shorter",E,"`GenericSequence` that has one less element than `Self`",6,N],[10,R[80],E,"Returns a new array without the last element, and the last…",6,[[]]],[10,R[81],E,"Returns a new array without the first element, and the…",6,[[]]],[8,"Split",E,"Defines a `GenericSequence` that can be split into two…",N,N],[16,"First",E,"First part of the resulting split array",7,N],[16,"Second",E,"Second part of the resulting split array",7,N],[10,"split",E,"Splits an array at the given index, returning the separate…",7,[[]]],[8,"Concat",E,"Defines `GenericSequence`s which can be joined together,…",N,N],[16,"Rest",E,"Sequence to be concatenated with `self`",8,N],[16,R[33],E,"Resulting sequence formed by the concatenation.",8,N],[10,"concat",E,"Concatenate, or join, two sequences.",8,[[]]],[8,R[88],R[73],"Trait making `GenericArray` work, marking types to be used…",N,N],[16,"ArrayType",E,"Associated type representing the array type for the number",9,N],[11,R[75],E,"Extracts a slice containing the entire array.",10,[[["self"]]]],[11,R[76],E,"Extracts a mutable slice containing the entire array.",10,[[["self"]]]],[11,"from_slice",E,"Converts slice to a generic array reference with inferred…",10,[[],[R[77]]]],[11,"from_mut_slice",E,"Converts mutable slice to a mutable generic array reference",10,[[],[R[77]]]],[11,"clone_from_slice",E,"Construct a `GenericArray` from a slice by cloning its…",10,[[],[R[77]]]],[11,"from_exact_iter",E,"Creates a new `GenericArray` instance from an iterator…",10,[[["i"]],[R[20]]]],[14,"arr",E,"Macro allowing for easy generation of Generic Arrays.…",N,N],[11,R[10],E,E,10,[[[U]],[R[0]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[22],E,E,10,[[],["i"]]],[11,"into",E,E,10,[[],[U]]],[11,R[12],E,E,10,[[],[R[0]]]],[11,R[25],E,E,10,[[["self"]],[T]]],[11,R[13],E,E,10,[[["self"]],[T]]],[11,R[14],E,E,10,[[["self"]],[R[26]]]],[11,R[10],R[78],E,3,[[[U]],[R[0]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[22],E,E,3,[[],["i"]]],[11,"into",E,E,3,[[],[U]]],[11,R[12],E,E,3,[[],[R[0]]]],[11,R[25],E,E,3,[[["self"]],[T]]],[11,R[13],E,E,3,[[["self"]],[T]]],[11,R[14],E,E,3,[[["self"]],[R[26]]]],[11,"map",R[73],E,10,[[["f"]],[R[74]]]],[11,"zip",E,E,10,[[["rhs"],["f"]],[R[74]]]],[11,"fold",E,E,10,[[[U],["f"]],[U]]],[11,R[79],E,E,10,[[["f"]],[R[77]]]],[11,"append",E,E,10,[[[T]]]],[11,"prepend",E,E,10,[[[T]]]],[11,R[80],E,E,10,[[]]],[11,R[81],E,E,10,[[]]],[11,"split",E,E,10,[[]]],[11,"concat",E,E,10,[[]]],[11,R[4],E,E,10,[[["self"]]]],[11,"fmt",E,E,10,[[["self"],[R[55]]],[R[0]]]],[11,"fmt",R[78],E,3,[[["self"],[R[55]]],[R[0]]]],[11,"eq",R[73],E,10,[[["self"]],["bool"]]],[11,"cmp",E,E,10,[[["self"],[R[77]]],[R[49]]]],[11,R[56],E,E,10,[[["self"],[R[77]]],[[R[20],[R[49]]],[R[49]]]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"hash",E,E,10,[[["self"],["h"]]]],[11,R[5],E,E,10,[[["self"]]]],[11,"drop",R[78],E,3,[[["self"]]]],[11,R[23],E,E,3,[[["self"]],[R[20]]]],[11,"from_iter",R[73],E,10,[[["i"]],[R[77]]]],[11,"next",R[78],E,3,[[["self"]],[R[20]]]],[11,R[24],E,E,3,[[["self"]]]],[11,"count",E,E,3,[[],[R[7]]]],[11,"nth",E,E,3,[[["self"],[R[7]]],[R[20]]]],[11,"last",E,E,3,[[],[R[20]]]],[11,R[22],R[73],E,10,[[]]],[11,"len",R[78],E,3,[[["self"]],[R[7]]]],[11,"as_ref",R[73],E,10,[[["self"]]]],[11,"as_mut",E,E,10,[[["self"]]]],[11,"fmt",E,E,10,[[["self"],[R[55]]],[R[0]]]],[11,"fmt",E,E,10,[[["self"],[R[55]]],[R[0]]]],[11,"clone",E,E,10,[[["self"]],[R[77]]]],[11,"clone",R[78],E,3,[[["self"]],["self"]]],[11,R[60],R[73],E,10,[[],["self"]]],[11,R[25],E,E,10,[[["self"]]]],[11,R[13],E,E,10,[[["self"]]]]],"p":[[8,R[82]],[8,R[83]],[8,R[84]],[3,R[85]],[8,R[86]],[8,R[87]],[8,"Shorten"],[8,"Split"],[8,"Concat"],[8,R[88]],[3,R[89]]]};
searchIndex["memchr"]={"doc":"The `memchr` crate provides heavily optimized routines for…","i":[[3,"Memchr",R[19],"An iterator for `memchr`.",N,N],[3,"Memchr2",E,"An iterator for `memchr2`.",N,N],[3,"Memchr3",E,"An iterator for `memchr3`.",N,N],[5,"memchr_iter",E,R[16],N,[[["u8"]],[R[19]]]],[5,"memchr2_iter",E,R[15],N,[[["u8"]],[R[17]]]],[5,"memchr3_iter",E,R[15],N,[[["u8"]],[R[18]]]],[5,"memrchr_iter",E,R[16],N,[[["u8"]],[["rev",[R[19]]],[R[19]]]]],[5,"memrchr2_iter",E,R[15],N,[[["u8"]],[["rev",[R[17]]],[R[17]]]]],[5,"memrchr3_iter",E,R[15],N,[[["u8"]],[["rev",[R[18]]],[R[18]]]]],[5,R[19],E,"Search for the first occurrence of a byte in a slice.",N,[[["u8"]],[[R[20],[R[7]]],[R[7]]]]],[5,R[17],E,"Like `memchr`, but searches for two bytes instead of one.",N,[[["u8"]],[[R[20],[R[7]]],[R[7]]]]],[5,R[18],E,"Like `memchr`, but searches for three bytes instead of one.",N,[[["u8"]],[[R[20],[R[7]]],[R[7]]]]],[5,"memrchr",E,"Search for the last occurrence of a byte in a slice.",N,[[["u8"]],[[R[20],[R[7]]],[R[7]]]]],[5,"memrchr2",E,"Like `memrchr`, but searches for two bytes instead of one.",N,[[["u8"]],[[R[20],[R[7]]],[R[7]]]]],[5,"memrchr3",E,"Like `memrchr`, but searches for three bytes instead of one.",N,[[["u8"]],[[R[20],[R[7]]],[R[7]]]]],[11,"new",E,R[21],0,[[["u8"]],[R[19]]]],[11,"new",E,R[21],1,[[["u8"]],[R[17]]]],[11,"new",E,"Create a new `Memchr3` that's initialized to zero with a…",2,[[["u8"]],[R[18]]]],[11,R[10],E,E,0,[[[U]],[R[0]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[22],E,E,0,[[],["i"]]],[11,"into",E,E,0,[[],[U]]],[11,R[12],E,E,0,[[],[R[0]]]],[11,R[25],E,E,0,[[["self"]],[T]]],[11,R[13],E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[["self"]],[R[26]]]],[11,R[10],E,E,1,[[[U]],[R[0]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[22],E,E,1,[[],["i"]]],[11,"into",E,E,1,[[],[U]]],[11,R[12],E,E,1,[[],[R[0]]]],[11,R[25],E,E,1,[[["self"]],[T]]],[11,R[13],E,E,1,[[["self"]],[T]]],[11,R[14],E,E,1,[[["self"]],[R[26]]]],[11,R[10],E,E,2,[[[U]],[R[0]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[22],E,E,2,[[],["i"]]],[11,"into",E,E,2,[[],[U]]],[11,R[12],E,E,2,[[],[R[0]]]],[11,R[25],E,E,2,[[["self"]],[T]]],[11,R[13],E,E,2,[[["self"]],[T]]],[11,R[14],E,E,2,[[["self"]],[R[26]]]],[11,R[23],E,E,0,[[["self"]],[R[20]]]],[11,R[23],E,E,1,[[["self"]],[R[20]]]],[11,R[23],E,E,2,[[["self"]],[R[20]]]],[11,"next",E,E,0,[[["self"]],[[R[20],[R[7]]],[R[7]]]]],[11,R[24],E,E,0,[[["self"]]]],[11,"next",E,E,1,[[["self"]],[[R[20],[R[7]]],[R[7]]]]],[11,R[24],E,E,1,[[["self"]]]],[11,"next",E,E,2,[[["self"]],[[R[20],[R[7]]],[R[7]]]]],[11,R[24],E,E,2,[[["self"]]]]],"p":[[3,"Memchr"],[3,"Memchr2"],[3,"Memchr3"]]};
searchIndex["mylib"]={"doc":"Sensor app that reads sensor data from a temperature…","i":[[5,"main","mylib","main() will be called at Mynewt startup. It replaces the C…",N,[[]]],[5,"panic",E,"This function is called on panic, like an assertion…",N,[[["panicinfo"]]]],[0,"mynewt",E,"Mynewt API for Rust. Contains Rust bindings for Mynewt API…",N,N],[7,"g_encoder",R[189],"Global CBOR encoder",N,N],[7,"root_map",E,"Global CBOR root map",N,N],[0,"macros",E,"Mynewt Macros for Rust",N,N],[0,"encoding",E,"Mynewt Encoding API for Rust",N,N],[0,"json",R[185],"Contains Rust bindings for Mynewt JSON Encoding API…",N,N],[3,R[202],R[313],E,N,N],[12,R[287],E,E,0,N],[12,"align",E,E,0,N],[3,R[203],E,E,N,N],[12,"0",E,E,1,N],[3,R[280],E,E,N,N],[12,"jv_pad1",E,E,2,N],[12,"jv_type",E,E,2,N],[12,"jv_len",E,E,2,N],[12,"jv_val",E,E,2,N],[3,R[281],E,E,N,N],[12,U,E,E,3,N],[12,"fl",E,E,3,N],[12,"str",E,E,3,N],[12,R[282],E,E,3,N],[12,R[183],E,E,3,N],[3,R[283],E,E,N,N],[12,"keys",E,E,4,N],[12,"values",E,E,4,N],[3,R[284],E,E,N,N],[12,"je_write",E,E,5,N],[12,"je_arg",E,E,5,N],[12,R[254],E,E,5,N],[12,R[285],E,E,5,N],[3,R[348],E,E,N,N],[12,"name",E,E,6,N],[12,"value",E,E,6,N],[3,R[349],E,E,N,N],[12,"element_type",E,E,7,N],[12,"arr",E,E,7,N],[12,"count",E,E,7,N],[12,"maxlen",E,E,7,N],[3,R[350],E,E,N,N],[12,"objects",E,E,8,N],[12,"strings",E,E,8,N],[12,"integers",E,E,8,N],[12,"uintegers",E,E,8,N],[12,"reals",E,E,8,N],[12,"booleans",E,E,8,N],[12,R[183],E,E,8,N],[3,R[351],E,E,N,N],[12,"subtype",E,E,9,N],[12,"base",E,E,9,N],[12,"stride",E,E,9,N],[3,R[352],E,E,N,N],[12,"ptrs",E,E,10,N],[12,"store",E,E,10,N],[12,"storelen",E,E,10,N],[3,R[353],E,E,N,N],[12,"store",E,E,11,N],[3,R[354],E,E,N,N],[12,"store",E,E,12,N],[3,R[355],E,E,N,N],[12,"store",E,E,13,N],[3,R[356],E,E,N,N],[12,"store",E,E,14,N],[3,R[357],E,E,N,N],[12,"attribute",E,E,15,N],[12,"type_",E,E,15,N],[12,"addr",E,E,15,N],[12,"dflt",E,E,15,N],[12,"len",E,E,15,N],[12,"map",E,E,15,N],[12,"nodefault",E,E,15,N],[3,R[358],E,E,N,N],[12,"integer",E,E,16,N],[12,"uinteger",E,E,16,N],[12,"real",E,E,16,N],[12,"string",E,E,16,N],[12,"boolean",E,E,16,N],[12,R[184],E,E,16,N],[12,"array",E,E,16,N],[12,"offset",E,E,16,N],[12,R[183],E,E,16,N],[3,R[359],E,E,N,N],[12,"integer",E,E,17,N],[12,"uinteger",E,E,17,N],[12,"real",E,E,17,N],[12,"boolean",E,E,17,N],[12,R[184],E,E,17,N],[12,"check",E,E,17,N],[12,R[183],E,E,17,N],[3,R[324],E,E,N,N],[12,"jb_readn",E,E,18,N],[12,"jb_read_next",E,E,18,N],[12,"jb_read_prev",E,E,18,N],[5,"json_encode_object_start",E,E,N,N],[5,"json_encode_object_key",E,E,N,N],[5,"json_encode_object_entry",E,E,N,N],[5,"json_encode_object_finish",E,E,N,N],[5,"json_encode_array_name",E,E,N,N],[5,"json_encode_array_start",E,E,N,N],[5,"json_encode_array_value",E,E,N,N],[5,"json_encode_array_finish",E,E,N,N],[5,"json_read_object",E,E,N,N],[5,"json_read_array",E,E,N,N],[6,R[186],E,E,N,N],[6,R[187],E,E,N,N],[6,R[188],E,E,N,N],[6,R[286],E,E,N,N],[6,"json_type",E,E,N,N],[6,"json_buffer_read_next_byte_t",E,E,N,N],[6,"json_buffer_read_prev_byte_t",E,E,N,N],[6,"json_buffer_readn_t",E,E,N,N],[17,"JSON_VALUE_TYPE_BOOL",E,E,N,N],[17,"JSON_VALUE_TYPE_UINT64",E,E,N,N],[17,"JSON_VALUE_TYPE_INT64",E,E,N,N],[17,"JSON_VALUE_TYPE_STRING",E,E,N,N],[17,"JSON_VALUE_TYPE_ARRAY",E,E,N,N],[17,"JSON_VALUE_TYPE_OBJECT",E,E,N,N],[17,"JSON_ATTR_MAX",E,E,N,N],[17,"JSON_VAL_MAX",E,E,N,N],[17,"JSON_ERR_OBSTART",E,E,N,N],[17,"JSON_ERR_ATTRSTART",E,E,N,N],[17,"JSON_ERR_BADATTR",E,E,N,N],[17,"JSON_ERR_ATTRLEN",E,E,N,N],[17,"JSON_ERR_NOARRAY",E,E,N,N],[17,"JSON_ERR_NOBRAK",E,E,N,N],[17,"JSON_ERR_STRLONG",E,E,N,N],[17,"JSON_ERR_TOKLONG",E,E,N,N],[17,"JSON_ERR_BADTRAIL",E,E,N,N],[17,"JSON_ERR_ARRAYSTART",E,E,N,N],[17,"JSON_ERR_OBJARR",E,E,N,N],[17,"JSON_ERR_SUBTOOLONG",E,E,N,N],[17,"JSON_ERR_BADSUBTRAIL",E,E,N,N],[17,"JSON_ERR_SUBTYPE",E,E,N,N],[17,"JSON_ERR_BADSTRING",E,E,N,N],[17,"JSON_ERR_CHECKFAIL",E,E,N,N],[17,"JSON_ERR_NOPARSTR",E,E,N,N],[17,"JSON_ERR_BADENUM",E,E,N,N],[17,"JSON_ERR_QNONSTRING",E,E,N,N],[17,"JSON_ERR_NONQSTRING",E,E,N,N],[17,"JSON_ERR_MISC",E,E,N,N],[17,"JSON_ERR_BADNUM",E,E,N,N],[17,"JSON_ERR_NULLPTR",E,E,N,N],[17,"json_type_t_integer",E,E,N,N],[17,"json_type_t_uinteger",E,E,N,N],[17,"json_type_t_real",E,E,N,N],[17,"json_type_t_string",E,E,N,N],[17,"json_type_t_boolean",E,E,N,N],[17,"json_type_t_character",E,E,N,N],[17,"json_type_t_object",E,E,N,N],[17,"json_type_t_structobject",E,E,N,N],[17,"json_type_t_array",E,E,N,N],[17,"json_type_t_check",E,E,N,N],[17,"json_type_t_ignore",E,E,N,N],[11,"new",E,E,0,[[[R[287]]],["self"]]],[11,"get_bit",E,E,0,[[["self"],[R[7]]],["bool"]]],[11,"set_bit",E,E,0,[[["self"],[R[7]],["bool"]]]],[11,"get",E,E,0,[[["self"],[R[7]],["u8"]],["u64"]]],[11,"set",E,E,0,[[["self"],[R[7]],["u64"],["u8"]]]],[11,"new",E,E,1,[[],["self"]]],[11,"as_ref",E,E,1,[[["self"]],[T]]],[11,"as_mut",E,E,1,[[["self"]],[T]]],[11,R[289],E,E,5,[[["self"]],["c_int"]]],[11,R[290],E,E,5,[[["self"],["c_int"]]]],[11,R[268],E,E,5,[[["c_int"]],[["u8"],[R[269],["u8"]]]]],[0,"tinycbor",R[185],"Contains Rust bindings for Mynewt TinyCBOR Encoding API…",N,N],[3,R[360],R[314],E,N,N],[12,"write",E,E,19,N],[12,"read",E,E,19,N],[3,"File",E,E,N,N],[12,"vmt",E,E,20,N],[3,R[325],E,E,N,N],[12,"write",E,E,21,N],[12,"bytes_written",E,E,21,N],[3,R[361],E,E,N,N],[12,"iov_base",E,E,22,N],[12,"iov_len",E,E,22,N],[3,R[362],E,E,N,N],[12,"writer",E,E,23,N],[12,"writer_arg",E,E,23,N],[12,"added",E,E,23,N],[12,"flags",E,E,23,N],[3,R[326],E,E,N,N],[12,"get8",E,E,24,N],[12,"get16",E,E,24,N],[12,"get32",E,E,24,N],[12,"get64",E,E,24,N],[12,"cmp",E,E,24,N],[12,"cpy",E,E,24,N],[12,"message_size",E,E,24,N],[3,R[363],E,E,N,N],[12,"d",E,E,25,N],[12,"end",E,E,25,N],[12,"flags",E,E,25,N],[3,R[364],E,E,N,N],[12,"parser",E,E,26,N],[12,"offset",E,E,26,N],[12,"remaining",E,E,26,N],[12,"extra",E,E,26,N],[12,"type_",E,E,26,N],[12,"flags",E,E,26,N],[5,"cbor_error_string",E,E,N,N],[5,"cbor_encoder_init",E,"Initializes a CborEncoder structure \\a encoder by pointing…",N,N],[5,"cbor_encode_uint",E,"Appends the unsigned 64-bit integer \\a value to the CBOR…",N,N],[5,"cbor_encode_int",E,"Appends the signed 64-bit integer \\a value to the CBOR…",N,N],[5,"cbor_encode_negative_int",E,"Appends the negative 64-bit integer whose absolute value…",N,N],[5,"cbor_encode_simple_value",E,"Appends the CBOR Simple Type of value \\a value to the CBOR…",N,N],[5,"cbor_encode_tag",E,"Appends the CBOR tag \\a tag to the CBOR stream provided by…",N,N],[5,"cbor_encode_text_string",E,"Appends the byte string \\a string of length \\a length to…",N,N],[5,"cbor_encode_byte_string",E,"Appends the text string \\a string of length \\a length to…",N,N],[5,"cbor_encode_byte_iovec",E,"Appends the byte string passed as \\a iov and \\a iov_len to…",N,N],[5,"cbor_encode_floating_point",E,"Appends the floating-point value of type \\a fpType and…",N,N],[5,"cbor_encoder_create_array",E,"Creates a CBOR array in the CBOR stream provided by \\a…",N,N],[5,"cbor_encoder_create_map",E,"Creates a CBOR map in the CBOR stream provided by \\a…",N,N],[5,"cbor_encoder_create_indef_byte_string",E,"Creates a indefinite-length byte string in the CBOR stream…",N,N],[5,"cbor_encoder_close_container",E,"Closes the CBOR container (array, map or indefinite-length…",N,N],[5,"cbor_encoder_close_container_checked",E,E,N,N],[5,"cbor_parser_init",E,E,N,N],[5,"cbor_value_advance_fixed",E,E,N,N],[5,"cbor_value_advance",E,E,N,N],[5,"cbor_value_enter_container",E,E,N,N],[5,"cbor_value_leave_container",E,E,N,N],[5,"cbor_value_get_int64_checked",E,E,N,N],[5,"cbor_value_get_int_checked",E,E,N,N],[5,"cbor_value_skip_tag",E,E,N,N],[5,"cbor_value_calculate_string_length",E,E,N,N],[5,"cbor_value_text_string_equals",E,E,N,N],[5,"cbor_value_map_find_value",E,E,N,N],[5,"cbor_value_get_half_float",E,E,N,N],[5,"cbor_value_to_pretty_advance",E,E,N,N],[6,R[186],E,E,N,N],[6,R[187],E,E,N,N],[6,R[199],E,E,N,N],[6,R[200],E,E,N,N],[6,R[188],E,E,N,N],[6,"__uintptr_t",E,E,N,N],[6,"FILE",E,E,N,N],[6,"CborType",E,E,N,N],[6,"CborTag",E,E,N,N],[6,"CborKnownTags",E,E,N,N],[6,"CborError",E,E,N,N],[6,"cbor_encoder_write",E,E,N,N],[6,"CborParserIteratorFlags",E,E,N,N],[6,"cbor_reader_get8",E,E,N,N],[6,"cbor_reader_get16",E,E,N,N],[6,"cbor_reader_get32",E,E,N,N],[6,"cbor_reader_get64",E,E,N,N],[6,"cbor_memcmp",E,E,N,N],[6,"cbor_memcpy",E,E,N,N],[6,"CborMajorTypes",E,E,N,N],[6,"CborSimpleTypes",E,E,N,N],[17,"CborIndefiniteLength",E,E,N,N],[17,"CborType_CborIntegerType",E,E,N,N],[17,"CborType_CborByteStringType",E,E,N,N],[17,"CborType_CborTextStringType",E,E,N,N],[17,"CborType_CborArrayType",E,E,N,N],[17,"CborType_CborMapType",E,E,N,N],[17,"CborType_CborTagType",E,E,N,N],[17,"CborType_CborSimpleType",E,E,N,N],[17,"CborType_CborBooleanType",E,E,N,N],[17,"CborType_CborNullType",E,E,N,N],[17,"CborType_CborUndefinedType",E,E,N,N],[17,"CborType_CborHalfFloatType",E,E,N,N],[17,"CborType_CborFloatType",E,E,N,N],[17,"CborType_CborDoubleType",E,E,N,N],[17,"CborType_CborInvalidType",E,E,N,N],[17,"CborKnownTags_CborDateTimeStringTag",E,E,N,N],[17,"CborKnownTags_CborUnixTime_tTag",E,E,N,N],[17,"CborKnownTags_CborPositiveBignumTag",E,E,N,N],[17,"CborKnownTags_CborNegativeBignumTag",E,E,N,N],[17,"CborKnownTags_CborDecimalTag",E,E,N,N],[17,"CborKnownTags_CborBigfloatTag",E,E,N,N],[17,"CborKnownTags_CborExpectedBase64urlTag",E,E,N,N],[17,"CborKnownTags_CborExpectedBase64Tag",E,E,N,N],[17,"CborKnownTags_CborExpectedBase16Tag",E,E,N,N],[17,"CborKnownTags_CborUriTag",E,E,N,N],[17,"CborKnownTags_CborBase64urlTag",E,E,N,N],[17,"CborKnownTags_CborBase64Tag",E,E,N,N],[17,"CborKnownTags_CborRegularExpressionTag",E,E,N,N],[17,"CborKnownTags_CborMimeMessageTag",E,E,N,N],[17,"CborKnownTags_CborSignatureTag",E,E,N,N],[17,"CborError_CborNoError",E,E,N,N],[17,"CborError_CborUnknownError",E,E,N,N],[17,"CborError_CborErrorUnknownLength",E,E,N,N],[17,"CborError_CborErrorAdvancePastEOF",E,E,N,N],[17,"CborError_CborErrorIO",E,E,N,N],[17,"CborError_CborErrorGarbageAtEnd",E,E,N,N],[17,"CborError_CborErrorUnexpectedEOF",E,E,N,N],[17,"CborError_CborErrorUnexpectedBreak",E,E,N,N],[17,"CborError_CborErrorUnknownType",E,E,N,N],[17,"CborError_CborErrorIllegalType",E,E,N,N],[17,"CborError_CborErrorIllegalNumber",E,E,N,N],[17,"CborError_CborErrorIllegalSimpleType",E,E,N,N],[17,"CborError_CborErrorUnknownSimpleType",E,E,N,N],[17,"CborError_CborErrorUnknownTag",E,E,N,N],[17,"CborError_CborErrorInappropriateTagForType",E,E,N,N],[17,"CborError_CborErrorDuplicateObjectKeys",E,E,N,N],[17,"CborError_CborErrorInvalidUtf8TextString",E,E,N,N],[17,"CborError_CborErrorTooManyItems",E,E,N,N],[17,"CborError_CborErrorTooFewItems",E,E,N,N],[17,"CborError_CborErrorDataTooLarge",E,E,N,N],[17,"CborError_CborErrorNestingTooDeep",E,E,N,N],[17,"CborError_CborErrorUnsupportedType",E,E,N,N],[17,"CborError_CborErrorJsonObjectKeyIsAggregate",E,E,N,N],[17,"CborError_CborErrorJsonObjectKeyNotString",E,E,N,N],[17,"CborError_CborErrorJsonNotImplemented",E,E,N,N],[17,"CborError_CborErrorOutOfMemory",E,E,N,N],[17,"CborError_CborErrorInternalError",E,E,N,N],[17,"CborParserIteratorFlags_CborIteratorFlag_IntegerValueTooLarge",E,E,N,N],[17,"CborParserIteratorFlags_CborIteratorFlag_NegativeInteger",E,E,N,N],[17,"CborParserIteratorFlags_CborIteratorFlag_UnknownLength",E,E,N,N],[17,"CborParserIteratorFlags_CborIteratorFlag_ContainerIsMap",E,E,N,N],[17,"CborMajorTypes_UnsignedIntegerType",E,E,N,N],[17,"CborMajorTypes_NegativeIntegerType",E,E,N,N],[17,"CborMajorTypes_ByteStringType",E,E,N,N],[17,"CborMajorTypes_TextStringType",E,E,N,N],[17,"CborMajorTypes_ArrayType",E,E,N,N],[17,"CborMajorTypes_MapType",E,E,N,N],[17,"CborMajorTypes_TagType",E,E,N,N],[17,"CborMajorTypes_SimpleTypesType",E,E,N,N],[17,"CborSimpleTypes_FalseValue",E,E,N,N],[17,"CborSimpleTypes_TrueValue",E,E,N,N],[17,"CborSimpleTypes_NullValue",E,E,N,N],[17,"CborSimpleTypes_UndefinedValue",E,E,N,N],[17,"CborSimpleTypes_SimpleTypeInNextByte",E,E,N,N],[17,"CborSimpleTypes_HalfPrecisionFloat",E,E,N,N],[17,"CborSimpleTypes_SinglePrecisionFloat",E,E,N,N],[17,"CborSimpleTypes_DoublePrecisionFloat",E,E,N,N],[17,"CborSimpleTypes_Break",E,E,N,N],[0,"kernel",R[189],"Mynewt Kernel API for Rust",N,N],[0,"os","mylib::mynewt::kernel","Contains Rust bindings for Mynewt OS API `kernel/os`",N,N],[3,R[271],R[315],E,N,N],[12,"0",E,E,27,N],[12,"1",E,E,27,N],[3,"os_stack",E,E,N,N],[12,"_unused",E,E,28,N],[3,R[204],E,R[405],N,N],[12,"tv_sec",E,E,29,N],[12,"tv_usec",E,E,29,N],[3,R[205],E,R[406],N,N],[12,R[206],E,R[407],30,N],[12,R[207],E,R[408],30,N],[3,R[365],E,"Represents a time change. Passed to time change listeners…",N,N],[12,"tci_prev_tv",E,"UTC time prior to change.",31,N],[12,"tci_prev_tz",E,"Time zone prior to change.",31,N],[12,"tci_cur_tv",E,"UTC time after change.",31,N],[12,"tci_cur_tz",E,"Time zone after change.",31,N],[12,"tci_newly_synced",E,E,31,N],[3,R[366],E,"Time change listener.  Notified when the time-of-day is set.",N,N],[12,"tcl_fn",E,"Public.",32,N],[12,"tcl_arg",E,E,32,N],[12,"tcl_next",E,E,32,N],[3,R[367],E,"Internal.",N,N],[12,R[190],E,E,33,N],[3,R[368],E,R[409],N,N],[12,R[208],E,R[410],34,N],[12,"ev_cb",E,R[411],34,N],[12,"ev_arg",E,R[412],34,N],[12,"ev_next",E,E,34,N],[3,R[209],E,E,N,N],[12,R[190],E,E,35,N],[3,R[210],E,E,N,N],[12,R[211],E,R[413],36,N],[12,"evq_task",E,R[414],36,N],[12,"evq_list",E,E,36,N],[3,R[212],E,E,N,N],[12,R[191],E,E,37,N],[12,R[192],E,E,37,N],[3,R[213],E,R[415],N,N],[12,"c_ev",E,R[416],38,N],[12,"c_evq",E,R[417],38,N],[12,"c_ticks",E,R[418],38,N],[12,"c_next",E,E,38,N],[3,R[214],E,E,N,N],[12,R[196],E,E,39,N],[12,R[197],E,E,39,N],[3,R[369],E,R[195],N,N],[12,R[198],E,E,40,N],[12,"tqh_last",E,E,40,N],[3,R[370],E,"The HAL timer structure. The user can declare as many of…",N,N],[12,"bsp_timer",E,"Internal platform specific pointer",41,N],[12,"cb_func",E,"Callback function",41,N],[12,"cb_arg",E,"Callback argument",41,N],[12,"expiry",E,"Tick at which timer should expire",41,N],[12,"link",E,E,41,N],[3,R[371],E,E,N,N],[12,R[196],E,E,42,N],[12,R[197],E,E,42,N],[3,R[215],E,R[419],N,N],[12,"od_open",E,R[420],43,N],[12,R[216],E,R[421],43,N],[12,R[217],E,R[422],43,N],[12,"od_close",E,R[423],43,N],[3,"os_dev",E,E,N,N],[12,R[218],E,R[424],44,N],[12,"od_init",E,R[425],44,N],[12,R[219],E,R[426],44,N],[12,"od_stage",E,R[427],44,N],[12,R[220],E,R[428],44,N],[12,R[221],E,R[429],44,N],[12,"od_flags",E,R[430],44,N],[12,"od_name",E,R[431],44,N],[12,"od_next",E,E,44,N],[3,R[222],E,E,N,N],[12,R[190],E,E,45,N],[3,R[272],E,R[464],N,N],[12,R[273],E,R[465],46,N],[12,"omp_pool",E,R[466],46,N],[12,R[274],E,E,46,N],[3,R[275],E,E,N,N],[12,R[190],E,E,47,N],[3,R[372],E,"A packet header structure that preceeds the mbuf packet…",N,N],[12,"omp_len",E,"Overall length of the packet.",48,N],[12,"omp_flags",E,"Flags",48,N],[12,R[274],E,E,48,N],[3,R[373],E,E,N,N],[12,R[190],E,E,49,N],[3,"os_mbuf",E,R[467],N,N],[12,"om_data",E,R[468],50,N],[12,"om_flags",E,R[469],50,N],[12,R[276],E,R[470],50,N],[12,"om_len",E,R[471],50,N],[12,"om_omp",E,R[472],50,N],[12,"om_next",E,E,50,N],[12,R[277],E,R[473],50,N],[3,R[278],E,E,N,N],[12,R[194],E,E,51,N],[3,R[374],E,"Structure representing a queue of mbufs.",N,N],[12,"mq_head",E,E,52,N],[12,"mq_ev",E,"Event to post when new buffers are available on the queue.",52,N],[3,R[375],E,E,N,N],[12,R[191],E,E,53,N],[12,R[192],E,E,53,N],[3,R[223],E,R[432],N,N],[12,"mb_next",E,E,54,N],[3,R[224],E,E,N,N],[12,R[194],E,E,55,N],[3,R[225],E,R[433],N,N],[12,R[226],E,R[434],56,N],[12,R[227],E,R[435],56,N],[12,R[228],E,R[436],56,N],[12,R[229],E,R[437],56,N],[12,R[279],E,R[438],56,N],[12,R[230],E,R[439],56,N],[12,"mp_list",E,E,56,N],[12,R[231],E,E,56,N],[12,"name",E,R[440],56,N],[3,R[232],E,E,N,N],[12,R[190],E,E,57,N],[3,R[233],E,E,N,N],[12,R[193],E,E,58,N],[3,R[376],E,E,N,N],[12,"mpe_mp",E,E,59,N],[12,"mpe_put_cb",E,E,59,N],[12,"mpe_put_arg",E,E,59,N],[3,R[327],E,"Information describing a memory pool, used to return OS…",N,N],[12,"omi_block_size",E,"Size of the memory blocks in the pool",60,N],[12,"omi_num_blocks",E,"Number of memory blocks in the pool",60,N],[12,"omi_num_free",E,"Number of free memory blocks",60,N],[12,"omi_min_free",E,"Minimum number of free memory blocks ever",60,N],[12,"omi_name",E,"Name of the memory pool",60,N],[3,R[377],E,R[441],N,N],[12,"mu_head",E,E,61,N],[12,"_pad",E,E,61,N],[12,"mu_prio",E,R[442],61,N],[12,"mu_level",E,R[443],61,N],[12,"mu_owner",E,R[444],61,N],[3,R[234],E,E,N,N],[12,R[193],E,E,62,N],[3,R[235],E,E,N,N],[12,R[236],E,R[445],63,N],[12,R[237],E,R[446],63,N],[12,"sc_func",E,R[447],63,N],[12,"sc_arg",E,R[448],63,N],[12,"sc_next",E,E,63,N],[3,R[238],E,E,N,N],[12,R[194],E,E,64,N],[3,R[378],E,E,N,N],[12,"obj_head",E,E,65,N],[3,R[379],E,E,N,N],[12,R[193],E,E,66,N],[3,"os_task",E,R[195],N,N],[12,R[239],E,R[449],67,N],[12,R[240],E,R[450],67,N],[12,R[241],E,R[451],67,N],[12,"t_taskid",E,"Task ID",67,N],[12,"t_prio",E,R[452],67,N],[12,"t_state",E,E,67,N],[12,"t_flags",E,R[453],67,N],[12,R[242],E,E,67,N],[12,"t_pad",E,E,67,N],[12,"t_name",E,R[454],67,N],[12,"t_func",E,R[455],67,N],[12,"t_arg",E,R[456],67,N],[12,"t_obj",E,R[457],67,N],[12,R[243],E,R[458],67,N],[12,R[244],E,R[459],67,N],[12,R[245],E,R[460],67,N],[12,R[246],E,R[461],67,N],[12,R[247],E,E,67,N],[12,R[248],E,E,67,N],[12,R[249],E,E,67,N],[3,R[250],E,E,N,N],[12,R[190],E,E,68,N],[3,R[251],E,E,N,N],[12,R[196],E,E,69,N],[12,R[197],E,E,69,N],[3,R[252],E,E,N,N],[12,R[194],E,E,70,N],[3,R[380],E,R[195],N,N],[12,R[191],E,E,71,N],[12,R[192],E,E,71,N],[3,R[328],E,"Information about an individual task, returned for…",N,N],[12,"oti_prio",E,"Task priority",72,N],[12,"oti_taskid",E,"Task identifier",72,N],[12,"oti_state",E,"Task state, either READY or SLEEP",72,N],[12,"oti_stkusage",E,"Task stack usage",72,N],[12,"oti_stksize",E,"Task stack size",72,N],[12,"oti_cswcnt",E,"Task context switch count",72,N],[12,"oti_runtime",E,"Task runtime",72,N],[12,"oti_last_checkin",E,"Last time this task checked in with sanity",72,N],[12,"oti_next_checkin",E,"Next time this task is scheduled to check-in with sanity",72,N],[12,"oti_name",E,"Name of this task",72,N],[3,R[381],E,E,N,N],[12,R[198],E,E,73,N],[12,"tqh_last",E,E,73,N],[3,"os_sem",E,"Structure representing an OS semaphore.",N,N],[12,"sem_head",E,E,74,N],[12,"_pad",E,E,74,N],[12,"sem_tokens",E,"Number of tokens",74,N],[3,R[382],E,E,N,N],[12,R[193],E,E,75,N],[5,"os_info_init",E,E,N,N],[5,"os_init_idle_task",E,E,N,N],[5,"os_started",E,"Check whether or not the OS has been started.",N,N],[5,"os_init",E,"Initialize the OS, including memory areas and housekeeping…",N,N],[5,"os_start",E,"Start the OS and begin processing.",N,N],[5,"os_reboot",E,"Reboots the system.",N,N],[5,"os_system_reset",E,"Performs a system reset. This is typically done at the end…",N,N],[5,"os_arch_task_stack_init",E,E,N,N],[5,"os_arch_ctx_sw",E,E,N,N],[5,"os_arch_save_sr",E,E,N,N],[5,"os_arch_restore_sr",E,E,N,N],[5,"os_arch_in_critical",E,E,N,N],[5,"os_arch_init",E,E,N,N],[5,"os_arch_start",E,E,N,N],[5,"os_arch_os_init",E,E,N,N],[5,"os_arch_os_start",E,E,N,N],[5,"os_set_env",E,E,N,N],[5,"os_arch_init_task_stack",E,E,N,N],[5,"os_default_irq_asm",E,E,N,N],[5,"os_time_get",E,"Get the current OS time in ticks",N,N],[5,"os_time_advance",E,"Move OS time forward ticks.",N,N],[5,"os_time_delay",E,"Puts the current task to sleep for the specified number of…",N,N],[5,"os_settimeofday",E,"Set the time of day. This does not modify os time, but…",N,N],[5,"os_gettimeofday",E,"Get the current time of day. Returns the time of day in…",N,N],[5,"os_time_is_set",E,E,N,N],[5,"os_get_uptime_usec",E,"Get time since boot in microseconds.",N,N],[5,"os_get_uptime",E,"Get time since boot as os_timeval.",N,N],[5,"os_time_ms_to_ticks",E,"Converts milliseconds to OS ticks.",N,N],[5,"os_time_ticks_to_ms",E,"Converts OS ticks to milliseconds.",N,N],[5,"os_time_change_listen",E,"Registers a time change listener. Whenever the time is…",N,N],[5,"os_time_change_remove",E,"Unregisters a time change listener.",N,N],[5,"os_eventq_init",E,"Initialize the event queue",N,N],[5,"os_eventq_inited",E,"Check whether the event queue is initialized.",N,N],[5,"os_eventq_put",E,"Put an event on the event queue.",N,N],[5,"os_eventq_get_no_wait",E,"Poll an event from the event queue and return it…",N,N],[5,"os_eventq_get",E,"Pull a single item from an event queue. This function…",N,N],[5,"os_eventq_run",E,"Pull a single item off the event queue and call it's event…",N,N],[5,"os_eventq_poll",E,"Poll the list of event queues specified by the evq…",N,N],[5,"os_eventq_remove",E,"Remove an event from the queue.",N,N],[5,"os_eventq_dflt_get",E,"Retrieves the default event queue processed by OS main task.",N,N],[5,"os_eventq_designate",E,"@cond INTERNAL_HIDDEN [DEPRECATED]",N,N],[5,"os_callout_init",E,"Initialize a callout.",N,N],[5,"os_callout_stop",E,"Stop the callout from firing off, any pending events will…",N,N],[5,"os_callout_reset",E,"Reset the callout to fire off in 'ticks' ticks.",N,N],[5,"os_callout_remaining_ticks",E,"Returns the number of ticks which remains to callout.",N,N],[5,"os_callout_tick",E,R[195],N,N],[5,"os_callout_wakeup_ticks",E,E,N,N],[5,"os_cputime_init",E,"Initialize the cputime module. This must be called after…",N,N],[5,"os_cputime_get32",E,"Returns the low 32 bits of cputime.",N,N],[5,"os_cputime_nsecs_to_ticks",E,"Converts the given number of nanoseconds into cputime…",N,N],[5,"os_cputime_ticks_to_nsecs",E,"Convert the given number of ticks into nanoseconds. Not…",N,N],[5,"os_cputime_delay_nsecs",E,"Wait until 'nsecs' nanoseconds has elapsed. This is a…",N,N],[5,"os_cputime_delay_ticks",E,"Wait until the number of ticks has elapsed. This is a…",N,N],[5,"os_cputime_delay_usecs",E,"Wait until 'usecs' microseconds has elapsed. This is a…",N,N],[5,"os_cputime_timer_init",E,"Initialize a CPU timer, using the given HAL timer.",N,N],[5,"os_cputime_timer_start",E,"Start a cputimer that will expire at 'cputime'. If cputime…",N,N],[5,"os_cputime_timer_relative",E,"Sets a cpu timer that will expire 'usecs' microseconds…",N,N],[5,"os_cputime_timer_stop",E,"Stops a cputimer from running. The timer is removed from…",N,N],[5,"os_dev_suspend",E,"Suspend the operation of the device.",N,N],[5,"os_dev_resume",E,"Resume the device operation.",N,N],[5,"os_dev_create",E,"Create a new device in the kernel.",N,N],[5,"os_dev_lookup",E,"Lookup a device by name.",N,N],[5,"os_dev_initialize_all",E,"Initialize all devices for a given state.",N,N],[5,"os_dev_suspend_all",E,"Suspend all devices.",N,N],[5,"os_dev_resume_all",E,"Resume all the devices that were suspended.",N,N],[5,"os_dev_open",E,"Open a device.",N,N],[5,"os_dev_close",E,"Close a device.",N,N],[5,"os_dev_reset",E,"Clears the device list. This function does not close any…",N,N],[5,"os_dev_walk",E,"Walk through all devices, calling callback for every device.",N,N],[5,"os_malloc",E,"Operating system level malloc(). This ensures that a safe…",N,N],[5,"os_free",E,"Operating system level free(). See description of…",N,N],[5,"os_realloc",E,"Operating system level realloc(). See description of…",N,N],[5,"os_mqueue_init",E,"Initializes an mqueue. An mqueue is a queue of mbufs that…",N,N],[5,"os_mqueue_get",E,"Remove and return a single mbuf from the mbuf queue. Does…",N,N],[5,"os_mqueue_put",E,"Adds a packet (i.e. packet header mbuf) to an mqueue. The…",N,N],[5,"os_msys_register",E,"MSYS is a system level mbuf registry. Allows the system to…",N,N],[5,"os_msys_get",E,"Allocate a mbuf from msys. Based upon the data size…",N,N],[5,"os_msys_reset",E,"De-registers all mbuf pools from msys.",N,N],[5,"os_msys_get_pkthdr",E,"Allocate a packet header structure from the MSYS pool. See…",N,N],[5,"os_msys_count",E,"Count the number of blocks in all the mbuf pools that are…",N,N],[5,"os_msys_num_free",E,"Return the number of free blocks in Msys",N,N],[5,"os_mbuf_pool_init",E,"Initialize a pool of mbufs.",N,N],[5,"os_mbuf_get",E,"Get an mbuf from the mbuf pool. The mbuf is allocated, and…",N,N],[5,"os_mbuf_get_pkthdr",E,"Allocate a new packet header mbuf out of the os_mbuf_pool.",N,N],[5,"os_mbuf_dup",E,"Duplicate a chain of mbufs. Return the start of the…",N,N],[5,"os_mbuf_off",E,"Locates the specified absolute offset within an mbuf…",N,N],[5,"os_mbuf_copydata",E,E,N,N],[5,"os_mbuf_len",E,"@brief Calculates the length of an mbuf chain.",N,N],[5,"os_mbuf_append",E,"Append data onto a mbuf",N,N],[5,"os_mbuf_appendfrom",E,"Reads data from one mbuf and appends it to another. On…",N,N],[5,"os_mbuf_free",E,"Release a mbuf back to the pool",N,N],[5,"os_mbuf_free_chain",E,"Free a chain of mbufs",N,N],[5,"os_mbuf_adj",E,"Adjust the length of a mbuf, trimming either from the head…",N,N],[5,"os_mbuf_cmpf",E,"Performs a memory compare of the specified region of an…",N,N],[5,"os_mbuf_cmpm",E,"Compares the contents of two mbuf chains. The ranges of…",N,N],[5,"os_mbuf_prepend",E,"Increases the length of an mbuf chain by adding data to…",N,N],[5,"os_mbuf_prepend_pullup",E,"Prepends a chunk of empty data to the specified mbuf chain…",N,N],[5,"os_mbuf_copyinto",E,"Copies the contents of a flat buffer into an mbuf chain,…",N,N],[5,"os_mbuf_concat",E,"Attaches a second mbuf chain onto the end of the first. If…",N,N],[5,"os_mbuf_extend",E,"Increases the length of an mbuf chain by the specified…",N,N],[5,"os_mbuf_pullup",E,"Rearrange a mbuf chain so that len bytes are contiguous,…",N,N],[5,"os_mbuf_trim_front",E,"Removes and frees empty mbufs from the front of a chain.…",N,N],[5,"os_mbuf_widen",E,"Increases the length of an mbuf chain by inserting a gap…",N,N],[5,"os_mempool_info_get_next",E,"Get information about the next system memory pool.",N,N],[5,"os_mempool_init",E,"Initialize a memory pool.",N,N],[5,"os_mempool_ext_init",E,"Initializes an extended memory pool. Extended attributes…",N,N],[5,"os_mempool_unregister",E,"Removes the specified mempool from the list of initialized…",N,N],[5,"os_mempool_clear",E,"Clears a memory pool.",N,N],[5,"os_mempool_is_sane",E,E,N,N],[5,"os_memblock_from",E,"Checks if a memory block was allocated from the specified…",N,N],[5,"os_memblock_get",E,"Get a memory block from a memory pool",N,N],[5,"os_memblock_put_from_cb",E,"Puts the memory block back into the pool, ignoring the put…",N,N],[5,"os_memblock_put",E,"Puts the memory block back into the pool",N,N],[5,"os_mutex_init",E,"Create a mutex and initialize it.",N,N],[5,"os_mutex_release",E,"Release a mutex.",N,N],[5,"os_mutex_pend",E,"Pend (wait) for a mutex.",N,N],[5,"os_sanity_init",E,R[195],N,N],[5,"os_sanity_run",E,E,N,N],[5,"os_sanity_task_checkin",E,"Provide a \"task checkin\" for the sanity task.",N,N],[5,"os_sanity_check_init",E,"Initialize a sanity check",N,N],[5,"os_sanity_check_register",E,"Register a sanity check",N,N],[5,"os_sanity_check_reset",E,"Reset the os sanity check, so that it doesn't trip up the…",N,N],[5,"os_task_init",E,"Initialize a task.",N,N],[5,"os_task_remove",E,"Removes specified task XXX NOTE: This interface is…",N,N],[5,"os_task_count",E,"Return the number of tasks initialized.",N,N],[5,"os_task_info_get_next",E,"Iterate through tasks, and return the following…",N,N],[5,"os_sched_ctx_sw_hook",E,E,N,N],[5,"os_sched_get_current_task",E,"Returns the currently running task. Note that this task…",N,N],[5,"os_sched_set_current_task",E,E,N,N],[5,"os_sched_next_task",E,E,N,N],[5,"os_sched",E,"Performs context switch if needed. If next_t is set, that…",N,N],[5,"os_sched_os_timer_exp",E,R[195],N,N],[5,"os_sched_insert",E,E,N,N],[5,"os_sched_sleep",E,E,N,N],[5,"os_sched_wakeup",E,E,N,N],[5,"os_sched_remove",E,E,N,N],[5,"os_sched_resort",E,E,N,N],[5,"os_sched_wakeup_ticks",E,E,N,N],[5,"os_sem_init",E,"Initialize a semaphore",N,N],[5,"os_sem_release",E,"Release a semaphore.",N,N],[5,"os_sem_pend",E,"os sem pend",N,N],[5,"os_mempool_module_init",E,E,N,N],[5,"os_msys_init",E,E,N,N],[5,"os_tick_init",E,"Set up the periodic timer to interrupt at a frequency of…",N,N],[5,"os_tick_idle",E,"Halt CPU for up to 'n' ticks.",N,N],[7,"os_main_task",E,E,N,N],[7,"os_main_stack",E,E,N,N],[5,"os_idle_task",E,"Idle operating system task, runs when no other tasks are…",N,N],[5,"os_pkg_init",E,E,N,N],[6,R[186],E,E,N,N],[6,R[255],E,E,N,N],[6,R[187],E,E,N,N],[6,R[256],E,E,N,N],[6,R[199],E,E,N,N],[6,R[200],E,E,N,N],[6,"os_sr_t",E,E,N,N],[6,R[257],E,E,N,N],[6,"os_error",E,E,N,N],[6,R[258],E,E,N,N],[6,"os_stime_t",E,E,N,N],[6,"os_time_change_fn",E,"Callback that is executed when the time-of-day is set.",N,N],[6,R[259],E,E,N,N],[6,"hal_timer_cb",E,E,N,N],[6,R[260],E,R[463],N,N],[6,R[261],E,E,N,N],[6,R[262],E,E,N,N],[6,R[263],E,E,N,N],[6,R[264],E,E,N,N],[6,"os_mempool_put_fn",E,"Block put callback function. If configured, this callback…",N,N],[6,R[265],E,E,N,N],[6,R[266],E,E,N,N],[6,"os_task_state",E,"Task states",N,N],[6,R[267],E,E,N,N],[17,"OS_WAIT_FOREVER",E,E,N,N],[17,"OS_IDLE_PRIO",E,E,N,N],[17,"OS_TICKS_PER_SEC",E,E,N,N],[17,"OS_SANITY_STACK_SIZE",E,E,N,N],[17,"OS_IDLE_STACK_SIZE",E,E,N,N],[17,"OS_STACK_PATTERN",E,E,N,N],[17,"OS_ALIGNMENT",E,E,N,N],[17,"OS_STACK_ALIGNMENT",E,E,N,N],[17,"OS_TIME_MAX",E,E,N,N],[17,"OS_STIME_MAX",E,E,N,N],[17,"OS_TIMEOUT_NEVER",E,E,N,N],[17,"OS_DEV_INIT_PRIMARY",E,E,N,N],[17,"OS_DEV_INIT_SECONDARY",E,E,N,N],[17,"OS_DEV_INIT_KERNEL",E,E,N,N],[17,"OS_DEV_INIT_F_CRITICAL",E,E,N,N],[17,"OS_DEV_INIT_PRIO_DEFAULT",E,E,N,N],[17,"OS_DEV_F_STATUS_READY",E,E,N,N],[17,"OS_DEV_F_STATUS_OPEN",E,E,N,N],[17,"OS_DEV_F_STATUS_SUSPENDED",E,E,N,N],[17,"OS_DEV_F_INIT_CRITICAL",E,E,N,N],[17,"OS_MEMPOOL_F_EXT",E,E,N,N],[17,"OS_MEMPOOL_INFO_NAME_LEN",E,E,N,N],[17,"OS_TASK_PRI_HIGHEST",E,E,N,N],[17,"OS_TASK_PRI_LOWEST",E,E,N,N],[17,"OS_TASK_FLAG_NO_TIMEOUT",E,E,N,N],[17,"OS_TASK_FLAG_SEM_WAIT",E,E,N,N],[17,"OS_TASK_FLAG_MUTEX_WAIT",E,E,N,N],[17,"OS_TASK_FLAG_EVQ_WAIT",E,E,N,N],[17,"OS_TASK_MAX_NAME_LEN",E,E,N,N],[17,"OS_TRACE_ID_EVENTQ_PUT",E,E,N,N],[17,"OS_TRACE_ID_EVENTQ_GET_NO_WAIT",E,E,N,N],[17,"OS_TRACE_ID_EVENTQ_GET",E,E,N,N],[17,"OS_TRACE_ID_EVENTQ_REMOVE",E,E,N,N],[17,"OS_TRACE_ID_EVENTQ_POLL_0TIMO",E,E,N,N],[17,"OS_TRACE_ID_EVENTQ_POLL",E,E,N,N],[17,"OS_TRACE_ID_MUTEX_INIT",E,E,N,N],[17,"OS_TRACE_ID_MUTEX_RELEASE",E,E,N,N],[17,"OS_TRACE_ID_MUTEX_PEND",E,E,N,N],[17,"OS_TRACE_ID_SEM_INIT",E,E,N,N],[17,"OS_TRACE_ID_SEM_RELEASE",E,E,N,N],[17,"OS_TRACE_ID_SEM_PEND",E,E,N,N],[17,"OS_TRACE_ID_CALLOUT_INIT",E,E,N,N],[17,"OS_TRACE_ID_CALLOUT_STOP",E,E,N,N],[17,"OS_TRACE_ID_CALLOUT_RESET",E,E,N,N],[17,"OS_TRACE_ID_CALLOUT_TICK",E,E,N,N],[17,"OS_TRACE_ID_MEMBLOCK_GET",E,E,N,N],[17,"OS_TRACE_ID_MEMBLOCK_PUT_FROM_CB",E,E,N,N],[17,"OS_TRACE_ID_MEMBLOCK_PUT",E,E,N,N],[17,"OS_TRACE_ID_MBUF_GET",E,E,N,N],[17,"OS_TRACE_ID_MBUF_GET_PKTHDR",E,E,N,N],[17,"OS_TRACE_ID_MBUF_FREE",E,E,N,N],[17,"OS_TRACE_ID_MBUF_FREE_CHAIN",E,E,N,N],[17,"SYS_EOK",E,E,N,N],[17,R[297],E,E,N,N],[17,R[298],E,E,N,N],[17,R[299],E,E,N,N],[17,R[300],E,E,N,N],[17,"SYS_EIO",E,E,N,N],[17,R[301],E,E,N,N],[17,R[302],E,E,N,N],[17,R[303],E,E,N,N],[17,R[304],E,E,N,N],[17,R[305],E,E,N,N],[17,R[306],E,E,N,N],[17,R[307],E,E,N,N],[17,R[308],E,E,N,N],[17,R[309],E,E,N,N],[17,R[310],E,E,N,N],[17,R[311],E,E,N,N],[17,"OS_RUN_PRIV",E,E,N,N],[17,"OS_RUN_UNPRIV",E,E,N,N],[17,"os_error_OS_OK",E,E,N,N],[17,"os_error_OS_ENOMEM",E,E,N,N],[17,"os_error_OS_EINVAL",E,E,N,N],[17,"os_error_OS_INVALID_PARM",E,E,N,N],[17,"os_error_OS_MEM_NOT_ALIGNED",E,E,N,N],[17,"os_error_OS_BAD_MUTEX",E,E,N,N],[17,"os_error_OS_TIMEOUT",E,E,N,N],[17,"os_error_OS_ERR_IN_ISR",E,E,N,N],[17,"os_error_OS_ERR_PRIV",E,E,N,N],[17,"os_error_OS_NOT_STARTED",E,E,N,N],[17,"os_error_OS_ENOENT",E,E,N,N],[17,"os_error_OS_EBUSY",E,E,N,N],[17,"os_error_OS_ERROR",E,E,N,N],[17,"os_task_state_OS_TASK_READY",E,"Task is ready to run",N,N],[17,"os_task_state_OS_TASK_SLEEP",E,"Task is sleeping",N,N],[11,"new",E,E,27,[[],["self"]]],[11,"as_ptr",E,E,27,[[["self"]]]],[11,R[288],E,E,27,[[["self"]]]],[11,R[75],E,E,27,[[["self"],[R[7]]]]],[11,R[76],E,E,27,[[["self"],[R[7]]]]],[0,"hw",R[189],"Mynewt Hardware API for Rust",N,N],[0,"sensor","mylib::mynewt::hw","Contains the Mynewt Sensor API for Rust, including the…",N,N],[5,"as_untyped",R[270],"Cast sensor data function from typed to untyped",N,[[],[R[20]]]],[5,"register_listener",E,R[462],N,[[[R[253]]],[[R[0],[R[201]]],[R[201]]]]],[5,"null_sensor_data_func",E,"Define a default sensor data function in case there is none.",N,[[["i64"]],["i32"]]],[0,"bindings",E,"Contains the auto-generated Rust bindings for the Mynewt…",N,N],[3,R[202],R[316],E,N,N],[12,R[287],E,E,76,N],[12,"align",E,E,76,N],[3,R[203],E,E,N,N],[12,"0",E,E,77,N],[3,R[209],E,E,N,N],[12,R[190],E,E,78,N],[3,R[212],E,E,N,N],[12,R[191],E,E,79,N],[12,R[192],E,E,79,N],[3,R[214],E,E,N,N],[12,R[196],E,E,80,N],[12,R[197],E,E,80,N],[3,R[222],E,E,N,N],[12,R[190],E,E,81,N],[3,R[224],E,E,N,N],[12,R[194],E,E,82,N],[3,R[232],E,E,N,N],[12,R[190],E,E,83,N],[3,R[233],E,E,N,N],[12,R[193],E,E,84,N],[3,R[234],E,E,N,N],[12,R[193],E,E,85,N],[3,R[238],E,E,N,N],[12,R[194],E,E,86,N],[3,R[250],E,E,N,N],[12,R[190],E,E,87,N],[3,R[251],E,E,N,N],[12,R[196],E,E,88,N],[12,R[197],E,E,88,N],[3,R[252],E,E,N,N],[12,R[194],E,E,89,N],[3,R[329],E,"Configuration structure, describing a specific sensor type…",N,N],[12,"sc_valtype",E,E,90,N],[12,"_reserved",E,E,90,N],[3,R[383],E,E,N,N],[12,"smd",E,E,91,N],[12,"sad",E,E,91,N],[12,"sed",E,E,91,N],[12,"sqd",E,E,91,N],[12,"slad",E,E,91,N],[12,"sgrd",E,E,91,N],[12,"sgd",E,E,91,N],[12,"std",E,E,91,N],[12,"satd",E,E,91,N],[12,"sld",E,E,91,N],[12,"scd",E,E,91,N],[12,"spd",E,E,91,N],[12,"srhd",E,E,91,N],[12,R[183],E,E,91,N],[3,R[253],E,E,N,N],[12,"sl_sensor_type",E,E,92,N],[12,"sl_func",E,E,92,N],[12,"sl_arg",E,E,92,N],[12,"sl_next",E,E,92,N],[3,R[384],E,E,N,N],[12,R[194],E,E,93,N],[3,R[385],E,"Registration for sensor event notifications",N,N],[12,"sn_sensor_event_type",E,E,94,N],[12,"sn_func",E,E,94,N],[12,"sn_arg",E,E,94,N],[12,"sn_next",E,E,94,N],[3,R[386],E,E,N,N],[12,R[194],E,E,95,N],[3,R[387],E,"Context for sensor read events",N,N],[12,"srec_sensor",E,E,96,N],[12,"srec_type",E,E,96,N],[3,R[388],E,"Sensor type traits list",N,N],[12,"stt_sensor_type",E,E,97,N],[12,"stt_low_thresh",E,E,97,N],[12,"stt_high_thresh",E,E,97,N],[12,"stt_algo",E,E,97,N],[12,"stt_poll_n",E,E,97,N],[12,"stt_polls_left",E,E,97,N],[12,"stt_trigger_cmp_algo",E,E,97,N],[12,"stt_sensor",E,E,97,N],[12,"stt_next",E,E,97,N],[3,R[389],E,E,N,N],[12,R[194],E,E,98,N],[3,R[390],E,E,N,N],[12,"snec_sensor",E,E,99,N],[12,"snec_evtype",E,E,99,N],[3,R[391],E,E,N,N],[12,"snoe_evt",E,E,100,N],[12,"snoe_evtype",E,E,100,N],[12,"snoe_sensor",E,E,100,N],[3,R[330],E,E,N,N],[12,"sd_read",E,E,101,N],[12,"sd_get_config",E,E,101,N],[12,"sd_set_config",E,E,101,N],[12,"sd_set_trigger_thresh",E,E,101,N],[12,"sd_clear_low_trigger_thresh",E,E,101,N],[12,"sd_clear_high_trigger_thresh",E,E,101,N],[12,"sd_set_notification",E,E,101,N],[12,"sd_unset_notification",E,E,101,N],[12,"sd_handle_interrupt",E,E,101,N],[12,"sd_reset",E,E,101,N],[3,R[331],E,E,N,N],[12,"st_ostv",E,E,102,N],[12,"st_ostz",E,E,102,N],[12,"st_cputime",E,E,102,N],[3,R[332],E,E,N,N],[12,"host_pin",E,E,103,N],[12,"device_pin",E,E,103,N],[12,"active",E,E,103,N],[3,R[392],E,E,N,N],[12,"si_type",E,E,104,N],[12,"si_num",E,E,104,N],[12,"si_cs_pin",E,E,104,N],[12,"si_addr",E,E,104,N],[12,"si_lock",E,E,104,N],[12,"si_low_pin",E,E,104,N],[12,"si_high_pin",E,E,104,N],[12,"si_ints",E,E,104,N],[3,"sensor",E,E,N,N],[12,"s_dev",E,E,105,N],[12,"s_lock",E,E,105,N],[12,"s_types",E,E,105,N],[12,"s_mask",E,E,105,N],[12,"s_poll_rate",E,"Poll rate in MS for this sensor.",105,N],[12,"s_next_run",E,E,105,N],[12,"s_funcs",E,E,105,N],[12,"s_sts",E,E,105,N],[12,"s_itf",E,E,105,N],[12,"s_interrupt_evt",E,E,105,N],[12,"s_listener_list",E,E,105,N],[12,"s_err_fn",E,E,105,N],[12,"s_err_arg",E,E,105,N],[12,"s_notifier_list",E,E,105,N],[12,"s_type_traits_list",E,E,105,N],[12,"s_next",E,E,105,N],[3,R[393],E,E,N,N],[12,R[193],E,E,106,N],[3,R[394],E,E,N,N],[12,R[193],E,E,107,N],[3,R[395],E,E,N,N],[12,R[193],E,E,108,N],[3,R[396],E,E,N,N],[12,R[194],E,E,109,N],[3,R[397],E,"Read context for calling user function with argument",N,N],[12,"user_func",E,E,110,N],[12,"user_arg",E,E,110,N],[3,R[333],E,E,N,N],[12,"sad_x",E,E,111,N],[12,"sad_y",E,E,111,N],[12,"sad_z",E,E,111,N],[12,R[254],E,E,111,N],[3,R[334],E,E,N,N],[12,"smd_x",E,E,112,N],[12,"smd_y",E,E,112,N],[12,"smd_z",E,E,112,N],[12,R[254],E,E,112,N],[3,R[335],E,E,N,N],[12,"sld_full",E,E,113,N],[12,"sld_ir",E,E,113,N],[12,"sld_lux",E,E,113,N],[12,R[254],E,E,113,N],[3,R[336],E,E,N,N],[12,"sqd_x",E,E,114,N],[12,"sqd_y",E,E,114,N],[12,"sqd_z",E,E,114,N],[12,"sqd_w",E,E,114,N],[12,R[254],E,E,114,N],[3,R[337],E,E,N,N],[12,"sed_h",E,E,115,N],[12,"sed_r",E,E,115,N],[12,"sed_p",E,E,115,N],[12,R[254],E,E,115,N],[3,R[338],E,E,N,N],[12,"scd_r",E,E,116,N],[12,"scd_g",E,E,116,N],[12,"scd_b",E,E,116,N],[12,"scd_c",E,E,116,N],[12,"scd_lux",E,E,116,N],[12,"scd_colortemp",E,E,116,N],[12,"scd_saturation",E,E,116,N],[12,"scd_saturation75",E,E,116,N],[12,"scd_is_sat",E,E,116,N],[12,"scd_cratio",E,E,116,N],[12,"scd_maxlux",E,E,116,N],[12,"scd_ir",E,E,116,N],[12,R[254],E,E,116,N],[3,R[339],E,E,N,N],[12,"std_temp",E,E,117,N],[12,R[254],E,E,117,N],[3,R[340],E,E,N,N],[12,"spd_press",E,E,118,N],[12,R[254],E,E,118,N],[3,R[341],E,E,N,N],[12,"shd_humid",E,E,119,N],[12,R[254],E,E,119,N],[3,R[342],E,E,N,N],[12,"sgd_x",E,E,120,N],[12,"sgd_y",E,E,120,N],[12,"sgd_z",E,E,120,N],[12,R[254],E,E,120,N],[3,R[398],E,E,N,N],[12,"mgr_lock",E,E,121,N],[12,"mgr_wakeup_callout",E,E,121,N],[12,"mgr_eventq",E,E,121,N],[12,"mgr_sensor_list",E,E,121,N],[3,R[399],E,E,N,N],[12,R[193],E,E,122,N],[5,"sensor_pkg_init",E,"Package init function. Remove when we have post-kernel…",N,N],[5,"sensor_itf_lock",E,"Lock access to the sensor_itf specified by si. Blocks…",N,N],[5,"sensor_itf_unlock",E,"Unlock access to the sensor_itf specified by si.",N,N],[5,"sensor_init",E,"Initialize a sensor",N,N],[5,"sensor_lock",E,"Lock access to the sensor specified by sensor. Blocks…",N,N],[5,"sensor_unlock",E,"Unlock access to the sensor specified by sensor.",N,N],[5,"sensor_register_listener",E,R[462],N,N],[5,"sensor_unregister_listener",E,"Un-register a sensor listener. This allows a calling…",N,N],[5,"sensor_register_err_func",E,"Register a sensor error callback. The callback is executed…",N,N],[5,"sensor_register_notifier",E,"Register a sensor notifier. This allows a calling…",N,N],[5,"sensor_unregister_notifier",E,"Un-register a sensor notifier. This allows a calling…",N,N],[5,"sensor_read",E,"Read the data for sensor type \"type,\" from the given…",N,N],[5,"sensor_mgr_lock",E,"Lock sensor manager to access the list of sensors",N,N],[5,"sensor_mgr_unlock",E,"Unlock sensor manager once the list of sensors has been…",N,N],[5,"sensor_mgr_register",E,"Register the sensor with the global sensor list. This…",N,N],[5,"sensor_mgr_evq_get",E,"Get the current eventq, the system is misconfigured if…",N,N],[5,"sensor_mgr_find_next",E,"The sensor manager contains a list of sensors, this…",N,N],[5,"sensor_mgr_find_next_bytype",E,"Find the \"next\" sensor available for a given sensor type.",N,N],[5,"sensor_mgr_find_next_bydevname",E,"Search the sensor list and find the next sensor that…",N,N],[5,"sensor_mgr_match_bytype",E,"Check if sensor type matches",N,N],[5,"sensor_set_poll_rate_ms",E,"Set the sensor poll rate",N,N],[5,"sensor_set_n_poll_rate",E,"Set the sensor poll rate multiple based on the device…",N,N],[5,"sensor_oic_tx_trigger",E,"Transmit OIC trigger",N,N],[5,"sensor_trigger_init",E,"Sensor trigger initialization",N,N],[5,"sensor_get_type_traits_bytype",E,"Search the sensor type traits list for specific type of…",N,N],[5,"sensor_get_type_traits_byname",E,"Get the type traits for a sensor",N,N],[5,"sensor_set_thresh",E,"Set the thresholds along with the comparison algo for a…",N,N],[5,"sensor_clear_low_thresh",E,"Clears the low threshold for a sensor",N,N],[5,"sensor_clear_high_thresh",E,"Clears the high threshold for a sensor",N,N],[5,"sensor_mgr_put_notify_evt",E,"Puts a notification event on the sensor manager evq",N,N],[5,"sensor_mgr_put_interrupt_evt",E,"Puts a interrupt event on the sensor manager evq",N,N],[5,"sensor_mgr_put_read_evt",E,"Puts read event on the sensor manager evq",N,N],[5,"sensor_reset",E,"Resets the sensor",N,N],[7,"sensor_mgr",E,E,N,N],[7,"sensor_base_ts",E,E,N,N],[7,"sensor_read_event",E,E,N,N],[7,"sensor_notify_evt_pool",E,E,N,N],[7,"sensor_notify_evt_area",E,E,N,N],[6,R[186],E,E,N,N],[6,R[255],E,E,N,N],[6,R[187],E,E,N,N],[6,R[256],E,E,N,N],[6,R[199],E,E,N,N],[6,R[200],E,E,N,N],[6,R[257],E,E,N,N],[6,R[258],E,E,N,N],[6,R[259],E,E,N,N],[6,R[260],E,R[463],N,N],[6,R[261],E,E,N,N],[6,R[262],E,E,N,N],[6,R[263],E,E,N,N],[6,R[264],E,E,N,N],[6,R[265],E,E,N,N],[6,R[266],E,E,N,N],[6,R[267],E,E,N,N],[6,R[475],E,E,N,N],[6,R[476],E,E,N,N],[6,R[477],E,R[478],N,N],[6,"sensor_trigger_notify_func_t",E,"Callback for sending trigger notification.",N,N],[6,R[479],E,R[480],N,N],[6,R[481],E,R[482],N,N],[6,R[483],E,R[484],N,N],[6,R[485],E,R[486],N,N],[6,R[487],E,R[488],N,N],[6,R[489],E,R[490],N,N],[6,R[491],E,R[492],N,N],[6,R[493],E,R[494],N,N],[6,R[495],E,R[496],N,N],[6,R[497],E,R[498],N,N],[6,R[499],E,R[500],N,N],[6,R[501],E,R[502],N,N],[6,"sensor_mgr_compare_func_t",E,E,N,N],[17,"SENSOR_VALUE_TYPE_OPAQUE",E,E,N,N],[17,"SENSOR_VALUE_TYPE_INT32",E,E,N,N],[17,"SENSOR_VALUE_TYPE_FLOAT",E,E,N,N],[17,"SENSOR_VALUE_TYPE_INT32_TRIPLET",E,E,N,N],[17,"SENSOR_VALUE_TYPE_FLOAT_TRIPLET",E,E,N,N],[17,"SENSOR_ITF_SPI",E,E,N,N],[17,"SENSOR_ITF_I2C",E,E,N,N],[17,"SENSOR_ITF_UART",E,E,N,N],[17,"SENSOR_THRESH_ALGO_WINDOW",E,E,N,N],[17,"SENSOR_THRESH_ALGO_WATERMARK",E,E,N,N],[17,"SENSOR_THRESH_ALGO_USERDEF",E,E,N,N],[17,"SENSOR_IGN_LISTENER",E,E,N,N],[17,R[503],E,E,N,N],[17,R[504],E,E,N,N],[17,R[505],E,E,N,N],[17,R[506],E,E,N,N],[17,R[507],E,E,N,N],[17,R[508],E,E,N,N],[17,R[509],E,E,N,N],[17,R[510],E,E,N,N],[17,R[511],E,E,N,N],[17,R[512],E,E,N,N],[17,R[513],E,E,N,N],[17,R[514],E,E,N,N],[17,R[515],E,E,N,N],[17,R[516],E,E,N,N],[17,R[517],E,E,N,N],[17,R[518],E,E,N,N],[17,R[519],E,E,N,N],[17,R[520],E,E,N,N],[17,R[521],E,E,N,N],[17,R[522],E,E,N,N],[17,R[523],E,E,N,N],[17,R[524],E,E,N,N],[17,R[525],E,E,N,N],[17,R[526],E,E,N,N],[17,R[527],E,E,N,N],[17,R[528],E,E,N,N],[17,R[529],E,E,N,N],[17,R[530],E,E,N,N],[17,R[531],E,E,N,N],[17,R[532],E,E,N,N],[17,R[533],E,E,N,N],[17,R[534],E,E,N,N],[17,R[535],E,E,N,N],[17,R[536],E,E,N,N],[17,R[537],E,E,N,N],[17,R[538],E,E,N,N],[17,R[539],E,E,N,N],[17,R[540],E,E,N,N],[17,R[541],E,E,N,N],[17,R[542],E,E,N,N],[11,"new",E,E,76,[[[R[287]]],["self"]]],[11,"get_bit",E,E,76,[[["self"],[R[7]]],["bool"]]],[11,"set_bit",E,E,76,[[["self"],[R[7]],["bool"]]]],[11,"get",E,E,76,[[["self"],[R[7]],["u8"]],["u64"]]],[11,"set",E,E,76,[[["self"],[R[7]],["u64"],["u8"]]]],[11,"new",E,E,77,[[],["self"]]],[11,"as_ref",E,E,77,[[["self"]],[T]]],[11,"as_mut",E,E,77,[[["self"]],[T]]],[11,"sad_x_is_valid",E,E,111,[[["self"]],["u8"]]],[11,"set_sad_x_is_valid",E,E,111,[[["self"],["u8"]]]],[11,"sad_y_is_valid",E,E,111,[[["self"]],["u8"]]],[11,"set_sad_y_is_valid",E,E,111,[[["self"],["u8"]]]],[11,"sad_z_is_valid",E,E,111,[[["self"]],["u8"]]],[11,"set_sad_z_is_valid",E,E,111,[[["self"],["u8"]]]],[11,R[268],E,E,111,[[["u8"]],[["u8"],[R[269],["u8"]]]]],[11,"smd_x_is_valid",E,E,112,[[["self"]],["u8"]]],[11,"set_smd_x_is_valid",E,E,112,[[["self"],["u8"]]]],[11,"smd_y_is_valid",E,E,112,[[["self"]],["u8"]]],[11,"set_smd_y_is_valid",E,E,112,[[["self"],["u8"]]]],[11,"smd_z_is_valid",E,E,112,[[["self"]],["u8"]]],[11,"set_smd_z_is_valid",E,E,112,[[["self"],["u8"]]]],[11,R[268],E,E,112,[[["u8"]],[["u8"],[R[269],["u8"]]]]],[11,"sld_full_is_valid",E,E,113,[[["self"]],["u8"]]],[11,"set_sld_full_is_valid",E,E,113,[[["self"],["u8"]]]],[11,"sld_ir_is_valid",E,E,113,[[["self"]],["u8"]]],[11,"set_sld_ir_is_valid",E,E,113,[[["self"],["u8"]]]],[11,"sld_lux_is_valid",E,E,113,[[["self"]],["u8"]]],[11,"set_sld_lux_is_valid",E,E,113,[[["self"],["u8"]]]],[11,R[268],E,E,113,[[["u8"]],[["u8"],[R[269],["u8"]]]]],[11,"sqd_x_is_valid",E,E,114,[[["self"]],["u8"]]],[11,"set_sqd_x_is_valid",E,E,114,[[["self"],["u8"]]]],[11,"sqd_y_is_valid",E,E,114,[[["self"]],["u8"]]],[11,"set_sqd_y_is_valid",E,E,114,[[["self"],["u8"]]]],[11,"sqd_z_is_valid",E,E,114,[[["self"]],["u8"]]],[11,"set_sqd_z_is_valid",E,E,114,[[["self"],["u8"]]]],[11,"sqd_w_is_valid",E,E,114,[[["self"]],["u8"]]],[11,"set_sqd_w_is_valid",E,E,114,[[["self"],["u8"]]]],[11,R[268],E,E,114,[[["u8"]],[["u8"],[R[269],["u8"]]]]],[11,"sed_h_is_valid",E,E,115,[[["self"]],["u8"]]],[11,"set_sed_h_is_valid",E,E,115,[[["self"],["u8"]]]],[11,"sed_r_is_valid",E,E,115,[[["self"]],["u8"]]],[11,"set_sed_r_is_valid",E,E,115,[[["self"],["u8"]]]],[11,"sed_p_is_valid",E,E,115,[[["self"]],["u8"]]],[11,"set_sed_p_is_valid",E,E,115,[[["self"],["u8"]]]],[11,R[268],E,E,115,[[["u8"]],[["u8"],[R[269],["u8"]]]]],[11,"scd_r_is_valid",E,E,116,[[["self"]],["u16"]]],[11,"set_scd_r_is_valid",E,E,116,[[["self"],["u16"]]]],[11,"scd_g_is_valid",E,E,116,[[["self"]],["u16"]]],[11,"set_scd_g_is_valid",E,E,116,[[["self"],["u16"]]]],[11,"scd_b_is_valid",E,E,116,[[["self"]],["u16"]]],[11,"set_scd_b_is_valid",E,E,116,[[["self"],["u16"]]]],[11,"scd_c_is_valid",E,E,116,[[["self"]],["u16"]]],[11,"set_scd_c_is_valid",E,E,116,[[["self"],["u16"]]]],[11,"scd_lux_is_valid",E,E,116,[[["self"]],["u16"]]],[11,"set_scd_lux_is_valid",E,E,116,[[["self"],["u16"]]]],[11,"scd_colortemp_is_valid",E,E,116,[[["self"]],["u16"]]],[11,"set_scd_colortemp_is_valid",E,E,116,[[["self"],["u16"]]]],[11,"scd_saturation_is_valid",E,E,116,[[["self"]],["u16"]]],[11,"set_scd_saturation_is_valid",E,E,116,[[["self"],["u16"]]]],[11,"scd_saturation75_is_valid",E,E,116,[[["self"]],["u16"]]],[11,"set_scd_saturation75_is_valid",E,E,116,[[["self"],["u16"]]]],[11,"scd_is_sat_is_valid",E,E,116,[[["self"]],["u16"]]],[11,"set_scd_is_sat_is_valid",E,E,116,[[["self"],["u16"]]]],[11,"scd_cratio_is_valid",E,E,116,[[["self"]],["u16"]]],[11,"set_scd_cratio_is_valid",E,E,116,[[["self"],["u16"]]]],[11,"scd_maxlux_is_valid",E,E,116,[[["self"]],["u16"]]],[11,"set_scd_maxlux_is_valid",E,E,116,[[["self"],["u16"]]]],[11,"scd_ir_is_valid",E,E,116,[[["self"]],["u16"]]],[11,"set_scd_ir_is_valid",E,E,116,[[["self"],["u16"]]]],[11,R[268],E,E,116,[[["u16"]],[[R[269],["u8"]],["u8"]]]],[11,"std_temp_is_valid",E,E,117,[[["self"]],["u8"]]],[11,"set_std_temp_is_valid",E,E,117,[[["self"],["u8"]]]],[11,R[268],E,E,117,[[["u8"]],[["u8"],[R[269],["u8"]]]]],[11,"spd_press_is_valid",E,E,118,[[["self"]],["u8"]]],[11,"set_spd_press_is_valid",E,E,118,[[["self"],["u8"]]]],[11,R[268],E,E,118,[[["u8"]],[["u8"],[R[269],["u8"]]]]],[11,"shd_humid_is_valid",E,E,119,[[["self"]],["u8"]]],[11,"set_shd_humid_is_valid",E,E,119,[[["self"],["u8"]]]],[11,R[268],E,E,119,[[["u8"]],[["u8"],[R[269],["u8"]]]]],[11,"sgd_x_is_valid",E,E,120,[[["self"]],["u8"]]],[11,"set_sgd_x_is_valid",E,E,120,[[["self"],["u8"]]]],[11,"sgd_y_is_valid",E,E,120,[[["self"]],["u8"]]],[11,"set_sgd_y_is_valid",E,E,120,[[["self"],["u8"]]]],[11,"sgd_z_is_valid",E,E,120,[[["self"]],["u8"]]],[11,"set_sgd_z_is_valid",E,E,120,[[["self"],["u8"]]]],[11,R[268],E,E,120,[[["u8"]],[["u8"],[R[269],["u8"]]]]],[6,"sensor_ptr",R[270],"Points to a `sensor`. Needed because `sensor` also refers…",N,N],[6,"sensor_arg",E,"Points to sensor arg passed by Mynewt to sensor listener",N,N],[6,"sensor_data_ptr",E,"Points to sensor data passed by Mynewt to sensor listener",N,N],[6,"sensor_data_func",E,"Sensor data function that returns `MynewtError` instead of…",N,N],[6,"sensor_data_func_untyped",E,"Sensor data function that returns `i32` instead of…",N,N],[7,"LISTENER_INTERNAL",E,"Define the listener function to be called after polling…",N,N],[0,"libs",R[189],"Mynewt Custom API for Rust",N,N],[0,"sensor_coap",R[291],R[474],N,N],[3,R[202],R[317],E,N,N],[12,R[287],E,E,123,N],[12,"align",E,E,123,N],[3,R[271],E,E,N,N],[12,"0",E,E,124,N],[12,"1",E,E,124,N],[3,R[203],E,E,N,N],[12,"0",E,E,125,N],[3,R[272],E,R[464],N,N],[12,R[273],E,R[465],126,N],[12,"omp_pool",E,R[466],126,N],[12,R[274],E,E,126,N],[3,R[275],E,E,N,N],[12,R[190],E,E,127,N],[3,"os_mbuf",E,R[467],N,N],[12,"om_data",E,R[468],128,N],[12,"om_flags",E,R[469],128,N],[12,R[276],E,R[470],128,N],[12,"om_len",E,R[471],128,N],[12,"om_omp",E,R[472],128,N],[12,"om_next",E,E,128,N],[12,R[277],E,R[473],128,N],[3,R[278],E,E,N,N],[12,R[194],E,E,129,N],[3,R[223],E,R[432],N,N],[12,"mb_next",E,E,130,N],[3,R[224],E,E,N,N],[12,R[194],E,E,131,N],[3,R[225],E,R[433],N,N],[12,R[226],E,R[434],132,N],[12,R[227],E,R[435],132,N],[12,R[228],E,R[436],132,N],[12,R[229],E,R[437],132,N],[12,R[279],E,R[438],132,N],[12,R[230],E,R[439],132,N],[12,"mp_list",E,E,132,N],[12,R[231],E,E,132,N],[12,"name",E,R[440],132,N],[3,R[232],E,E,N,N],[12,R[190],E,E,133,N],[3,R[233],E,E,N,N],[12,R[193],E,E,134,N],[3,R[344],E,E,N,N],[12,R[254],E,E,135,N],[3,R[345],E,E,N,N],[12,"ep",E,E,136,N],[12,"_res",E,E,136,N],[3,R[346],E,E,N,N],[3,R[294],E,E,N,N],[12,"endpoint",E,E,137,N],[3,R[292],E,E,N,N],[12,"key",E,E,138,N],[12,"val_type",E,E,138,N],[12,"int_val",E,E,138,N],[12,R[293],E,E,138,N],[3,R[281],E,E,N,N],[12,U,E,E,139,N],[12,"fl",E,E,139,N],[12,"str",E,E,139,N],[12,R[282],E,E,139,N],[12,R[183],E,E,139,N],[3,R[283],E,E,N,N],[12,"keys",E,E,140,N],[12,"values",E,E,140,N],[7,"coap_stats",E,E,N,N],[7,"coap_error_message",E,E,N,N],[5,"init_sensor_coap",E,"Init the Sensor CoAP module. Called by sysinit() during…",N,N],[5,"sensor_coap_ready",E,E,N,N],[5,R[295],E,E,N,N],[5,R[296],E,E,N,N],[7,"coap_json_encoder",E,E,N,N],[7,"coap_json_value",E,E,N,N],[5,"json_rep_new",E,"Prepare to write a new JSON CoAP payload into the mbuf.",N,N],[5,"json_rep_reset",E,"Close the current JSON CoAP payload. Erase the JSON…",N,N],[5,"json_rep_finalize",E,"Finalise the payload and return the payload size.",N,N],[5,"json_rep_start_root_object",E,"Start the JSON representation. Assume top level is object.…",N,N],[5,"json_rep_end_root_object",E,"End the JSON representation. Assume top level is object.…",N,N],[7,"coap_json_mbuf",E,E,N,N],[6,R[186],E,E,N,N],[6,R[187],E,E,N,N],[6,R[199],E,E,N,N],[6,R[188],E,E,N,N],[6,"oc_endpoint_t",E,E,N,N],[6,R[286],E,E,N,N],[17,"COAP_LINK_FORMAT_FILTERING",E,E,N,N],[17,"COAP_PROXY_OPTION_PROCESSING",E,E,N,N],[17,"COAP_MAX_ATTEMPTS",E,E,N,N],[17,"COAP_OBSERVE_REFRESH_INTERVAL",E,E,N,N],[17,"COAP_DEFAULT_PORT",E,E,N,N],[17,"COAP_DEFAULT_MAX_AGE",E,E,N,N],[17,"COAP_RESPONSE_RANDOM_FACTOR",E,E,N,N],[17,"COAP_MAX_RETRANSMIT",E,E,N,N],[17,"COAP_HEADER_LEN",E,E,N,N],[17,"COAP_TOKEN_LEN",E,E,N,N],[17,"COAP_ETAG_LEN",E,E,N,N],[17,"COAP_MAX_URI",E,E,N,N],[17,"COAP_MAX_URI_QUERY",E,E,N,N],[17,"COAP_TCP_LENGTH8_OFF",E,E,N,N],[17,"COAP_TCP_LENGTH16_OFF",E,E,N,N],[17,"COAP_TCP_LENGTH32_OFF",E,E,N,N],[17,"COAP_TCP_TYPE0",E,E,N,N],[17,"COAP_TCP_TYPE8",E,E,N,N],[17,"COAP_TCP_TYPE16",E,E,N,N],[17,"COAP_TCP_TYPE32",E,E,N,N],[17,"COAP_HEADER_OPTION_DELTA_MASK",E,E,N,N],[17,"COAP_HEADER_OPTION_SHORT_LENGTH_MASK",E,E,N,N],[17,"COAP_PORT_UNSECURED",E,E,N,N],[11,"new",E,E,123,[[[R[287]]],["self"]]],[11,"get_bit",E,E,123,[[["self"],[R[7]]],["bool"]]],[11,"set_bit",E,E,123,[[["self"],[R[7]],["bool"]]]],[11,"get",E,E,123,[[["self"],[R[7]],["u8"]],["u64"]]],[11,"set",E,E,123,[[["self"],[R[7]],["u64"],["u8"]]]],[11,"new",E,E,124,[[],["self"]]],[11,"as_ptr",E,E,124,[[["self"]]]],[11,R[288],E,E,124,[[["self"]]]],[11,R[75],E,E,124,[[["self"],[R[7]]]]],[11,R[76],E,E,124,[[["self"],[R[7]]]]],[11,"new",E,E,125,[[],["self"]]],[11,"as_ref",E,E,125,[[["self"]],[T]]],[11,"as_mut",E,E,125,[[["self"]],[T]]],[11,"oe_type",E,E,135,[[["self"]],["u8"]]],[11,"set_oe_type",E,E,135,[[["self"],["u8"]]]],[11,"oe_flags",E,E,135,[[["self"]],["u8"]]],[11,"set_oe_flags",E,E,135,[[["self"],["u8"]]]],[11,R[268],E,E,135,[[["u8"]],[["u8"],[R[269],["u8"]]]]],[0,"sensor_network",R[291],R[474],N,N],[3,R[294],R[318],E,N,N],[12,"_unused",E,E,141,N],[3,R[400],E,E,N,N],[12,"iface_type",E,E,142,N],[12,"network_device",E,E,142,N],[12,"server_endpoint_size",E,E,142,N],[12,"register_transport_func",E,E,142,N],[12,"transport_registered",E,E,142,N],[3,R[347],E,E,N,N],[12,"endpoint",E,E,143,N],[5,R[295],E,E,N,N],[5,R[296],E,E,N,N],[5,"register_server_transport",E,E,N,N],[5,"register_collector_transport",E,E,N,N],[5,"sensor_network_register_transport",E,E,N,N],[5,"init_server_post",E,E,N,N],[5,"init_collector_post",E,E,N,N],[5,"sensor_network_init_post",E,E,N,N],[5,"do_server_post",E,E,N,N],[5,"do_collector_post",E,E,N,N],[5,"sensor_network_do_post",E,E,N,N],[5,"is_collector_node",E,E,N,N],[5,"is_sensor_node",E,E,N,N],[5,"is_standalone_node",E,E,N,N],[5,"should_send_to_collector",E,E,N,N],[5,"get_device_id",E,E,N,N],[5,"sensor_network_init",E,E,N,N],[5,"sensor_network_register_interface",E,E,N,N],[7,"sensor_network_interfaces",E,E,N,N],[7,"sensor_network_endpoints",E,E,N,N],[7,"sensor_network_encoding",E,E,N,N],[7,"sensor_network_shortname",E,E,N,N],[6,R[186],E,E,N,N],[6,R[187],E,E,N,N],[17,"SENSOR_NETWORK_SIZE",E,E,N,N],[0,"mynewt_rust",R[291],R[474],N,N],[3,R[202],R[557],E,N,N],[12,R[287],E,E,144,N],[12,"align",E,E,144,N],[3,R[209],E,E,N,N],[12,R[190],E,E,145,N],[3,R[222],E,E,N,N],[12,R[190],E,E,146,N],[3,R[234],E,E,N,N],[12,R[193],E,E,147,N],[3,R[238],E,E,N,N],[12,R[194],E,E,148,N],[3,R[250],E,E,N,N],[12,R[190],E,E,149,N],[3,R[251],E,E,N,N],[12,R[196],E,E,150,N],[12,R[197],E,E,150,N],[3,R[252],E,E,N,N],[12,R[194],E,E,151,N],[3,R[384],E,E,N,N],[12,R[194],E,E,152,N],[3,R[386],E,E,N,N],[12,R[194],E,E,153,N],[3,R[389],E,E,N,N],[12,R[194],E,E,154,N],[3,R[393],E,E,N,N],[12,R[193],E,E,155,N],[3,R[394],E,E,N,N],[12,R[193],E,E,156,N],[3,R[395],E,E,N,N],[12,R[193],E,E,157,N],[3,R[396],E,E,N,N],[12,R[194],E,E,158,N],[3,R[403],E,"Represents a single temperature sensor raw value",N,N],[12,R[543],E,"Raw temp from STM32 Internal Temp Sensor is 0 to 4095",159,N],[12,R[254],E,E,159,N],[5,R[545],E,R[546],N,N],[5,R[547],E,R[548],N,N],[5,R[549],E,R[550],N,N],[5,R[551],E,"Return the Mynewt device for the Mynewt sensor.",N,N],[5,R[552],E,R[553],N,N],[5,R[554],E,"Return the NULL sensor.",N,N],[5,R[555],E,"Return non-zero if sensor is NULL.",N,N],[5,R[556],E,"Return non-zero if sensor data is NULL.",N,N],[5,"json_helper_set_array",E,"Assume we are writing an object now. Write the key name…",N,N],[5,"json_helper_close_array",E,"End the child array and resume writing the parent object.…",N,N],[5,"json_helper_object_array_start_item",E,"Assume we have called set_array. Start an array item,…",N,N],[5,"json_helper_object_array_end_item",E,"End an array item, assumed to be an object. `[... --> [...,`",N,N],[5,"json_helper_set_int",E,"Encode an int value into the current JSON encoding value…",N,N],[5,"json_helper_set_uint",E,"Encode an unsigned int value into the current JSON…",N,N],[5,"json_helper_set_float",E,"Encode a float value into the current JSON encoding value…",N,N],[5,"json_helper_set_text_string",E,"Encode a text value into the current JSON encoding value…",N,N],[6,R[186],E,E,N,N],[6,R[255],E,E,N,N],[6,R[187],E,E,N,N],[6,R[256],E,E,N,N],[6,R[199],E,E,N,N],[6,R[200],E,E,N,N],[6,R[188],E,E,N,N],[6,R[257],E,E,N,N],[6,R[258],E,E,N,N],[6,R[259],E,E,N,N],[6,R[260],E,R[463],N,N],[6,R[261],E,E,N,N],[6,R[262],E,E,N,N],[6,R[263],E,E,N,N],[6,R[264],E,E,N,N],[6,R[266],E,E,N,N],[6,R[267],E,E,N,N],[6,R[475],E,E,N,N],[6,R[476],E,E,N,N],[6,R[477],E,R[478],N,N],[6,R[479],E,R[480],N,N],[6,R[481],E,R[482],N,N],[6,R[483],E,R[484],N,N],[6,R[485],E,R[486],N,N],[6,R[487],E,R[488],N,N],[6,R[489],E,R[490],N,N],[6,R[491],E,R[492],N,N],[6,R[493],E,R[494],N,N],[6,R[495],E,R[496],N,N],[6,R[497],E,R[498],N,N],[6,R[499],E,R[500],N,N],[6,R[501],E,R[502],N,N],[17,R[503],E,E,N,N],[17,R[504],E,E,N,N],[17,R[505],E,E,N,N],[17,R[506],E,E,N,N],[17,R[507],E,E,N,N],[17,R[508],E,E,N,N],[17,R[509],E,E,N,N],[17,R[510],E,E,N,N],[17,R[511],E,E,N,N],[17,R[512],E,E,N,N],[17,R[513],E,E,N,N],[17,R[514],E,E,N,N],[17,R[515],E,E,N,N],[17,R[516],E,E,N,N],[17,R[517],E,E,N,N],[17,R[518],E,E,N,N],[17,R[519],E,E,N,N],[17,R[520],E,E,N,N],[17,R[521],E,E,N,N],[17,R[522],E,E,N,N],[17,R[523],E,E,N,N],[17,R[524],E,E,N,N],[17,R[525],E,E,N,N],[17,R[526],E,E,N,N],[17,R[527],E,E,N,N],[17,R[528],E,E,N,N],[17,R[529],E,E,N,N],[17,R[530],E,E,N,N],[17,R[531],E,E,N,N],[17,R[532],E,E,N,N],[17,R[533],E,E,N,N],[17,R[534],E,E,N,N],[17,R[535],E,E,N,N],[17,R[536],E,E,N,N],[17,R[537],E,E,N,N],[17,R[538],E,E,N,N],[17,R[539],E,E,N,N],[17,R[540],E,E,N,N],[17,R[541],E,E,N,N],[17,R[542],E,E,N,N],[11,"new",E,E,144,[[[R[287]]],["self"]]],[11,"get_bit",E,E,144,[[["self"],[R[7]]],["bool"]]],[11,"set_bit",E,E,144,[[["self"],[R[7]],["bool"]]]],[11,"get",E,E,144,[[["self"],[R[7]],["u8"]],["u64"]]],[11,"set",E,E,144,[[["self"],[R[7]],["u64"],["u8"]]]],[11,R[544],E,E,159,[[["self"]],["u8"]]],[11,"set_strd_temp_raw_is_valid",E,E,159,[[["self"],["u8"]]]],[11,R[268],E,E,159,[[["u8"]],[[R[269],["u8"]],["u8"]]]],[0,R[0],R[189],"Return type and error codes for Mynewt API",N,N],[4,R[401],R[319],"Error codes for Mynewt API",N,N],[13,"SYS_EOK",E,"Error code 0 means no error.",160,N],[13,R[297],E,E,160,N],[13,R[298],E,E,160,N],[13,R[299],E,E,160,N],[13,R[300],E,E,160,N],[13,"SYS_EIO",E,E,160,N],[13,R[301],E,E,160,N],[13,R[302],E,E,160,N],[13,R[303],E,E,160,N],[13,R[304],E,E,160,N],[13,R[305],E,E,160,N],[13,R[306],E,E,160,N],[13,R[307],E,E,160,N],[13,R[308],E,E,160,N],[13,R[309],E,E,160,N],[13,R[310],E,E,160,N],[13,R[311],E,E,160,N],[6,"MynewtResult",E,"Common return type for Mynewt API. If no error, returns…",N,N],[0,"base","mylib","Common declarations for the application. Includes custom…",N,N],[3,R[402],R[320],"Represents a decoded sensor data value. Since temperature…",N,N],[12,"key",E,"Null-terminated string for the key. `t` for raw temp,…",161,N],[12,"val",E,"The type of the sensor value and the value.",161,N],[3,R[403],E,"Represents a single temperature sensor raw value. Must…",N,N],[12,R[543],E,"Raw temp from STM32 Internal Temp Sensor is 0 to 4095.",162,N],[12,R[544],E,"1 if data is valid",162,N],[4,R[404],E,"Represents the type and value of a sensor data value.",N,N],[13,"None",E,"No value.",163,N],[13,"Uint",E,"32-bit unsigned integer. For raw temp, contains the raw…",163,N],[13,"Float",E,"32-bit float. For computed temp, contains the computed…",163,N],[5,"console_print",E,"Display message `msg` on the Arm Semihosting console (via…",N,[[]]],[5,R[545],E,R[546],N,N],[5,R[547],E,R[548],N,N],[5,R[549],E,R[550],N,N],[5,R[551],E,"Return the Mynewt device for the Mynewt sensor. C API:…",N,N],[5,R[552],E,R[553],N,N],[5,R[554],E,"Return the NULL sensor. C API: `struct sensor…",N,N],[5,R[555],E,"Return non-zero if sensor is NULL. C API: `int…",N,N],[5,R[556],E,"Return non-zero if sensor data is NULL. C API: `int…",N,N],[5,"console_buffer",E,"Add the string to the output buffer. C API: `void…",N,N],[5,"console_printhex",E,"Write a byte in hexadecimal to the output buffer. C API:…",N,N],[5,"console_printfloat",E,"Write a float to the output buffer, with 1 decimal place.…",N,N],[5,"console_dump",E,"Append \"length\" number of bytes from \"buffer\" to the…",N,N],[5,"console_flush",E,"Flush the output buffer to the console. C API: `void…",N,N],[17,"SENSOR_DEVICE",E,"We will open internal temperature sensor `temp_stm32_0`.…",N,N],[17,"TEMP_STM32_DEVICE",E,E,N,N],[17,"TEMP_SENSOR_TYPE",E,"Set to raw sensor type",N,N],[17,"TEMP_SENSOR_VALUE_TYPE",E,"Return integer sensor values",N,N],[17,"TEMP_SENSOR_KEY",E,"Use key (field name) `t` to transmit raw temperature to…",N,N],[17,"SENSOR_TYPE_AMBIENT_TEMPERATURE_RAW",E,"Sensor type for raw temperature sensor. Must sync with…",N,N],[0,"listen_sensor","mylib","Poll the temperature sensor every 10 seconds. We support 2…",N,N],[5,"start_sensor_listener","mylib::listen_sensor","For Sensor Node and Standalone Node: Start polling the…",N,[[],[[R[0],[R[201]]],[R[201]]]]],[5,"read_temperature",E,"This listener function is called by Mynewt every 10…",N,[[["i64"]],[R[201]]]],[5,"get_temperature",E,"Get the temperature value, raw or computed. `sensor_data`…",N,[[["i64"]],[R[312]]]],[17,"SENSOR_POLL_TIME",E,"Poll every 10,000 milliseconds (10 seconds)  ",N,N],[17,"LISTENER_CB",E,"Indicate that this is a listener callback",N,N],[0,"send_coap","mylib","Send sensor data to a CoAP Server or a Collector Node. The…",N,N],[3,"Context",R[558],E,N,N],[12,"val",E,E,164,N],[5,"start_network_task",E,"Start the Network Task in the background. The Network Task…",N,[[],[[R[0],[R[201]]],[R[201]]]]],[5,"network_task_func",E,"Network Task runs this function in the background to…",N,[[]]],[5,"send_sensor_data",E,"Compose a CoAP message (CBOR or JSON) with the sensor…",N,[[[R[312]],["cstr"]],[[R[0],[R[201]]],[R[201]]]]],[5,"send_sensor_data_to_server",E,"Compose a CoAP JSON message with the Sensor Key (field…",N,[[[R[312]],["cstr"]],[[R[0],[R[201]]],[R[201]]]]],[5,"test_json",E,E,N,[[]]],[5,"send_sensor_data_to_collector",E,"Compose a CoAP CBOR message with the Sensor Key (field…",N,[[[R[312]],["cstr"]],[[R[0],[R[201]]],[R[201]]]]],[7,"NETWORK_TASK",E,"Storage for Network Task: Mynewt task object will be saved…",N,N],[7,"NETWORK_TASK_STACK",E,"Stack space for Network Task, initialised to 0.",N,N],[7,"NETWORK_IS_READY",E,"Set to true when network tasks have been completed",N,N],[17,"NETWORK_TASK_STACK_SIZE",E,"Size of the stack (in 4-byte units). Previously…",N,N],[14,"fill_zero","mylib","Return a const struct that has all fields set to 0. Used…",N,N],[14,"coap",E,"Macro to compose a CoAP payloads with JSON or CBOR…",N,N],[14,"parse",E,E,N,N],[14,"parse_vector",E,E,N,N],[14,"unexpected_token",E,E,N,N],[14,"coap_root",E,"Compose the payload root.",N,N],[14,"coap_array",E,"Compose an array under \"object\", named as \"key\". Add…",N,N],[14,"coap_item_str",E,"Append a (`key` + `val` string value) item to the array…",N,N],[14,"coap_item",E,"Append an array item under the array named `array0`. Add…",N,N],[14,"coap_item_int",E,E,N,N],[14,"coap_set_int_val",E,"Given an object parent and an integer Sensor Value val,…",N,N],[14,"coap_item_int_val",E,"Create a new Item object in the parent array and set the…",N,N],[14,"json_rep_set_array",E,E,N,N],[14,"json_rep_close_array",E,E,N,N],[14,"json_rep_object_array_start_item",E,E,N,N],[14,"json_rep_object_array_end_item",E,E,N,N],[14,"json_rep_set_int",E,E,N,N],[14,"json_rep_set_text_string",E,E,N,N],[14,"json_value_int",E,E,N,N],[14,"json_value_string",E,"`$value` must be an `str`",N,N],[14,"oc_rep_start_root_object",E,E,N,N],[14,"oc_rep_end_root_object",E,E,N,N],[14,"oc_rep_start_object",E,E,N,N],[14,"oc_rep_end_object",E,E,N,N],[14,"oc_rep_start_array",E,E,N,N],[14,"oc_rep_end_array",E,E,N,N],[14,"oc_rep_set_array",E,E,N,N],[14,"oc_rep_close_array",E,E,N,N],[14,"oc_rep_object_array_start_item",E,E,N,N],[14,"oc_rep_object_array_end_item",E,E,N,N],[14,"oc_rep_set_int",E,E,N,N],[14,"oc_rep_set_text_string",E,E,N,N],[14,"test_literal",E,E,N,N],[14,"test_ident",E,E,N,N],[14,"test_internal_rules2",E,E,N,N],[14,"test_internal_rules",E,E,N,N],[14,"stringify_null",E,"Macro that takes an identifier and returns a `[u8]`…",N,N],[14,"d",E,"Macro to dump all tokens received as a literal string,…",N,N],[14,"nx",E,"Macro to display the token being parsed and the remaining…",N,N],[11,R[10],R[313],E,0,[[[U]],[R[0]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[12],E,E,0,[[],[R[0]]]],[11,R[25],E,E,0,[[["self"]],[T]]],[11,R[13],E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[["self"]],[R[26]]]],[11,R[10],E,E,1,[[[U]],[R[0]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[12],E,E,1,[[],[R[0]]]],[11,R[25],E,E,1,[[["self"]],[T]]],[11,R[13],E,E,1,[[["self"]],[T]]],[11,R[14],E,E,1,[[["self"]],[R[26]]]],[11,R[10],E,E,2,[[[U]],[R[0]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[12],E,E,2,[[],[R[0]]]],[11,R[25],E,E,2,[[["self"]],[T]]],[11,R[13],E,E,2,[[["self"]],[T]]],[11,R[14],E,E,2,[[["self"]],[R[26]]]],[11,R[10],E,E,3,[[[U]],[R[0]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[12],E,E,3,[[],[R[0]]]],[11,R[25],E,E,3,[[["self"]],[T]]],[11,R[13],E,E,3,[[["self"]],[T]]],[11,R[14],E,E,3,[[["self"]],[R[26]]]],[11,R[10],E,E,4,[[[U]],[R[0]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[12],E,E,4,[[],[R[0]]]],[11,R[25],E,E,4,[[["self"]],[T]]],[11,R[13],E,E,4,[[["self"]],[T]]],[11,R[14],E,E,4,[[["self"]],[R[26]]]],[11,R[10],E,E,5,[[[U]],[R[0]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[12],E,E,5,[[],[R[0]]]],[11,R[25],E,E,5,[[["self"]],[T]]],[11,R[13],E,E,5,[[["self"]],[T]]],[11,R[14],E,E,5,[[["self"]],[R[26]]]],[11,R[10],E,E,6,[[[U]],[R[0]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[12],E,E,6,[[],[R[0]]]],[11,R[25],E,E,6,[[["self"]],[T]]],[11,R[13],E,E,6,[[["self"]],[T]]],[11,R[14],E,E,6,[[["self"]],[R[26]]]],[11,R[10],E,E,7,[[[U]],[R[0]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[12],E,E,7,[[],[R[0]]]],[11,R[25],E,E,7,[[["self"]],[T]]],[11,R[13],E,E,7,[[["self"]],[T]]],[11,R[14],E,E,7,[[["self"]],[R[26]]]],[11,R[10],E,E,8,[[[U]],[R[0]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[12],E,E,8,[[],[R[0]]]],[11,R[25],E,E,8,[[["self"]],[T]]],[11,R[13],E,E,8,[[["self"]],[T]]],[11,R[14],E,E,8,[[["self"]],[R[26]]]],[11,R[10],E,E,9,[[[U]],[R[0]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[12],E,E,9,[[],[R[0]]]],[11,R[25],E,E,9,[[["self"]],[T]]],[11,R[13],E,E,9,[[["self"]],[T]]],[11,R[14],E,E,9,[[["self"]],[R[26]]]],[11,R[10],E,E,10,[[[U]],[R[0]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,R[12],E,E,10,[[],[R[0]]]],[11,R[25],E,E,10,[[["self"]],[T]]],[11,R[13],E,E,10,[[["self"]],[T]]],[11,R[14],E,E,10,[[["self"]],[R[26]]]],[11,R[10],E,E,11,[[[U]],[R[0]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,"into",E,E,11,[[],[U]]],[11,R[12],E,E,11,[[],[R[0]]]],[11,R[25],E,E,11,[[["self"]],[T]]],[11,R[13],E,E,11,[[["self"]],[T]]],[11,R[14],E,E,11,[[["self"]],[R[26]]]],[11,R[10],E,E,12,[[[U]],[R[0]]]],[11,"from",E,E,12,[[[T]],[T]]],[11,"into",E,E,12,[[],[U]]],[11,R[12],E,E,12,[[],[R[0]]]],[11,R[25],E,E,12,[[["self"]],[T]]],[11,R[13],E,E,12,[[["self"]],[T]]],[11,R[14],E,E,12,[[["self"]],[R[26]]]],[11,R[10],E,E,13,[[[U]],[R[0]]]],[11,"from",E,E,13,[[[T]],[T]]],[11,"into",E,E,13,[[],[U]]],[11,R[12],E,E,13,[[],[R[0]]]],[11,R[25],E,E,13,[[["self"]],[T]]],[11,R[13],E,E,13,[[["self"]],[T]]],[11,R[14],E,E,13,[[["self"]],[R[26]]]],[11,R[10],E,E,14,[[[U]],[R[0]]]],[11,"from",E,E,14,[[[T]],[T]]],[11,"into",E,E,14,[[],[U]]],[11,R[12],E,E,14,[[],[R[0]]]],[11,R[25],E,E,14,[[["self"]],[T]]],[11,R[13],E,E,14,[[["self"]],[T]]],[11,R[14],E,E,14,[[["self"]],[R[26]]]],[11,R[10],E,E,15,[[[U]],[R[0]]]],[11,"from",E,E,15,[[[T]],[T]]],[11,"into",E,E,15,[[],[U]]],[11,R[12],E,E,15,[[],[R[0]]]],[11,R[25],E,E,15,[[["self"]],[T]]],[11,R[13],E,E,15,[[["self"]],[T]]],[11,R[14],E,E,15,[[["self"]],[R[26]]]],[11,R[10],E,E,16,[[[U]],[R[0]]]],[11,"from",E,E,16,[[[T]],[T]]],[11,"into",E,E,16,[[],[U]]],[11,R[12],E,E,16,[[],[R[0]]]],[11,R[25],E,E,16,[[["self"]],[T]]],[11,R[13],E,E,16,[[["self"]],[T]]],[11,R[14],E,E,16,[[["self"]],[R[26]]]],[11,R[10],E,E,17,[[[U]],[R[0]]]],[11,"from",E,E,17,[[[T]],[T]]],[11,"into",E,E,17,[[],[U]]],[11,R[12],E,E,17,[[],[R[0]]]],[11,R[25],E,E,17,[[["self"]],[T]]],[11,R[13],E,E,17,[[["self"]],[T]]],[11,R[14],E,E,17,[[["self"]],[R[26]]]],[11,R[10],E,E,18,[[[U]],[R[0]]]],[11,"from",E,E,18,[[[T]],[T]]],[11,"into",E,E,18,[[],[U]]],[11,R[12],E,E,18,[[],[R[0]]]],[11,R[25],E,E,18,[[["self"]],[T]]],[11,R[13],E,E,18,[[["self"]],[T]]],[11,R[14],E,E,18,[[["self"]],[R[26]]]],[11,R[10],R[314],E,19,[[[U]],[R[0]]]],[11,"from",E,E,19,[[[T]],[T]]],[11,"into",E,E,19,[[],[U]]],[11,R[12],E,E,19,[[],[R[0]]]],[11,R[25],E,E,19,[[["self"]],[T]]],[11,R[13],E,E,19,[[["self"]],[T]]],[11,R[14],E,E,19,[[["self"]],[R[26]]]],[11,R[10],E,E,20,[[[U]],[R[0]]]],[11,"from",E,E,20,[[[T]],[T]]],[11,"into",E,E,20,[[],[U]]],[11,R[12],E,E,20,[[],[R[0]]]],[11,R[25],E,E,20,[[["self"]],[T]]],[11,R[13],E,E,20,[[["self"]],[T]]],[11,R[14],E,E,20,[[["self"]],[R[26]]]],[11,R[10],E,E,21,[[[U]],[R[0]]]],[11,"from",E,E,21,[[[T]],[T]]],[11,"into",E,E,21,[[],[U]]],[11,R[12],E,E,21,[[],[R[0]]]],[11,R[25],E,E,21,[[["self"]],[T]]],[11,R[13],E,E,21,[[["self"]],[T]]],[11,R[14],E,E,21,[[["self"]],[R[26]]]],[11,R[10],E,E,22,[[[U]],[R[0]]]],[11,"from",E,E,22,[[[T]],[T]]],[11,"into",E,E,22,[[],[U]]],[11,R[12],E,E,22,[[],[R[0]]]],[11,R[25],E,E,22,[[["self"]],[T]]],[11,R[13],E,E,22,[[["self"]],[T]]],[11,R[14],E,E,22,[[["self"]],[R[26]]]],[11,R[10],E,E,23,[[[U]],[R[0]]]],[11,"from",E,E,23,[[[T]],[T]]],[11,"into",E,E,23,[[],[U]]],[11,R[12],E,E,23,[[],[R[0]]]],[11,R[25],E,E,23,[[["self"]],[T]]],[11,R[13],E,E,23,[[["self"]],[T]]],[11,R[14],E,E,23,[[["self"]],[R[26]]]],[11,R[10],E,E,24,[[[U]],[R[0]]]],[11,"from",E,E,24,[[[T]],[T]]],[11,"into",E,E,24,[[],[U]]],[11,R[12],E,E,24,[[],[R[0]]]],[11,R[25],E,E,24,[[["self"]],[T]]],[11,R[13],E,E,24,[[["self"]],[T]]],[11,R[14],E,E,24,[[["self"]],[R[26]]]],[11,R[10],E,E,25,[[[U]],[R[0]]]],[11,"from",E,E,25,[[[T]],[T]]],[11,"into",E,E,25,[[],[U]]],[11,R[12],E,E,25,[[],[R[0]]]],[11,R[25],E,E,25,[[["self"]],[T]]],[11,R[13],E,E,25,[[["self"]],[T]]],[11,R[14],E,E,25,[[["self"]],[R[26]]]],[11,R[10],E,E,26,[[[U]],[R[0]]]],[11,"from",E,E,26,[[[T]],[T]]],[11,"into",E,E,26,[[],[U]]],[11,R[12],E,E,26,[[],[R[0]]]],[11,R[25],E,E,26,[[["self"]],[T]]],[11,R[13],E,E,26,[[["self"]],[T]]],[11,R[14],E,E,26,[[["self"]],[R[26]]]],[11,R[10],R[315],E,27,[[[U]],[R[0]]]],[11,"from",E,E,27,[[[T]],[T]]],[11,"into",E,E,27,[[],[U]]],[11,R[12],E,E,27,[[],[R[0]]]],[11,R[25],E,E,27,[[["self"]],[T]]],[11,R[13],E,E,27,[[["self"]],[T]]],[11,R[14],E,E,27,[[["self"]],[R[26]]]],[11,R[10],E,E,28,[[[U]],[R[0]]]],[11,"from",E,E,28,[[[T]],[T]]],[11,"into",E,E,28,[[],[U]]],[11,R[12],E,E,28,[[],[R[0]]]],[11,R[25],E,E,28,[[["self"]],[T]]],[11,R[13],E,E,28,[[["self"]],[T]]],[11,R[14],E,E,28,[[["self"]],[R[26]]]],[11,R[10],E,E,29,[[[U]],[R[0]]]],[11,"from",E,E,29,[[[T]],[T]]],[11,"into",E,E,29,[[],[U]]],[11,R[12],E,E,29,[[],[R[0]]]],[11,R[25],E,E,29,[[["self"]],[T]]],[11,R[13],E,E,29,[[["self"]],[T]]],[11,R[14],E,E,29,[[["self"]],[R[26]]]],[11,R[10],E,E,30,[[[U]],[R[0]]]],[11,"from",E,E,30,[[[T]],[T]]],[11,"into",E,E,30,[[],[U]]],[11,R[12],E,E,30,[[],[R[0]]]],[11,R[25],E,E,30,[[["self"]],[T]]],[11,R[13],E,E,30,[[["self"]],[T]]],[11,R[14],E,E,30,[[["self"]],[R[26]]]],[11,R[10],E,E,31,[[[U]],[R[0]]]],[11,"from",E,E,31,[[[T]],[T]]],[11,"into",E,E,31,[[],[U]]],[11,R[12],E,E,31,[[],[R[0]]]],[11,R[25],E,E,31,[[["self"]],[T]]],[11,R[13],E,E,31,[[["self"]],[T]]],[11,R[14],E,E,31,[[["self"]],[R[26]]]],[11,R[10],E,E,32,[[[U]],[R[0]]]],[11,"from",E,E,32,[[[T]],[T]]],[11,"into",E,E,32,[[],[U]]],[11,R[12],E,E,32,[[],[R[0]]]],[11,R[25],E,E,32,[[["self"]],[T]]],[11,R[13],E,E,32,[[["self"]],[T]]],[11,R[14],E,E,32,[[["self"]],[R[26]]]],[11,R[10],E,E,33,[[[U]],[R[0]]]],[11,"from",E,E,33,[[[T]],[T]]],[11,"into",E,E,33,[[],[U]]],[11,R[12],E,E,33,[[],[R[0]]]],[11,R[25],E,E,33,[[["self"]],[T]]],[11,R[13],E,E,33,[[["self"]],[T]]],[11,R[14],E,E,33,[[["self"]],[R[26]]]],[11,R[10],E,E,34,[[[U]],[R[0]]]],[11,"from",E,E,34,[[[T]],[T]]],[11,"into",E,E,34,[[],[U]]],[11,R[12],E,E,34,[[],[R[0]]]],[11,R[25],E,E,34,[[["self"]],[T]]],[11,R[13],E,E,34,[[["self"]],[T]]],[11,R[14],E,E,34,[[["self"]],[R[26]]]],[11,R[10],E,E,35,[[[U]],[R[0]]]],[11,"from",E,E,35,[[[T]],[T]]],[11,"into",E,E,35,[[],[U]]],[11,R[12],E,E,35,[[],[R[0]]]],[11,R[25],E,E,35,[[["self"]],[T]]],[11,R[13],E,E,35,[[["self"]],[T]]],[11,R[14],E,E,35,[[["self"]],[R[26]]]],[11,R[10],E,E,36,[[[U]],[R[0]]]],[11,"from",E,E,36,[[[T]],[T]]],[11,"into",E,E,36,[[],[U]]],[11,R[12],E,E,36,[[],[R[0]]]],[11,R[25],E,E,36,[[["self"]],[T]]],[11,R[13],E,E,36,[[["self"]],[T]]],[11,R[14],E,E,36,[[["self"]],[R[26]]]],[11,R[10],E,E,37,[[[U]],[R[0]]]],[11,"from",E,E,37,[[[T]],[T]]],[11,"into",E,E,37,[[],[U]]],[11,R[12],E,E,37,[[],[R[0]]]],[11,R[25],E,E,37,[[["self"]],[T]]],[11,R[13],E,E,37,[[["self"]],[T]]],[11,R[14],E,E,37,[[["self"]],[R[26]]]],[11,R[10],E,E,38,[[[U]],[R[0]]]],[11,"from",E,E,38,[[[T]],[T]]],[11,"into",E,E,38,[[],[U]]],[11,R[12],E,E,38,[[],[R[0]]]],[11,R[25],E,E,38,[[["self"]],[T]]],[11,R[13],E,E,38,[[["self"]],[T]]],[11,R[14],E,E,38,[[["self"]],[R[26]]]],[11,R[10],E,E,39,[[[U]],[R[0]]]],[11,"from",E,E,39,[[[T]],[T]]],[11,"into",E,E,39,[[],[U]]],[11,R[12],E,E,39,[[],[R[0]]]],[11,R[25],E,E,39,[[["self"]],[T]]],[11,R[13],E,E,39,[[["self"]],[T]]],[11,R[14],E,E,39,[[["self"]],[R[26]]]],[11,R[10],E,E,40,[[[U]],[R[0]]]],[11,"from",E,E,40,[[[T]],[T]]],[11,"into",E,E,40,[[],[U]]],[11,R[12],E,E,40,[[],[R[0]]]],[11,R[25],E,E,40,[[["self"]],[T]]],[11,R[13],E,E,40,[[["self"]],[T]]],[11,R[14],E,E,40,[[["self"]],[R[26]]]],[11,R[10],E,E,41,[[[U]],[R[0]]]],[11,"from",E,E,41,[[[T]],[T]]],[11,"into",E,E,41,[[],[U]]],[11,R[12],E,E,41,[[],[R[0]]]],[11,R[25],E,E,41,[[["self"]],[T]]],[11,R[13],E,E,41,[[["self"]],[T]]],[11,R[14],E,E,41,[[["self"]],[R[26]]]],[11,R[10],E,E,42,[[[U]],[R[0]]]],[11,"from",E,E,42,[[[T]],[T]]],[11,"into",E,E,42,[[],[U]]],[11,R[12],E,E,42,[[],[R[0]]]],[11,R[25],E,E,42,[[["self"]],[T]]],[11,R[13],E,E,42,[[["self"]],[T]]],[11,R[14],E,E,42,[[["self"]],[R[26]]]],[11,R[10],E,E,43,[[[U]],[R[0]]]],[11,"from",E,E,43,[[[T]],[T]]],[11,"into",E,E,43,[[],[U]]],[11,R[12],E,E,43,[[],[R[0]]]],[11,R[25],E,E,43,[[["self"]],[T]]],[11,R[13],E,E,43,[[["self"]],[T]]],[11,R[14],E,E,43,[[["self"]],[R[26]]]],[11,R[10],E,E,44,[[[U]],[R[0]]]],[11,"from",E,E,44,[[[T]],[T]]],[11,"into",E,E,44,[[],[U]]],[11,R[12],E,E,44,[[],[R[0]]]],[11,R[25],E,E,44,[[["self"]],[T]]],[11,R[13],E,E,44,[[["self"]],[T]]],[11,R[14],E,E,44,[[["self"]],[R[26]]]],[11,R[10],E,E,45,[[[U]],[R[0]]]],[11,"from",E,E,45,[[[T]],[T]]],[11,"into",E,E,45,[[],[U]]],[11,R[12],E,E,45,[[],[R[0]]]],[11,R[25],E,E,45,[[["self"]],[T]]],[11,R[13],E,E,45,[[["self"]],[T]]],[11,R[14],E,E,45,[[["self"]],[R[26]]]],[11,R[10],E,E,46,[[[U]],[R[0]]]],[11,"from",E,E,46,[[[T]],[T]]],[11,"into",E,E,46,[[],[U]]],[11,R[12],E,E,46,[[],[R[0]]]],[11,R[25],E,E,46,[[["self"]],[T]]],[11,R[13],E,E,46,[[["self"]],[T]]],[11,R[14],E,E,46,[[["self"]],[R[26]]]],[11,R[10],E,E,47,[[[U]],[R[0]]]],[11,"from",E,E,47,[[[T]],[T]]],[11,"into",E,E,47,[[],[U]]],[11,R[12],E,E,47,[[],[R[0]]]],[11,R[25],E,E,47,[[["self"]],[T]]],[11,R[13],E,E,47,[[["self"]],[T]]],[11,R[14],E,E,47,[[["self"]],[R[26]]]],[11,R[10],E,E,48,[[[U]],[R[0]]]],[11,"from",E,E,48,[[[T]],[T]]],[11,"into",E,E,48,[[],[U]]],[11,R[12],E,E,48,[[],[R[0]]]],[11,R[25],E,E,48,[[["self"]],[T]]],[11,R[13],E,E,48,[[["self"]],[T]]],[11,R[14],E,E,48,[[["self"]],[R[26]]]],[11,R[10],E,E,49,[[[U]],[R[0]]]],[11,"from",E,E,49,[[[T]],[T]]],[11,"into",E,E,49,[[],[U]]],[11,R[12],E,E,49,[[],[R[0]]]],[11,R[25],E,E,49,[[["self"]],[T]]],[11,R[13],E,E,49,[[["self"]],[T]]],[11,R[14],E,E,49,[[["self"]],[R[26]]]],[11,R[10],E,E,50,[[[U]],[R[0]]]],[11,"from",E,E,50,[[[T]],[T]]],[11,"into",E,E,50,[[],[U]]],[11,R[12],E,E,50,[[],[R[0]]]],[11,R[25],E,E,50,[[["self"]],[T]]],[11,R[13],E,E,50,[[["self"]],[T]]],[11,R[14],E,E,50,[[["self"]],[R[26]]]],[11,R[10],E,E,51,[[[U]],[R[0]]]],[11,"from",E,E,51,[[[T]],[T]]],[11,"into",E,E,51,[[],[U]]],[11,R[12],E,E,51,[[],[R[0]]]],[11,R[25],E,E,51,[[["self"]],[T]]],[11,R[13],E,E,51,[[["self"]],[T]]],[11,R[14],E,E,51,[[["self"]],[R[26]]]],[11,R[10],E,E,52,[[[U]],[R[0]]]],[11,"from",E,E,52,[[[T]],[T]]],[11,"into",E,E,52,[[],[U]]],[11,R[12],E,E,52,[[],[R[0]]]],[11,R[25],E,E,52,[[["self"]],[T]]],[11,R[13],E,E,52,[[["self"]],[T]]],[11,R[14],E,E,52,[[["self"]],[R[26]]]],[11,R[10],E,E,53,[[[U]],[R[0]]]],[11,"from",E,E,53,[[[T]],[T]]],[11,"into",E,E,53,[[],[U]]],[11,R[12],E,E,53,[[],[R[0]]]],[11,R[25],E,E,53,[[["self"]],[T]]],[11,R[13],E,E,53,[[["self"]],[T]]],[11,R[14],E,E,53,[[["self"]],[R[26]]]],[11,R[10],E,E,54,[[[U]],[R[0]]]],[11,"from",E,E,54,[[[T]],[T]]],[11,"into",E,E,54,[[],[U]]],[11,R[12],E,E,54,[[],[R[0]]]],[11,R[25],E,E,54,[[["self"]],[T]]],[11,R[13],E,E,54,[[["self"]],[T]]],[11,R[14],E,E,54,[[["self"]],[R[26]]]],[11,R[10],E,E,55,[[[U]],[R[0]]]],[11,"from",E,E,55,[[[T]],[T]]],[11,"into",E,E,55,[[],[U]]],[11,R[12],E,E,55,[[],[R[0]]]],[11,R[25],E,E,55,[[["self"]],[T]]],[11,R[13],E,E,55,[[["self"]],[T]]],[11,R[14],E,E,55,[[["self"]],[R[26]]]],[11,R[10],E,E,56,[[[U]],[R[0]]]],[11,"from",E,E,56,[[[T]],[T]]],[11,"into",E,E,56,[[],[U]]],[11,R[12],E,E,56,[[],[R[0]]]],[11,R[25],E,E,56,[[["self"]],[T]]],[11,R[13],E,E,56,[[["self"]],[T]]],[11,R[14],E,E,56,[[["self"]],[R[26]]]],[11,R[10],E,E,57,[[[U]],[R[0]]]],[11,"from",E,E,57,[[[T]],[T]]],[11,"into",E,E,57,[[],[U]]],[11,R[12],E,E,57,[[],[R[0]]]],[11,R[25],E,E,57,[[["self"]],[T]]],[11,R[13],E,E,57,[[["self"]],[T]]],[11,R[14],E,E,57,[[["self"]],[R[26]]]],[11,R[10],E,E,58,[[[U]],[R[0]]]],[11,"from",E,E,58,[[[T]],[T]]],[11,"into",E,E,58,[[],[U]]],[11,R[12],E,E,58,[[],[R[0]]]],[11,R[25],E,E,58,[[["self"]],[T]]],[11,R[13],E,E,58,[[["self"]],[T]]],[11,R[14],E,E,58,[[["self"]],[R[26]]]],[11,R[10],E,E,59,[[[U]],[R[0]]]],[11,"from",E,E,59,[[[T]],[T]]],[11,"into",E,E,59,[[],[U]]],[11,R[12],E,E,59,[[],[R[0]]]],[11,R[25],E,E,59,[[["self"]],[T]]],[11,R[13],E,E,59,[[["self"]],[T]]],[11,R[14],E,E,59,[[["self"]],[R[26]]]],[11,R[10],E,E,60,[[[U]],[R[0]]]],[11,"from",E,E,60,[[[T]],[T]]],[11,"into",E,E,60,[[],[U]]],[11,R[12],E,E,60,[[],[R[0]]]],[11,R[25],E,E,60,[[["self"]],[T]]],[11,R[13],E,E,60,[[["self"]],[T]]],[11,R[14],E,E,60,[[["self"]],[R[26]]]],[11,R[10],E,E,61,[[[U]],[R[0]]]],[11,"from",E,E,61,[[[T]],[T]]],[11,"into",E,E,61,[[],[U]]],[11,R[12],E,E,61,[[],[R[0]]]],[11,R[25],E,E,61,[[["self"]],[T]]],[11,R[13],E,E,61,[[["self"]],[T]]],[11,R[14],E,E,61,[[["self"]],[R[26]]]],[11,R[10],E,E,62,[[[U]],[R[0]]]],[11,"from",E,E,62,[[[T]],[T]]],[11,"into",E,E,62,[[],[U]]],[11,R[12],E,E,62,[[],[R[0]]]],[11,R[25],E,E,62,[[["self"]],[T]]],[11,R[13],E,E,62,[[["self"]],[T]]],[11,R[14],E,E,62,[[["self"]],[R[26]]]],[11,R[10],E,E,63,[[[U]],[R[0]]]],[11,"from",E,E,63,[[[T]],[T]]],[11,"into",E,E,63,[[],[U]]],[11,R[12],E,E,63,[[],[R[0]]]],[11,R[25],E,E,63,[[["self"]],[T]]],[11,R[13],E,E,63,[[["self"]],[T]]],[11,R[14],E,E,63,[[["self"]],[R[26]]]],[11,R[10],E,E,64,[[[U]],[R[0]]]],[11,"from",E,E,64,[[[T]],[T]]],[11,"into",E,E,64,[[],[U]]],[11,R[12],E,E,64,[[],[R[0]]]],[11,R[25],E,E,64,[[["self"]],[T]]],[11,R[13],E,E,64,[[["self"]],[T]]],[11,R[14],E,E,64,[[["self"]],[R[26]]]],[11,R[10],E,E,65,[[[U]],[R[0]]]],[11,"from",E,E,65,[[[T]],[T]]],[11,"into",E,E,65,[[],[U]]],[11,R[12],E,E,65,[[],[R[0]]]],[11,R[25],E,E,65,[[["self"]],[T]]],[11,R[13],E,E,65,[[["self"]],[T]]],[11,R[14],E,E,65,[[["self"]],[R[26]]]],[11,R[10],E,E,66,[[[U]],[R[0]]]],[11,"from",E,E,66,[[[T]],[T]]],[11,"into",E,E,66,[[],[U]]],[11,R[12],E,E,66,[[],[R[0]]]],[11,R[25],E,E,66,[[["self"]],[T]]],[11,R[13],E,E,66,[[["self"]],[T]]],[11,R[14],E,E,66,[[["self"]],[R[26]]]],[11,R[10],E,E,67,[[[U]],[R[0]]]],[11,"from",E,E,67,[[[T]],[T]]],[11,"into",E,E,67,[[],[U]]],[11,R[12],E,E,67,[[],[R[0]]]],[11,R[25],E,E,67,[[["self"]],[T]]],[11,R[13],E,E,67,[[["self"]],[T]]],[11,R[14],E,E,67,[[["self"]],[R[26]]]],[11,R[10],E,E,68,[[[U]],[R[0]]]],[11,"from",E,E,68,[[[T]],[T]]],[11,"into",E,E,68,[[],[U]]],[11,R[12],E,E,68,[[],[R[0]]]],[11,R[25],E,E,68,[[["self"]],[T]]],[11,R[13],E,E,68,[[["self"]],[T]]],[11,R[14],E,E,68,[[["self"]],[R[26]]]],[11,R[10],E,E,69,[[[U]],[R[0]]]],[11,"from",E,E,69,[[[T]],[T]]],[11,"into",E,E,69,[[],[U]]],[11,R[12],E,E,69,[[],[R[0]]]],[11,R[25],E,E,69,[[["self"]],[T]]],[11,R[13],E,E,69,[[["self"]],[T]]],[11,R[14],E,E,69,[[["self"]],[R[26]]]],[11,R[10],E,E,70,[[[U]],[R[0]]]],[11,"from",E,E,70,[[[T]],[T]]],[11,"into",E,E,70,[[],[U]]],[11,R[12],E,E,70,[[],[R[0]]]],[11,R[25],E,E,70,[[["self"]],[T]]],[11,R[13],E,E,70,[[["self"]],[T]]],[11,R[14],E,E,70,[[["self"]],[R[26]]]],[11,R[10],E,E,71,[[[U]],[R[0]]]],[11,"from",E,E,71,[[[T]],[T]]],[11,"into",E,E,71,[[],[U]]],[11,R[12],E,E,71,[[],[R[0]]]],[11,R[25],E,E,71,[[["self"]],[T]]],[11,R[13],E,E,71,[[["self"]],[T]]],[11,R[14],E,E,71,[[["self"]],[R[26]]]],[11,R[10],E,E,72,[[[U]],[R[0]]]],[11,"from",E,E,72,[[[T]],[T]]],[11,"into",E,E,72,[[],[U]]],[11,R[12],E,E,72,[[],[R[0]]]],[11,R[25],E,E,72,[[["self"]],[T]]],[11,R[13],E,E,72,[[["self"]],[T]]],[11,R[14],E,E,72,[[["self"]],[R[26]]]],[11,R[10],E,E,73,[[[U]],[R[0]]]],[11,"from",E,E,73,[[[T]],[T]]],[11,"into",E,E,73,[[],[U]]],[11,R[12],E,E,73,[[],[R[0]]]],[11,R[25],E,E,73,[[["self"]],[T]]],[11,R[13],E,E,73,[[["self"]],[T]]],[11,R[14],E,E,73,[[["self"]],[R[26]]]],[11,R[10],E,E,74,[[[U]],[R[0]]]],[11,"from",E,E,74,[[[T]],[T]]],[11,"into",E,E,74,[[],[U]]],[11,R[12],E,E,74,[[],[R[0]]]],[11,R[25],E,E,74,[[["self"]],[T]]],[11,R[13],E,E,74,[[["self"]],[T]]],[11,R[14],E,E,74,[[["self"]],[R[26]]]],[11,R[10],E,E,75,[[[U]],[R[0]]]],[11,"from",E,E,75,[[[T]],[T]]],[11,"into",E,E,75,[[],[U]]],[11,R[12],E,E,75,[[],[R[0]]]],[11,R[25],E,E,75,[[["self"]],[T]]],[11,R[13],E,E,75,[[["self"]],[T]]],[11,R[14],E,E,75,[[["self"]],[R[26]]]],[11,R[10],R[316],E,76,[[[U]],[R[0]]]],[11,"from",E,E,76,[[[T]],[T]]],[11,"into",E,E,76,[[],[U]]],[11,R[12],E,E,76,[[],[R[0]]]],[11,R[25],E,E,76,[[["self"]],[T]]],[11,R[13],E,E,76,[[["self"]],[T]]],[11,R[14],E,E,76,[[["self"]],[R[26]]]],[11,R[10],E,E,77,[[[U]],[R[0]]]],[11,"from",E,E,77,[[[T]],[T]]],[11,"into",E,E,77,[[],[U]]],[11,R[12],E,E,77,[[],[R[0]]]],[11,R[25],E,E,77,[[["self"]],[T]]],[11,R[13],E,E,77,[[["self"]],[T]]],[11,R[14],E,E,77,[[["self"]],[R[26]]]],[11,R[10],E,E,78,[[[U]],[R[0]]]],[11,"from",E,E,78,[[[T]],[T]]],[11,"into",E,E,78,[[],[U]]],[11,R[12],E,E,78,[[],[R[0]]]],[11,R[25],E,E,78,[[["self"]],[T]]],[11,R[13],E,E,78,[[["self"]],[T]]],[11,R[14],E,E,78,[[["self"]],[R[26]]]],[11,R[10],E,E,79,[[[U]],[R[0]]]],[11,"from",E,E,79,[[[T]],[T]]],[11,"into",E,E,79,[[],[U]]],[11,R[12],E,E,79,[[],[R[0]]]],[11,R[25],E,E,79,[[["self"]],[T]]],[11,R[13],E,E,79,[[["self"]],[T]]],[11,R[14],E,E,79,[[["self"]],[R[26]]]],[11,R[10],E,E,80,[[[U]],[R[0]]]],[11,"from",E,E,80,[[[T]],[T]]],[11,"into",E,E,80,[[],[U]]],[11,R[12],E,E,80,[[],[R[0]]]],[11,R[25],E,E,80,[[["self"]],[T]]],[11,R[13],E,E,80,[[["self"]],[T]]],[11,R[14],E,E,80,[[["self"]],[R[26]]]],[11,R[10],E,E,81,[[[U]],[R[0]]]],[11,"from",E,E,81,[[[T]],[T]]],[11,"into",E,E,81,[[],[U]]],[11,R[12],E,E,81,[[],[R[0]]]],[11,R[25],E,E,81,[[["self"]],[T]]],[11,R[13],E,E,81,[[["self"]],[T]]],[11,R[14],E,E,81,[[["self"]],[R[26]]]],[11,R[10],E,E,82,[[[U]],[R[0]]]],[11,"from",E,E,82,[[[T]],[T]]],[11,"into",E,E,82,[[],[U]]],[11,R[12],E,E,82,[[],[R[0]]]],[11,R[25],E,E,82,[[["self"]],[T]]],[11,R[13],E,E,82,[[["self"]],[T]]],[11,R[14],E,E,82,[[["self"]],[R[26]]]],[11,R[10],E,E,83,[[[U]],[R[0]]]],[11,"from",E,E,83,[[[T]],[T]]],[11,"into",E,E,83,[[],[U]]],[11,R[12],E,E,83,[[],[R[0]]]],[11,R[25],E,E,83,[[["self"]],[T]]],[11,R[13],E,E,83,[[["self"]],[T]]],[11,R[14],E,E,83,[[["self"]],[R[26]]]],[11,R[10],E,E,84,[[[U]],[R[0]]]],[11,"from",E,E,84,[[[T]],[T]]],[11,"into",E,E,84,[[],[U]]],[11,R[12],E,E,84,[[],[R[0]]]],[11,R[25],E,E,84,[[["self"]],[T]]],[11,R[13],E,E,84,[[["self"]],[T]]],[11,R[14],E,E,84,[[["self"]],[R[26]]]],[11,R[10],E,E,85,[[[U]],[R[0]]]],[11,"from",E,E,85,[[[T]],[T]]],[11,"into",E,E,85,[[],[U]]],[11,R[12],E,E,85,[[],[R[0]]]],[11,R[25],E,E,85,[[["self"]],[T]]],[11,R[13],E,E,85,[[["self"]],[T]]],[11,R[14],E,E,85,[[["self"]],[R[26]]]],[11,R[10],E,E,86,[[[U]],[R[0]]]],[11,"from",E,E,86,[[[T]],[T]]],[11,"into",E,E,86,[[],[U]]],[11,R[12],E,E,86,[[],[R[0]]]],[11,R[25],E,E,86,[[["self"]],[T]]],[11,R[13],E,E,86,[[["self"]],[T]]],[11,R[14],E,E,86,[[["self"]],[R[26]]]],[11,R[10],E,E,87,[[[U]],[R[0]]]],[11,"from",E,E,87,[[[T]],[T]]],[11,"into",E,E,87,[[],[U]]],[11,R[12],E,E,87,[[],[R[0]]]],[11,R[25],E,E,87,[[["self"]],[T]]],[11,R[13],E,E,87,[[["self"]],[T]]],[11,R[14],E,E,87,[[["self"]],[R[26]]]],[11,R[10],E,E,88,[[[U]],[R[0]]]],[11,"from",E,E,88,[[[T]],[T]]],[11,"into",E,E,88,[[],[U]]],[11,R[12],E,E,88,[[],[R[0]]]],[11,R[25],E,E,88,[[["self"]],[T]]],[11,R[13],E,E,88,[[["self"]],[T]]],[11,R[14],E,E,88,[[["self"]],[R[26]]]],[11,R[10],E,E,89,[[[U]],[R[0]]]],[11,"from",E,E,89,[[[T]],[T]]],[11,"into",E,E,89,[[],[U]]],[11,R[12],E,E,89,[[],[R[0]]]],[11,R[25],E,E,89,[[["self"]],[T]]],[11,R[13],E,E,89,[[["self"]],[T]]],[11,R[14],E,E,89,[[["self"]],[R[26]]]],[11,R[10],E,E,90,[[[U]],[R[0]]]],[11,"from",E,E,90,[[[T]],[T]]],[11,"into",E,E,90,[[],[U]]],[11,R[12],E,E,90,[[],[R[0]]]],[11,R[25],E,E,90,[[["self"]],[T]]],[11,R[13],E,E,90,[[["self"]],[T]]],[11,R[14],E,E,90,[[["self"]],[R[26]]]],[11,R[10],E,E,91,[[[U]],[R[0]]]],[11,"from",E,E,91,[[[T]],[T]]],[11,"into",E,E,91,[[],[U]]],[11,R[12],E,E,91,[[],[R[0]]]],[11,R[25],E,E,91,[[["self"]],[T]]],[11,R[13],E,E,91,[[["self"]],[T]]],[11,R[14],E,E,91,[[["self"]],[R[26]]]],[11,R[10],E,E,92,[[[U]],[R[0]]]],[11,"from",E,E,92,[[[T]],[T]]],[11,"into",E,E,92,[[],[U]]],[11,R[12],E,E,92,[[],[R[0]]]],[11,R[25],E,E,92,[[["self"]],[T]]],[11,R[13],E,E,92,[[["self"]],[T]]],[11,R[14],E,E,92,[[["self"]],[R[26]]]],[11,R[10],E,E,93,[[[U]],[R[0]]]],[11,"from",E,E,93,[[[T]],[T]]],[11,"into",E,E,93,[[],[U]]],[11,R[12],E,E,93,[[],[R[0]]]],[11,R[25],E,E,93,[[["self"]],[T]]],[11,R[13],E,E,93,[[["self"]],[T]]],[11,R[14],E,E,93,[[["self"]],[R[26]]]],[11,R[10],E,E,94,[[[U]],[R[0]]]],[11,"from",E,E,94,[[[T]],[T]]],[11,"into",E,E,94,[[],[U]]],[11,R[12],E,E,94,[[],[R[0]]]],[11,R[25],E,E,94,[[["self"]],[T]]],[11,R[13],E,E,94,[[["self"]],[T]]],[11,R[14],E,E,94,[[["self"]],[R[26]]]],[11,R[10],E,E,95,[[[U]],[R[0]]]],[11,"from",E,E,95,[[[T]],[T]]],[11,"into",E,E,95,[[],[U]]],[11,R[12],E,E,95,[[],[R[0]]]],[11,R[25],E,E,95,[[["self"]],[T]]],[11,R[13],E,E,95,[[["self"]],[T]]],[11,R[14],E,E,95,[[["self"]],[R[26]]]],[11,R[10],E,E,96,[[[U]],[R[0]]]],[11,"from",E,E,96,[[[T]],[T]]],[11,"into",E,E,96,[[],[U]]],[11,R[12],E,E,96,[[],[R[0]]]],[11,R[25],E,E,96,[[["self"]],[T]]],[11,R[13],E,E,96,[[["self"]],[T]]],[11,R[14],E,E,96,[[["self"]],[R[26]]]],[11,R[10],E,E,97,[[[U]],[R[0]]]],[11,"from",E,E,97,[[[T]],[T]]],[11,"into",E,E,97,[[],[U]]],[11,R[12],E,E,97,[[],[R[0]]]],[11,R[25],E,E,97,[[["self"]],[T]]],[11,R[13],E,E,97,[[["self"]],[T]]],[11,R[14],E,E,97,[[["self"]],[R[26]]]],[11,R[10],E,E,98,[[[U]],[R[0]]]],[11,"from",E,E,98,[[[T]],[T]]],[11,"into",E,E,98,[[],[U]]],[11,R[12],E,E,98,[[],[R[0]]]],[11,R[25],E,E,98,[[["self"]],[T]]],[11,R[13],E,E,98,[[["self"]],[T]]],[11,R[14],E,E,98,[[["self"]],[R[26]]]],[11,R[10],E,E,99,[[[U]],[R[0]]]],[11,"from",E,E,99,[[[T]],[T]]],[11,"into",E,E,99,[[],[U]]],[11,R[12],E,E,99,[[],[R[0]]]],[11,R[25],E,E,99,[[["self"]],[T]]],[11,R[13],E,E,99,[[["self"]],[T]]],[11,R[14],E,E,99,[[["self"]],[R[26]]]],[11,R[10],E,E,100,[[[U]],[R[0]]]],[11,"from",E,E,100,[[[T]],[T]]],[11,"into",E,E,100,[[],[U]]],[11,R[12],E,E,100,[[],[R[0]]]],[11,R[25],E,E,100,[[["self"]],[T]]],[11,R[13],E,E,100,[[["self"]],[T]]],[11,R[14],E,E,100,[[["self"]],[R[26]]]],[11,R[10],E,E,101,[[[U]],[R[0]]]],[11,"from",E,E,101,[[[T]],[T]]],[11,"into",E,E,101,[[],[U]]],[11,R[12],E,E,101,[[],[R[0]]]],[11,R[25],E,E,101,[[["self"]],[T]]],[11,R[13],E,E,101,[[["self"]],[T]]],[11,R[14],E,E,101,[[["self"]],[R[26]]]],[11,R[10],E,E,102,[[[U]],[R[0]]]],[11,"from",E,E,102,[[[T]],[T]]],[11,"into",E,E,102,[[],[U]]],[11,R[12],E,E,102,[[],[R[0]]]],[11,R[25],E,E,102,[[["self"]],[T]]],[11,R[13],E,E,102,[[["self"]],[T]]],[11,R[14],E,E,102,[[["self"]],[R[26]]]],[11,R[10],E,E,103,[[[U]],[R[0]]]],[11,"from",E,E,103,[[[T]],[T]]],[11,"into",E,E,103,[[],[U]]],[11,R[12],E,E,103,[[],[R[0]]]],[11,R[25],E,E,103,[[["self"]],[T]]],[11,R[13],E,E,103,[[["self"]],[T]]],[11,R[14],E,E,103,[[["self"]],[R[26]]]],[11,R[10],E,E,104,[[[U]],[R[0]]]],[11,"from",E,E,104,[[[T]],[T]]],[11,"into",E,E,104,[[],[U]]],[11,R[12],E,E,104,[[],[R[0]]]],[11,R[25],E,E,104,[[["self"]],[T]]],[11,R[13],E,E,104,[[["self"]],[T]]],[11,R[14],E,E,104,[[["self"]],[R[26]]]],[11,R[10],E,E,105,[[[U]],[R[0]]]],[11,"from",E,E,105,[[[T]],[T]]],[11,"into",E,E,105,[[],[U]]],[11,R[12],E,E,105,[[],[R[0]]]],[11,R[25],E,E,105,[[["self"]],[T]]],[11,R[13],E,E,105,[[["self"]],[T]]],[11,R[14],E,E,105,[[["self"]],[R[26]]]],[11,R[10],E,E,106,[[[U]],[R[0]]]],[11,"from",E,E,106,[[[T]],[T]]],[11,"into",E,E,106,[[],[U]]],[11,R[12],E,E,106,[[],[R[0]]]],[11,R[25],E,E,106,[[["self"]],[T]]],[11,R[13],E,E,106,[[["self"]],[T]]],[11,R[14],E,E,106,[[["self"]],[R[26]]]],[11,R[10],E,E,107,[[[U]],[R[0]]]],[11,"from",E,E,107,[[[T]],[T]]],[11,"into",E,E,107,[[],[U]]],[11,R[12],E,E,107,[[],[R[0]]]],[11,R[25],E,E,107,[[["self"]],[T]]],[11,R[13],E,E,107,[[["self"]],[T]]],[11,R[14],E,E,107,[[["self"]],[R[26]]]],[11,R[10],E,E,108,[[[U]],[R[0]]]],[11,"from",E,E,108,[[[T]],[T]]],[11,"into",E,E,108,[[],[U]]],[11,R[12],E,E,108,[[],[R[0]]]],[11,R[25],E,E,108,[[["self"]],[T]]],[11,R[13],E,E,108,[[["self"]],[T]]],[11,R[14],E,E,108,[[["self"]],[R[26]]]],[11,R[10],E,E,109,[[[U]],[R[0]]]],[11,"from",E,E,109,[[[T]],[T]]],[11,"into",E,E,109,[[],[U]]],[11,R[12],E,E,109,[[],[R[0]]]],[11,R[25],E,E,109,[[["self"]],[T]]],[11,R[13],E,E,109,[[["self"]],[T]]],[11,R[14],E,E,109,[[["self"]],[R[26]]]],[11,R[10],E,E,110,[[[U]],[R[0]]]],[11,"from",E,E,110,[[[T]],[T]]],[11,"into",E,E,110,[[],[U]]],[11,R[12],E,E,110,[[],[R[0]]]],[11,R[25],E,E,110,[[["self"]],[T]]],[11,R[13],E,E,110,[[["self"]],[T]]],[11,R[14],E,E,110,[[["self"]],[R[26]]]],[11,R[10],E,E,111,[[[U]],[R[0]]]],[11,"from",E,E,111,[[[T]],[T]]],[11,"into",E,E,111,[[],[U]]],[11,R[12],E,E,111,[[],[R[0]]]],[11,R[25],E,E,111,[[["self"]],[T]]],[11,R[13],E,E,111,[[["self"]],[T]]],[11,R[14],E,E,111,[[["self"]],[R[26]]]],[11,R[10],E,E,112,[[[U]],[R[0]]]],[11,"from",E,E,112,[[[T]],[T]]],[11,"into",E,E,112,[[],[U]]],[11,R[12],E,E,112,[[],[R[0]]]],[11,R[25],E,E,112,[[["self"]],[T]]],[11,R[13],E,E,112,[[["self"]],[T]]],[11,R[14],E,E,112,[[["self"]],[R[26]]]],[11,R[10],E,E,113,[[[U]],[R[0]]]],[11,"from",E,E,113,[[[T]],[T]]],[11,"into",E,E,113,[[],[U]]],[11,R[12],E,E,113,[[],[R[0]]]],[11,R[25],E,E,113,[[["self"]],[T]]],[11,R[13],E,E,113,[[["self"]],[T]]],[11,R[14],E,E,113,[[["self"]],[R[26]]]],[11,R[10],E,E,114,[[[U]],[R[0]]]],[11,"from",E,E,114,[[[T]],[T]]],[11,"into",E,E,114,[[],[U]]],[11,R[12],E,E,114,[[],[R[0]]]],[11,R[25],E,E,114,[[["self"]],[T]]],[11,R[13],E,E,114,[[["self"]],[T]]],[11,R[14],E,E,114,[[["self"]],[R[26]]]],[11,R[10],E,E,115,[[[U]],[R[0]]]],[11,"from",E,E,115,[[[T]],[T]]],[11,"into",E,E,115,[[],[U]]],[11,R[12],E,E,115,[[],[R[0]]]],[11,R[25],E,E,115,[[["self"]],[T]]],[11,R[13],E,E,115,[[["self"]],[T]]],[11,R[14],E,E,115,[[["self"]],[R[26]]]],[11,R[10],E,E,116,[[[U]],[R[0]]]],[11,"from",E,E,116,[[[T]],[T]]],[11,"into",E,E,116,[[],[U]]],[11,R[12],E,E,116,[[],[R[0]]]],[11,R[25],E,E,116,[[["self"]],[T]]],[11,R[13],E,E,116,[[["self"]],[T]]],[11,R[14],E,E,116,[[["self"]],[R[26]]]],[11,R[10],E,E,117,[[[U]],[R[0]]]],[11,"from",E,E,117,[[[T]],[T]]],[11,"into",E,E,117,[[],[U]]],[11,R[12],E,E,117,[[],[R[0]]]],[11,R[25],E,E,117,[[["self"]],[T]]],[11,R[13],E,E,117,[[["self"]],[T]]],[11,R[14],E,E,117,[[["self"]],[R[26]]]],[11,R[10],E,E,118,[[[U]],[R[0]]]],[11,"from",E,E,118,[[[T]],[T]]],[11,"into",E,E,118,[[],[U]]],[11,R[12],E,E,118,[[],[R[0]]]],[11,R[25],E,E,118,[[["self"]],[T]]],[11,R[13],E,E,118,[[["self"]],[T]]],[11,R[14],E,E,118,[[["self"]],[R[26]]]],[11,R[10],E,E,119,[[[U]],[R[0]]]],[11,"from",E,E,119,[[[T]],[T]]],[11,"into",E,E,119,[[],[U]]],[11,R[12],E,E,119,[[],[R[0]]]],[11,R[25],E,E,119,[[["self"]],[T]]],[11,R[13],E,E,119,[[["self"]],[T]]],[11,R[14],E,E,119,[[["self"]],[R[26]]]],[11,R[10],E,E,120,[[[U]],[R[0]]]],[11,"from",E,E,120,[[[T]],[T]]],[11,"into",E,E,120,[[],[U]]],[11,R[12],E,E,120,[[],[R[0]]]],[11,R[25],E,E,120,[[["self"]],[T]]],[11,R[13],E,E,120,[[["self"]],[T]]],[11,R[14],E,E,120,[[["self"]],[R[26]]]],[11,R[10],E,E,121,[[[U]],[R[0]]]],[11,"from",E,E,121,[[[T]],[T]]],[11,"into",E,E,121,[[],[U]]],[11,R[12],E,E,121,[[],[R[0]]]],[11,R[25],E,E,121,[[["self"]],[T]]],[11,R[13],E,E,121,[[["self"]],[T]]],[11,R[14],E,E,121,[[["self"]],[R[26]]]],[11,R[10],E,E,122,[[[U]],[R[0]]]],[11,"from",E,E,122,[[[T]],[T]]],[11,"into",E,E,122,[[],[U]]],[11,R[12],E,E,122,[[],[R[0]]]],[11,R[25],E,E,122,[[["self"]],[T]]],[11,R[13],E,E,122,[[["self"]],[T]]],[11,R[14],E,E,122,[[["self"]],[R[26]]]],[11,R[10],R[317],E,123,[[[U]],[R[0]]]],[11,"from",E,E,123,[[[T]],[T]]],[11,"into",E,E,123,[[],[U]]],[11,R[12],E,E,123,[[],[R[0]]]],[11,R[25],E,E,123,[[["self"]],[T]]],[11,R[13],E,E,123,[[["self"]],[T]]],[11,R[14],E,E,123,[[["self"]],[R[26]]]],[11,R[10],E,E,124,[[[U]],[R[0]]]],[11,"from",E,E,124,[[[T]],[T]]],[11,"into",E,E,124,[[],[U]]],[11,R[12],E,E,124,[[],[R[0]]]],[11,R[25],E,E,124,[[["self"]],[T]]],[11,R[13],E,E,124,[[["self"]],[T]]],[11,R[14],E,E,124,[[["self"]],[R[26]]]],[11,R[10],E,E,125,[[[U]],[R[0]]]],[11,"from",E,E,125,[[[T]],[T]]],[11,"into",E,E,125,[[],[U]]],[11,R[12],E,E,125,[[],[R[0]]]],[11,R[25],E,E,125,[[["self"]],[T]]],[11,R[13],E,E,125,[[["self"]],[T]]],[11,R[14],E,E,125,[[["self"]],[R[26]]]],[11,R[10],E,E,126,[[[U]],[R[0]]]],[11,"from",E,E,126,[[[T]],[T]]],[11,"into",E,E,126,[[],[U]]],[11,R[12],E,E,126,[[],[R[0]]]],[11,R[25],E,E,126,[[["self"]],[T]]],[11,R[13],E,E,126,[[["self"]],[T]]],[11,R[14],E,E,126,[[["self"]],[R[26]]]],[11,R[10],E,E,127,[[[U]],[R[0]]]],[11,"from",E,E,127,[[[T]],[T]]],[11,"into",E,E,127,[[],[U]]],[11,R[12],E,E,127,[[],[R[0]]]],[11,R[25],E,E,127,[[["self"]],[T]]],[11,R[13],E,E,127,[[["self"]],[T]]],[11,R[14],E,E,127,[[["self"]],[R[26]]]],[11,R[10],E,E,128,[[[U]],[R[0]]]],[11,"from",E,E,128,[[[T]],[T]]],[11,"into",E,E,128,[[],[U]]],[11,R[12],E,E,128,[[],[R[0]]]],[11,R[25],E,E,128,[[["self"]],[T]]],[11,R[13],E,E,128,[[["self"]],[T]]],[11,R[14],E,E,128,[[["self"]],[R[26]]]],[11,R[10],E,E,129,[[[U]],[R[0]]]],[11,"from",E,E,129,[[[T]],[T]]],[11,"into",E,E,129,[[],[U]]],[11,R[12],E,E,129,[[],[R[0]]]],[11,R[25],E,E,129,[[["self"]],[T]]],[11,R[13],E,E,129,[[["self"]],[T]]],[11,R[14],E,E,129,[[["self"]],[R[26]]]],[11,R[10],E,E,130,[[[U]],[R[0]]]],[11,"from",E,E,130,[[[T]],[T]]],[11,"into",E,E,130,[[],[U]]],[11,R[12],E,E,130,[[],[R[0]]]],[11,R[25],E,E,130,[[["self"]],[T]]],[11,R[13],E,E,130,[[["self"]],[T]]],[11,R[14],E,E,130,[[["self"]],[R[26]]]],[11,R[10],E,E,131,[[[U]],[R[0]]]],[11,"from",E,E,131,[[[T]],[T]]],[11,"into",E,E,131,[[],[U]]],[11,R[12],E,E,131,[[],[R[0]]]],[11,R[25],E,E,131,[[["self"]],[T]]],[11,R[13],E,E,131,[[["self"]],[T]]],[11,R[14],E,E,131,[[["self"]],[R[26]]]],[11,R[10],E,E,132,[[[U]],[R[0]]]],[11,"from",E,E,132,[[[T]],[T]]],[11,"into",E,E,132,[[],[U]]],[11,R[12],E,E,132,[[],[R[0]]]],[11,R[25],E,E,132,[[["self"]],[T]]],[11,R[13],E,E,132,[[["self"]],[T]]],[11,R[14],E,E,132,[[["self"]],[R[26]]]],[11,R[10],E,E,133,[[[U]],[R[0]]]],[11,"from",E,E,133,[[[T]],[T]]],[11,"into",E,E,133,[[],[U]]],[11,R[12],E,E,133,[[],[R[0]]]],[11,R[25],E,E,133,[[["self"]],[T]]],[11,R[13],E,E,133,[[["self"]],[T]]],[11,R[14],E,E,133,[[["self"]],[R[26]]]],[11,R[10],E,E,134,[[[U]],[R[0]]]],[11,"from",E,E,134,[[[T]],[T]]],[11,"into",E,E,134,[[],[U]]],[11,R[12],E,E,134,[[],[R[0]]]],[11,R[25],E,E,134,[[["self"]],[T]]],[11,R[13],E,E,134,[[["self"]],[T]]],[11,R[14],E,E,134,[[["self"]],[R[26]]]],[11,R[10],E,E,135,[[[U]],[R[0]]]],[11,"from",E,E,135,[[[T]],[T]]],[11,"into",E,E,135,[[],[U]]],[11,R[12],E,E,135,[[],[R[0]]]],[11,R[25],E,E,135,[[["self"]],[T]]],[11,R[13],E,E,135,[[["self"]],[T]]],[11,R[14],E,E,135,[[["self"]],[R[26]]]],[11,R[10],E,E,136,[[[U]],[R[0]]]],[11,"from",E,E,136,[[[T]],[T]]],[11,"into",E,E,136,[[],[U]]],[11,R[12],E,E,136,[[],[R[0]]]],[11,R[25],E,E,136,[[["self"]],[T]]],[11,R[13],E,E,136,[[["self"]],[T]]],[11,R[14],E,E,136,[[["self"]],[R[26]]]],[11,R[10],E,E,165,[[[U]],[R[0]]]],[11,"from",E,E,165,[[[T]],[T]]],[11,"into",E,E,165,[[],[U]]],[11,R[12],E,E,165,[[],[R[0]]]],[11,R[25],E,E,165,[[["self"]],[T]]],[11,R[13],E,E,165,[[["self"]],[T]]],[11,R[14],E,E,165,[[["self"]],[R[26]]]],[11,R[10],E,E,137,[[[U]],[R[0]]]],[11,"from",E,E,137,[[[T]],[T]]],[11,"into",E,E,137,[[],[U]]],[11,R[12],E,E,137,[[],[R[0]]]],[11,R[25],E,E,137,[[["self"]],[T]]],[11,R[13],E,E,137,[[["self"]],[T]]],[11,R[14],E,E,137,[[["self"]],[R[26]]]],[11,R[10],E,E,138,[[[U]],[R[0]]]],[11,"from",E,E,138,[[[T]],[T]]],[11,"into",E,E,138,[[],[U]]],[11,R[12],E,E,138,[[],[R[0]]]],[11,R[25],E,E,138,[[["self"]],[T]]],[11,R[13],E,E,138,[[["self"]],[T]]],[11,R[14],E,E,138,[[["self"]],[R[26]]]],[11,R[10],E,E,139,[[[U]],[R[0]]]],[11,"from",E,E,139,[[[T]],[T]]],[11,"into",E,E,139,[[],[U]]],[11,R[12],E,E,139,[[],[R[0]]]],[11,R[25],E,E,139,[[["self"]],[T]]],[11,R[13],E,E,139,[[["self"]],[T]]],[11,R[14],E,E,139,[[["self"]],[R[26]]]],[11,R[10],E,E,140,[[[U]],[R[0]]]],[11,"from",E,E,140,[[[T]],[T]]],[11,"into",E,E,140,[[],[U]]],[11,R[12],E,E,140,[[],[R[0]]]],[11,R[25],E,E,140,[[["self"]],[T]]],[11,R[13],E,E,140,[[["self"]],[T]]],[11,R[14],E,E,140,[[["self"]],[R[26]]]],[11,R[10],R[318],E,141,[[[U]],[R[0]]]],[11,"from",E,E,141,[[[T]],[T]]],[11,"into",E,E,141,[[],[U]]],[11,R[12],E,E,141,[[],[R[0]]]],[11,R[25],E,E,141,[[["self"]],[T]]],[11,R[13],E,E,141,[[["self"]],[T]]],[11,R[14],E,E,141,[[["self"]],[R[26]]]],[11,R[10],E,E,142,[[[U]],[R[0]]]],[11,"from",E,E,142,[[[T]],[T]]],[11,"into",E,E,142,[[],[U]]],[11,R[12],E,E,142,[[],[R[0]]]],[11,R[25],E,E,142,[[["self"]],[T]]],[11,R[13],E,E,142,[[["self"]],[T]]],[11,R[14],E,E,142,[[["self"]],[R[26]]]],[11,R[10],E,E,143,[[[U]],[R[0]]]],[11,"from",E,E,143,[[[T]],[T]]],[11,"into",E,E,143,[[],[U]]],[11,R[12],E,E,143,[[],[R[0]]]],[11,R[25],E,E,143,[[["self"]],[T]]],[11,R[13],E,E,143,[[["self"]],[T]]],[11,R[14],E,E,143,[[["self"]],[R[26]]]],[11,R[10],R[557],E,144,[[[U]],[R[0]]]],[11,"from",E,E,144,[[[T]],[T]]],[11,"into",E,E,144,[[],[U]]],[11,R[12],E,E,144,[[],[R[0]]]],[11,R[25],E,E,144,[[["self"]],[T]]],[11,R[13],E,E,144,[[["self"]],[T]]],[11,R[14],E,E,144,[[["self"]],[R[26]]]],[11,R[10],E,E,145,[[[U]],[R[0]]]],[11,"from",E,E,145,[[[T]],[T]]],[11,"into",E,E,145,[[],[U]]],[11,R[12],E,E,145,[[],[R[0]]]],[11,R[25],E,E,145,[[["self"]],[T]]],[11,R[13],E,E,145,[[["self"]],[T]]],[11,R[14],E,E,145,[[["self"]],[R[26]]]],[11,R[10],E,E,146,[[[U]],[R[0]]]],[11,"from",E,E,146,[[[T]],[T]]],[11,"into",E,E,146,[[],[U]]],[11,R[12],E,E,146,[[],[R[0]]]],[11,R[25],E,E,146,[[["self"]],[T]]],[11,R[13],E,E,146,[[["self"]],[T]]],[11,R[14],E,E,146,[[["self"]],[R[26]]]],[11,R[10],E,E,147,[[[U]],[R[0]]]],[11,"from",E,E,147,[[[T]],[T]]],[11,"into",E,E,147,[[],[U]]],[11,R[12],E,E,147,[[],[R[0]]]],[11,R[25],E,E,147,[[["self"]],[T]]],[11,R[13],E,E,147,[[["self"]],[T]]],[11,R[14],E,E,147,[[["self"]],[R[26]]]],[11,R[10],E,E,148,[[[U]],[R[0]]]],[11,"from",E,E,148,[[[T]],[T]]],[11,"into",E,E,148,[[],[U]]],[11,R[12],E,E,148,[[],[R[0]]]],[11,R[25],E,E,148,[[["self"]],[T]]],[11,R[13],E,E,148,[[["self"]],[T]]],[11,R[14],E,E,148,[[["self"]],[R[26]]]],[11,R[10],E,E,149,[[[U]],[R[0]]]],[11,"from",E,E,149,[[[T]],[T]]],[11,"into",E,E,149,[[],[U]]],[11,R[12],E,E,149,[[],[R[0]]]],[11,R[25],E,E,149,[[["self"]],[T]]],[11,R[13],E,E,149,[[["self"]],[T]]],[11,R[14],E,E,149,[[["self"]],[R[26]]]],[11,R[10],E,E,150,[[[U]],[R[0]]]],[11,"from",E,E,150,[[[T]],[T]]],[11,"into",E,E,150,[[],[U]]],[11,R[12],E,E,150,[[],[R[0]]]],[11,R[25],E,E,150,[[["self"]],[T]]],[11,R[13],E,E,150,[[["self"]],[T]]],[11,R[14],E,E,150,[[["self"]],[R[26]]]],[11,R[10],E,E,151,[[[U]],[R[0]]]],[11,"from",E,E,151,[[[T]],[T]]],[11,"into",E,E,151,[[],[U]]],[11,R[12],E,E,151,[[],[R[0]]]],[11,R[25],E,E,151,[[["self"]],[T]]],[11,R[13],E,E,151,[[["self"]],[T]]],[11,R[14],E,E,151,[[["self"]],[R[26]]]],[11,R[10],E,E,152,[[[U]],[R[0]]]],[11,"from",E,E,152,[[[T]],[T]]],[11,"into",E,E,152,[[],[U]]],[11,R[12],E,E,152,[[],[R[0]]]],[11,R[25],E,E,152,[[["self"]],[T]]],[11,R[13],E,E,152,[[["self"]],[T]]],[11,R[14],E,E,152,[[["self"]],[R[26]]]],[11,R[10],E,E,153,[[[U]],[R[0]]]],[11,"from",E,E,153,[[[T]],[T]]],[11,"into",E,E,153,[[],[U]]],[11,R[12],E,E,153,[[],[R[0]]]],[11,R[25],E,E,153,[[["self"]],[T]]],[11,R[13],E,E,153,[[["self"]],[T]]],[11,R[14],E,E,153,[[["self"]],[R[26]]]],[11,R[10],E,E,154,[[[U]],[R[0]]]],[11,"from",E,E,154,[[[T]],[T]]],[11,"into",E,E,154,[[],[U]]],[11,R[12],E,E,154,[[],[R[0]]]],[11,R[25],E,E,154,[[["self"]],[T]]],[11,R[13],E,E,154,[[["self"]],[T]]],[11,R[14],E,E,154,[[["self"]],[R[26]]]],[11,R[10],E,E,155,[[[U]],[R[0]]]],[11,"from",E,E,155,[[[T]],[T]]],[11,"into",E,E,155,[[],[U]]],[11,R[12],E,E,155,[[],[R[0]]]],[11,R[25],E,E,155,[[["self"]],[T]]],[11,R[13],E,E,155,[[["self"]],[T]]],[11,R[14],E,E,155,[[["self"]],[R[26]]]],[11,R[10],E,E,156,[[[U]],[R[0]]]],[11,"from",E,E,156,[[[T]],[T]]],[11,"into",E,E,156,[[],[U]]],[11,R[12],E,E,156,[[],[R[0]]]],[11,R[25],E,E,156,[[["self"]],[T]]],[11,R[13],E,E,156,[[["self"]],[T]]],[11,R[14],E,E,156,[[["self"]],[R[26]]]],[11,R[10],E,E,157,[[[U]],[R[0]]]],[11,"from",E,E,157,[[[T]],[T]]],[11,"into",E,E,157,[[],[U]]],[11,R[12],E,E,157,[[],[R[0]]]],[11,R[25],E,E,157,[[["self"]],[T]]],[11,R[13],E,E,157,[[["self"]],[T]]],[11,R[14],E,E,157,[[["self"]],[R[26]]]],[11,R[10],E,E,158,[[[U]],[R[0]]]],[11,"from",E,E,158,[[[T]],[T]]],[11,"into",E,E,158,[[],[U]]],[11,R[12],E,E,158,[[],[R[0]]]],[11,R[25],E,E,158,[[["self"]],[T]]],[11,R[13],E,E,158,[[["self"]],[T]]],[11,R[14],E,E,158,[[["self"]],[R[26]]]],[11,R[10],E,E,159,[[[U]],[R[0]]]],[11,"from",E,E,159,[[[T]],[T]]],[11,"into",E,E,159,[[],[U]]],[11,R[12],E,E,159,[[],[R[0]]]],[11,R[25],E,E,159,[[["self"]],[T]]],[11,R[13],E,E,159,[[["self"]],[T]]],[11,R[14],E,E,159,[[["self"]],[R[26]]]],[11,R[10],R[319],E,160,[[[U]],[R[0]]]],[11,"from",E,E,160,[[[T]],[T]]],[11,"into",E,E,160,[[],[U]]],[11,R[12],E,E,160,[[],[R[0]]]],[11,R[25],E,E,160,[[["self"]],[T]]],[11,R[13],E,E,160,[[["self"]],[T]]],[11,R[14],E,E,160,[[["self"]],[R[26]]]],[11,R[10],R[320],E,161,[[[U]],[R[0]]]],[11,"from",E,E,161,[[[T]],[T]]],[11,"into",E,E,161,[[],[U]]],[11,R[12],E,E,161,[[],[R[0]]]],[11,R[25],E,E,161,[[["self"]],[T]]],[11,R[13],E,E,161,[[["self"]],[T]]],[11,R[14],E,E,161,[[["self"]],[R[26]]]],[11,R[10],E,E,162,[[[U]],[R[0]]]],[11,"from",E,E,162,[[[T]],[T]]],[11,"into",E,E,162,[[],[U]]],[11,R[12],E,E,162,[[],[R[0]]]],[11,R[25],E,E,162,[[["self"]],[T]]],[11,R[13],E,E,162,[[["self"]],[T]]],[11,R[14],E,E,162,[[["self"]],[R[26]]]],[11,R[10],E,E,163,[[[U]],[R[0]]]],[11,"from",E,E,163,[[[T]],[T]]],[11,"into",E,E,163,[[],[U]]],[11,R[12],E,E,163,[[],[R[0]]]],[11,R[25],E,E,163,[[["self"]],[T]]],[11,R[13],E,E,163,[[["self"]],[T]]],[11,R[14],E,E,163,[[["self"]],[R[26]]]],[11,R[10],R[558],E,164,[[[U]],[R[0]]]],[11,"from",E,E,164,[[[T]],[T]]],[11,"into",E,E,164,[[],[U]]],[11,R[12],E,E,164,[[],[R[0]]]],[11,R[25],E,E,164,[[["self"]],[T]]],[11,R[13],E,E,164,[[["self"]],[T]]],[11,R[14],E,E,164,[[["self"]],[R[26]]]],[11,"fmt",R[313],E,0,[[["self"],[R[55]]],[R[0]]]],[11,"fmt",E,E,1,[[["self"],[R[55]]],[R[0]]]],[11,"fmt",R[315],E,27,[[["self"],[R[55]]],[R[0]]]],[11,"fmt",R[316],E,76,[[["self"],[R[55]]],[R[0]]]],[11,"fmt",E,E,77,[[["self"],[R[55]]],[R[0]]]],[11,"fmt",R[317],E,123,[[["self"],[R[55]]],[R[0]]]],[11,"fmt",E,E,124,[[["self"],[R[55]]],[R[0]]]],[11,"fmt",E,E,125,[[["self"],[R[55]]],[R[0]]]],[11,"fmt",R[557],E,144,[[["self"],[R[55]]],[R[0]]]],[11,"fmt",R[319],E,160,[[["self"],[R[55]]],[R[0]]]],[11,"eq",R[313],E,0,[[[R[269]],["self"]],["bool"]]],[11,"ne",E,E,0,[[[R[269]],["self"]],["bool"]]],[11,"eq",E,E,1,[[[R[321]],["self"]],["bool"]]],[11,"eq",R[316],E,76,[[["self"],[R[269]]],["bool"]]],[11,"ne",E,E,76,[[["self"],[R[269]]],["bool"]]],[11,"eq",E,E,77,[[["self"],[R[321]]],["bool"]]],[11,"eq",R[317],E,123,[[["self"],[R[269]]],["bool"]]],[11,"ne",E,E,123,[[["self"],[R[269]]],["bool"]]],[11,"eq",E,E,125,[[["self"],[R[321]]],["bool"]]],[11,"eq",R[557],E,144,[[["self"],[R[269]]],["bool"]]],[11,"ne",E,E,144,[[["self"],[R[269]]],["bool"]]],[11,"eq",R[319],E,160,[[["self"],[R[201]]],["bool"]]],[11,R[322],R[313],E,0,[[["self"]]]],[11,R[322],R[316],E,76,[[["self"]]]],[11,R[322],R[317],E,123,[[["self"]]]],[11,R[322],R[557],E,144,[[["self"]]]],[11,"cmp",R[313],E,0,[[[R[269]],["self"]],[R[49]]]],[11,"cmp",R[316],E,76,[[["self"],[R[269]]],[R[49]]]],[11,"cmp",R[317],E,123,[[["self"],[R[269]]],[R[49]]]],[11,"cmp",R[557],E,144,[[["self"],[R[269]]],[R[49]]]],[11,R[56],R[313],E,0,[[[R[269]],["self"]],[[R[20],[R[49]]],[R[49]]]]],[11,"lt",E,E,0,[[[R[269]],["self"]],["bool"]]],[11,"le",E,E,0,[[[R[269]],["self"]],["bool"]]],[11,"gt",E,E,0,[[[R[269]],["self"]],["bool"]]],[11,"ge",E,E,0,[[[R[269]],["self"]],["bool"]]],[11,R[56],R[316],E,76,[[["self"],[R[269]]],[[R[20],[R[49]]],[R[49]]]]],[11,"lt",E,E,76,[[["self"],[R[269]]],["bool"]]],[11,"le",E,E,76,[[["self"],[R[269]]],["bool"]]],[11,"gt",E,E,76,[[["self"],[R[269]]],["bool"]]],[11,"ge",E,E,76,[[["self"],[R[269]]],["bool"]]],[11,R[56],R[317],E,123,[[["self"],[R[269]]],[[R[20],[R[49]]],[R[49]]]]],[11,"lt",E,E,123,[[["self"],[R[269]]],["bool"]]],[11,"le",E,E,123,[[["self"],[R[269]]],["bool"]]],[11,"gt",E,E,123,[[["self"],[R[269]]],["bool"]]],[11,"ge",E,E,123,[[["self"],[R[269]]],["bool"]]],[11,R[56],R[557],E,144,[[["self"],[R[269]]],[[R[20],[R[49]]],[R[49]]]]],[11,"lt",E,E,144,[[["self"],[R[269]]],["bool"]]],[11,"le",E,E,144,[[["self"],[R[269]]],["bool"]]],[11,"gt",E,E,144,[[["self"],[R[269]]],["bool"]]],[11,"ge",E,E,144,[[["self"],[R[269]]],["bool"]]],[11,"from",R[319],"Cast `i32` to `MynewtError`",160,[[["i32"]],["self"]]],[11,"hash",R[313],E,0,[[["self"],[R[323]]]]],[11,"hash",E,E,1,[[["self"],["h"]]]],[11,"hash",R[316],E,76,[[["self"],[R[323]]]]],[11,"hash",E,E,77,[[["self"],["h"]]]],[11,"hash",R[317],E,123,[[["self"],[R[323]]]]],[11,"hash",E,E,125,[[["self"],["h"]]]],[11,"hash",R[557],E,144,[[["self"],[R[323]]]]],[11,"clone",R[313],E,0,[[["self"]],[R[269]]]],[11,"clone",E,E,1,[[["self"]],["self"]]],[11,"clone",R[315],E,27,[[["self"]],["self"]]],[11,"clone",R[316],E,76,[[["self"]],[R[269]]]],[11,"clone",E,E,77,[[["self"]],["self"]]],[11,"clone",R[317],E,123,[[["self"]],[R[269]]]],[11,"clone",E,E,124,[[["self"]],["self"]]],[11,"clone",E,E,125,[[["self"]],["self"]]],[11,"clone",R[557],E,144,[[["self"]],[R[269]]]],[11,R[60],R[313],E,0,[[],[R[269]]]],[11,R[60],E,E,1,[[],["self"]]],[11,R[60],E,E,4,[[],["self"]]],[11,R[60],E,E,3,[[],["self"]]],[11,R[60],E,E,2,[[],["self"]]],[11,R[60],E,E,5,[[],["self"]]],[11,R[60],E,E,6,[[],["self"]]],[11,R[60],E,E,9,[[],["self"]]],[11,R[60],E,E,10,[[],["self"]]],[11,R[60],E,E,11,[[],["self"]]],[11,R[60],E,E,12,[[],["self"]]],[11,R[60],E,E,13,[[],["self"]]],[11,R[60],E,E,14,[[],["self"]]],[11,R[60],E,E,8,[[],["self"]]],[11,R[60],E,E,7,[[],["self"]]],[11,R[60],E,E,16,[[],["self"]]],[11,R[60],E,E,17,[[],["self"]]],[11,R[60],E,E,15,[[],["self"]]],[11,R[60],E,E,18,[[],[R[324]]]],[11,R[60],R[314],E,19,[[],["file_methods"]]],[11,R[60],E,E,20,[[],["self"]]],[11,R[60],E,E,21,[[],[R[325]]]],[11,R[60],E,E,22,[[],["self"]]],[11,R[60],E,E,23,[[],["self"]]],[11,R[60],E,E,24,[[],[R[326]]]],[11,R[60],E,E,25,[[],["self"]]],[11,R[60],E,E,26,[[],["self"]]],[11,R[60],R[315],E,27,[[],[R[343]]]],[11,R[60],E,E,29,[[],[R[204]]]],[11,R[60],E,E,30,[[],[R[205]]]],[11,R[60],E,E,31,[[],["self"]]],[11,R[60],E,E,33,[[],["self"]]],[11,R[60],E,E,32,[[],["self"]]],[11,R[60],E,E,35,[[],["self"]]],[11,R[60],E,E,34,[[],["self"]]],[11,R[60],E,E,37,[[],["self"]]],[11,R[60],E,E,36,[[],["self"]]],[11,R[60],E,E,39,[[],["self"]]],[11,R[60],E,E,38,[[],["self"]]],[11,R[60],E,E,40,[[],["self"]]],[11,R[60],E,E,42,[[],["self"]]],[11,R[60],E,E,41,[[],["self"]]],[11,R[60],E,E,43,[[],[R[215]]]],[11,R[60],E,E,45,[[],["self"]]],[11,R[60],E,E,44,[[],["self"]]],[11,R[60],E,E,47,[[],["self"]]],[11,R[60],E,E,46,[[],["self"]]],[11,R[60],E,E,49,[[],["self"]]],[11,R[60],E,E,48,[[],["self"]]],[11,R[60],E,E,51,[[],["self"]]],[11,R[60],E,E,50,[[],["self"]]],[11,R[60],E,E,53,[[],["self"]]],[11,R[60],E,E,52,[[],["self"]]],[11,R[60],E,E,55,[[],["self"]]],[11,R[60],E,E,54,[[],["self"]]],[11,R[60],E,E,57,[[],["self"]]],[11,R[60],E,E,58,[[],["self"]]],[11,R[60],E,E,56,[[],["self"]]],[11,R[60],E,E,59,[[],["self"]]],[11,R[60],E,E,60,[[],[R[327]]]],[11,R[60],E,E,62,[[],["self"]]],[11,R[60],E,E,61,[[],["self"]]],[11,R[60],E,E,64,[[],["self"]]],[11,R[60],E,E,63,[[],["self"]]],[11,R[60],E,E,66,[[],["self"]]],[11,R[60],E,E,65,[[],["self"]]],[11,R[60],E,E,68,[[],["self"]]],[11,R[60],E,E,69,[[],["self"]]],[11,R[60],E,E,70,[[],["self"]]],[11,R[60],E,E,67,[[],["self"]]],[11,R[60],E,E,71,[[],["self"]]],[11,R[60],E,E,72,[[],[R[328]]]],[11,R[60],E,E,73,[[],["self"]]],[11,R[60],E,E,75,[[],["self"]]],[11,R[60],E,E,74,[[],["self"]]],[11,R[60],R[316],E,76,[[],[R[269]]]],[11,R[60],E,E,77,[[],["self"]]],[11,R[60],E,E,78,[[],["self"]]],[11,R[60],E,E,79,[[],["self"]]],[11,R[60],E,E,80,[[],["self"]]],[11,R[60],E,E,81,[[],["self"]]],[11,R[60],E,E,82,[[],["self"]]],[11,R[60],E,E,83,[[],["self"]]],[11,R[60],E,E,84,[[],["self"]]],[11,R[60],E,E,85,[[],["self"]]],[11,R[60],E,E,86,[[],["self"]]],[11,R[60],E,E,87,[[],["self"]]],[11,R[60],E,E,88,[[],["self"]]],[11,R[60],E,E,89,[[],["self"]]],[11,R[60],E,E,90,[[],[R[329]]]],[11,R[60],E,E,91,[[],["self"]]],[11,R[60],E,E,93,[[],["self"]]],[11,R[60],E,E,92,[[],["self"]]],[11,R[60],E,E,95,[[],["self"]]],[11,R[60],E,E,94,[[],["self"]]],[11,R[60],E,E,96,[[],["self"]]],[11,R[60],E,E,98,[[],["self"]]],[11,R[60],E,E,97,[[],["self"]]],[11,R[60],E,E,99,[[],["self"]]],[11,R[60],E,E,100,[[],["self"]]],[11,R[60],E,E,101,[[],[R[330]]]],[11,R[60],E,E,102,[[],["self"]]],[11,R[60],E,E,103,[[],[R[332]]]],[11,R[60],E,E,104,[[],["self"]]],[11,R[60],E,E,106,[[],["self"]]],[11,R[60],E,E,107,[[],["self"]]],[11,R[60],E,E,108,[[],["self"]]],[11,R[60],E,E,109,[[],["self"]]],[11,R[60],E,E,105,[[],["self"]]],[11,R[60],E,E,110,[[],["self"]]],[11,R[60],E,E,111,[[],[R[333]]]],[11,R[60],E,E,112,[[],[R[334]]]],[11,R[60],E,E,113,[[],[R[335]]]],[11,R[60],E,E,114,[[],[R[336]]]],[11,R[60],E,E,115,[[],[R[337]]]],[11,R[60],E,E,116,[[],[R[338]]]],[11,R[60],E,E,117,[[],[R[339]]]],[11,R[60],E,E,118,[[],[R[340]]]],[11,R[60],E,E,119,[[],[R[341]]]],[11,R[60],E,E,120,[[],[R[342]]]],[11,R[60],E,E,122,[[],["self"]]],[11,R[60],E,E,121,[[],["self"]]],[11,R[60],R[317],E,123,[[],[R[269]]]],[11,R[60],E,E,124,[[],[R[343]]]],[11,R[60],E,E,125,[[],["self"]]],[11,R[60],E,E,127,[[],["self"]]],[11,R[60],E,E,126,[[],["self"]]],[11,R[60],E,E,129,[[],["self"]]],[11,R[60],E,E,128,[[],["self"]]],[11,R[60],E,E,131,[[],["self"]]],[11,R[60],E,E,130,[[],["self"]]],[11,R[60],E,E,133,[[],["self"]]],[11,R[60],E,E,134,[[],["self"]]],[11,R[60],E,E,132,[[],["self"]]],[11,R[60],E,E,135,[[],[R[344]]]],[11,R[60],E,E,136,[[],[R[345]]]],[11,R[60],E,E,165,[[],[R[346]]]],[11,R[60],E,E,137,[[],[R[294]]]],[11,R[60],E,E,138,[[],["self"]]],[11,R[60],E,E,140,[[],["self"]]],[11,R[60],E,E,139,[[],["self"]]],[11,R[60],R[318],E,142,[[],["self"]]],[11,R[60],E,E,143,[[],[R[347]]]],[11,R[60],R[557],E,144,[[],[R[269]]]],[11,R[60],E,E,145,[[],["self"]]],[11,R[60],E,E,146,[[],["self"]]],[11,R[60],E,E,147,[[],["self"]]],[11,R[60],E,E,148,[[],["self"]]],[11,R[60],E,E,149,[[],["self"]]],[11,R[60],E,E,150,[[],["self"]]],[11,R[60],E,E,151,[[],["self"]]],[11,R[60],E,E,152,[[],["self"]]],[11,R[60],E,E,153,[[],["self"]]],[11,R[60],E,E,154,[[],["self"]]],[11,R[60],E,E,155,[[],["self"]]],[11,R[60],E,E,156,[[],["self"]]],[11,R[60],E,E,157,[[],["self"]]],[11,R[60],E,E,158,[[],["self"]]],[11,R[60],E,E,159,[[],[R[403]]]],[11,R[60],R[320],E,161,[[],[R[312]]]]],"p":[[3,R[202]],[3,R[203]],[3,R[280]],[3,R[281]],[3,R[283]],[3,R[284]],[3,R[348]],[3,R[349]],[3,R[350]],[3,R[351]],[3,R[352]],[3,R[353]],[3,R[354]],[3,R[355]],[3,R[356]],[3,R[357]],[3,R[358]],[3,R[359]],[3,R[324]],[3,R[360]],[3,"File"],[3,R[325]],[3,R[361]],[3,R[362]],[3,R[326]],[3,R[363]],[3,R[364]],[3,R[271]],[3,"os_stack"],[3,R[204]],[3,R[205]],[3,R[365]],[3,R[366]],[3,R[367]],[3,R[368]],[3,R[209]],[3,R[210]],[3,R[212]],[3,R[213]],[3,R[214]],[3,R[369]],[3,R[370]],[3,R[371]],[3,R[215]],[3,"os_dev"],[3,R[222]],[3,R[272]],[3,R[275]],[3,R[372]],[3,R[373]],[3,"os_mbuf"],[3,R[278]],[3,R[374]],[3,R[375]],[3,R[223]],[3,R[224]],[3,R[225]],[3,R[232]],[3,R[233]],[3,R[376]],[3,R[327]],[3,R[377]],[3,R[234]],[3,R[235]],[3,R[238]],[3,R[378]],[3,R[379]],[3,"os_task"],[3,R[250]],[3,R[251]],[3,R[252]],[3,R[380]],[3,R[328]],[3,R[381]],[3,"os_sem"],[3,R[382]],[3,R[202]],[3,R[203]],[3,R[209]],[3,R[212]],[3,R[214]],[3,R[222]],[3,R[224]],[3,R[232]],[3,R[233]],[3,R[234]],[3,R[238]],[3,R[250]],[3,R[251]],[3,R[252]],[3,R[329]],[3,R[383]],[3,R[253]],[3,R[384]],[3,R[385]],[3,R[386]],[3,R[387]],[3,R[388]],[3,R[389]],[3,R[390]],[3,R[391]],[3,R[330]],[3,R[331]],[3,R[332]],[3,R[392]],[3,"sensor"],[3,R[393]],[3,R[394]],[3,R[395]],[3,R[396]],[3,R[397]],[3,R[333]],[3,R[334]],[3,R[335]],[3,R[336]],[3,R[337]],[3,R[338]],[3,R[339]],[3,R[340]],[3,R[341]],[3,R[342]],[3,R[398]],[3,R[399]],[3,R[202]],[3,R[271]],[3,R[203]],[3,R[272]],[3,R[275]],[3,"os_mbuf"],[3,R[278]],[3,R[223]],[3,R[224]],[3,R[225]],[3,R[232]],[3,R[233]],[3,R[344]],[3,R[345]],[3,R[294]],[3,R[292]],[3,R[281]],[3,R[283]],[3,R[294]],[3,R[400]],[3,R[347]],[3,R[202]],[3,R[209]],[3,R[222]],[3,R[234]],[3,R[238]],[3,R[250]],[3,R[251]],[3,R[252]],[3,R[384]],[3,R[386]],[3,R[389]],[3,R[393]],[3,R[394]],[3,R[395]],[3,R[396]],[3,R[403]],[4,R[401]],[3,R[402]],[3,R[403]],[4,R[404]],[3,"Context"],[3,R[346]]]};
searchIndex["stable_deref_trait"]={"doc":"This module defines an unsafe marker trait, StableDeref,…","i":[[8,"StableDeref","stable_deref_trait","An unsafe marker trait for types that deref to a stable…",N,N],[8,"CloneStableDeref",E,"An unsafe marker trait for types where clones deref to the…",N,N]],"p":[]};
searchIndex["typenum"]={"doc":"This crate provides type-level numbers evaluated at…","i":[[3,"Greater",R[29],R[27],N,N],[3,"Less",E,R[27],N,N],[3,"Equal",E,R[27],N,N],[0,"consts",E,"Type aliases for many constants.",N,N],[6,"True","typenum::consts",E,N,N],[6,"False",E,E,N,N],[6,"U0",E,E,N,N],[6,"U1",E,E,N,N],[6,"P1",E,E,N,N],[6,"N1",E,E,N,N],[6,"U2",E,E,N,N],[6,"P2",E,E,N,N],[6,"N2",E,E,N,N],[6,"U3",E,E,N,N],[6,"P3",E,E,N,N],[6,"N3",E,E,N,N],[6,"U4",E,E,N,N],[6,"P4",E,E,N,N],[6,"N4",E,E,N,N],[6,"U5",E,E,N,N],[6,"P5",E,E,N,N],[6,"N5",E,E,N,N],[6,"U6",E,E,N,N],[6,"P6",E,E,N,N],[6,"N6",E,E,N,N],[6,"U7",E,E,N,N],[6,"P7",E,E,N,N],[6,"N7",E,E,N,N],[6,"U8",E,E,N,N],[6,"P8",E,E,N,N],[6,"N8",E,E,N,N],[6,"U9",E,E,N,N],[6,"P9",E,E,N,N],[6,"N9",E,E,N,N],[6,"U10",E,E,N,N],[6,"P10",E,E,N,N],[6,"N10",E,E,N,N],[6,"U11",E,E,N,N],[6,"P11",E,E,N,N],[6,"N11",E,E,N,N],[6,"U12",E,E,N,N],[6,"P12",E,E,N,N],[6,"N12",E,E,N,N],[6,"U13",E,E,N,N],[6,"P13",E,E,N,N],[6,"N13",E,E,N,N],[6,"U14",E,E,N,N],[6,"P14",E,E,N,N],[6,"N14",E,E,N,N],[6,"U15",E,E,N,N],[6,"P15",E,E,N,N],[6,"N15",E,E,N,N],[6,"U16",E,E,N,N],[6,"P16",E,E,N,N],[6,"N16",E,E,N,N],[6,"U17",E,E,N,N],[6,"P17",E,E,N,N],[6,"N17",E,E,N,N],[6,"U18",E,E,N,N],[6,"P18",E,E,N,N],[6,"N18",E,E,N,N],[6,"U19",E,E,N,N],[6,"P19",E,E,N,N],[6,"N19",E,E,N,N],[6,"U20",E,E,N,N],[6,"P20",E,E,N,N],[6,"N20",E,E,N,N],[6,"U21",E,E,N,N],[6,"P21",E,E,N,N],[6,"N21",E,E,N,N],[6,"U22",E,E,N,N],[6,"P22",E,E,N,N],[6,"N22",E,E,N,N],[6,"U23",E,E,N,N],[6,"P23",E,E,N,N],[6,"N23",E,E,N,N],[6,"U24",E,E,N,N],[6,"P24",E,E,N,N],[6,"N24",E,E,N,N],[6,"U25",E,E,N,N],[6,"P25",E,E,N,N],[6,"N25",E,E,N,N],[6,"U26",E,E,N,N],[6,"P26",E,E,N,N],[6,"N26",E,E,N,N],[6,"U27",E,E,N,N],[6,"P27",E,E,N,N],[6,"N27",E,E,N,N],[6,"U28",E,E,N,N],[6,"P28",E,E,N,N],[6,"N28",E,E,N,N],[6,"U29",E,E,N,N],[6,"P29",E,E,N,N],[6,"N29",E,E,N,N],[6,"U30",E,E,N,N],[6,"P30",E,E,N,N],[6,"N30",E,E,N,N],[6,"U31",E,E,N,N],[6,"P31",E,E,N,N],[6,"N31",E,E,N,N],[6,"U32",E,E,N,N],[6,"P32",E,E,N,N],[6,"N32",E,E,N,N],[6,"U33",E,E,N,N],[6,"P33",E,E,N,N],[6,"N33",E,E,N,N],[6,"U34",E,E,N,N],[6,"P34",E,E,N,N],[6,"N34",E,E,N,N],[6,"U35",E,E,N,N],[6,"P35",E,E,N,N],[6,"N35",E,E,N,N],[6,"U36",E,E,N,N],[6,"P36",E,E,N,N],[6,"N36",E,E,N,N],[6,"U37",E,E,N,N],[6,"P37",E,E,N,N],[6,"N37",E,E,N,N],[6,"U38",E,E,N,N],[6,"P38",E,E,N,N],[6,"N38",E,E,N,N],[6,"U39",E,E,N,N],[6,"P39",E,E,N,N],[6,"N39",E,E,N,N],[6,"U40",E,E,N,N],[6,"P40",E,E,N,N],[6,"N40",E,E,N,N],[6,"U41",E,E,N,N],[6,"P41",E,E,N,N],[6,"N41",E,E,N,N],[6,"U42",E,E,N,N],[6,"P42",E,E,N,N],[6,"N42",E,E,N,N],[6,"U43",E,E,N,N],[6,"P43",E,E,N,N],[6,"N43",E,E,N,N],[6,"U44",E,E,N,N],[6,"P44",E,E,N,N],[6,"N44",E,E,N,N],[6,"U45",E,E,N,N],[6,"P45",E,E,N,N],[6,"N45",E,E,N,N],[6,"U46",E,E,N,N],[6,"P46",E,E,N,N],[6,"N46",E,E,N,N],[6,"U47",E,E,N,N],[6,"P47",E,E,N,N],[6,"N47",E,E,N,N],[6,"U48",E,E,N,N],[6,"P48",E,E,N,N],[6,"N48",E,E,N,N],[6,"U49",E,E,N,N],[6,"P49",E,E,N,N],[6,"N49",E,E,N,N],[6,"U50",E,E,N,N],[6,"P50",E,E,N,N],[6,"N50",E,E,N,N],[6,"U51",E,E,N,N],[6,"P51",E,E,N,N],[6,"N51",E,E,N,N],[6,"U52",E,E,N,N],[6,"P52",E,E,N,N],[6,"N52",E,E,N,N],[6,"U53",E,E,N,N],[6,"P53",E,E,N,N],[6,"N53",E,E,N,N],[6,"U54",E,E,N,N],[6,"P54",E,E,N,N],[6,"N54",E,E,N,N],[6,"U55",E,E,N,N],[6,"P55",E,E,N,N],[6,"N55",E,E,N,N],[6,"U56",E,E,N,N],[6,"P56",E,E,N,N],[6,"N56",E,E,N,N],[6,"U57",E,E,N,N],[6,"P57",E,E,N,N],[6,"N57",E,E,N,N],[6,"U58",E,E,N,N],[6,"P58",E,E,N,N],[6,"N58",E,E,N,N],[6,"U59",E,E,N,N],[6,"P59",E,E,N,N],[6,"N59",E,E,N,N],[6,"U60",E,E,N,N],[6,"P60",E,E,N,N],[6,"N60",E,E,N,N],[6,"U61",E,E,N,N],[6,"P61",E,E,N,N],[6,"N61",E,E,N,N],[6,"U62",E,E,N,N],[6,"P62",E,E,N,N],[6,"N62",E,E,N,N],[6,"U63",E,E,N,N],[6,"P63",E,E,N,N],[6,"N63",E,E,N,N],[6,"U64",E,E,N,N],[6,"P64",E,E,N,N],[6,"N64",E,E,N,N],[6,"U65",E,E,N,N],[6,"P65",E,E,N,N],[6,"N65",E,E,N,N],[6,"U66",E,E,N,N],[6,"P66",E,E,N,N],[6,"N66",E,E,N,N],[6,"U67",E,E,N,N],[6,"P67",E,E,N,N],[6,"N67",E,E,N,N],[6,"U68",E,E,N,N],[6,"P68",E,E,N,N],[6,"N68",E,E,N,N],[6,"U69",E,E,N,N],[6,"P69",E,E,N,N],[6,"N69",E,E,N,N],[6,"U70",E,E,N,N],[6,"P70",E,E,N,N],[6,"N70",E,E,N,N],[6,"U71",E,E,N,N],[6,"P71",E,E,N,N],[6,"N71",E,E,N,N],[6,"U72",E,E,N,N],[6,"P72",E,E,N,N],[6,"N72",E,E,N,N],[6,"U73",E,E,N,N],[6,"P73",E,E,N,N],[6,"N73",E,E,N,N],[6,"U74",E,E,N,N],[6,"P74",E,E,N,N],[6,"N74",E,E,N,N],[6,"U75",E,E,N,N],[6,"P75",E,E,N,N],[6,"N75",E,E,N,N],[6,"U76",E,E,N,N],[6,"P76",E,E,N,N],[6,"N76",E,E,N,N],[6,"U77",E,E,N,N],[6,"P77",E,E,N,N],[6,"N77",E,E,N,N],[6,"U78",E,E,N,N],[6,"P78",E,E,N,N],[6,"N78",E,E,N,N],[6,"U79",E,E,N,N],[6,"P79",E,E,N,N],[6,"N79",E,E,N,N],[6,"U80",E,E,N,N],[6,"P80",E,E,N,N],[6,"N80",E,E,N,N],[6,"U81",E,E,N,N],[6,"P81",E,E,N,N],[6,"N81",E,E,N,N],[6,"U82",E,E,N,N],[6,"P82",E,E,N,N],[6,"N82",E,E,N,N],[6,"U83",E,E,N,N],[6,"P83",E,E,N,N],[6,"N83",E,E,N,N],[6,"U84",E,E,N,N],[6,"P84",E,E,N,N],[6,"N84",E,E,N,N],[6,"U85",E,E,N,N],[6,"P85",E,E,N,N],[6,"N85",E,E,N,N],[6,"U86",E,E,N,N],[6,"P86",E,E,N,N],[6,"N86",E,E,N,N],[6,"U87",E,E,N,N],[6,"P87",E,E,N,N],[6,"N87",E,E,N,N],[6,"U88",E,E,N,N],[6,"P88",E,E,N,N],[6,"N88",E,E,N,N],[6,"U89",E,E,N,N],[6,"P89",E,E,N,N],[6,"N89",E,E,N,N],[6,"U90",E,E,N,N],[6,"P90",E,E,N,N],[6,"N90",E,E,N,N],[6,"U91",E,E,N,N],[6,"P91",E,E,N,N],[6,"N91",E,E,N,N],[6,"U92",E,E,N,N],[6,"P92",E,E,N,N],[6,"N92",E,E,N,N],[6,"U93",E,E,N,N],[6,"P93",E,E,N,N],[6,"N93",E,E,N,N],[6,"U94",E,E,N,N],[6,"P94",E,E,N,N],[6,"N94",E,E,N,N],[6,"U95",E,E,N,N],[6,"P95",E,E,N,N],[6,"N95",E,E,N,N],[6,"U96",E,E,N,N],[6,"P96",E,E,N,N],[6,"N96",E,E,N,N],[6,"U97",E,E,N,N],[6,"P97",E,E,N,N],[6,"N97",E,E,N,N],[6,"U98",E,E,N,N],[6,"P98",E,E,N,N],[6,"N98",E,E,N,N],[6,"U99",E,E,N,N],[6,"P99",E,E,N,N],[6,"N99",E,E,N,N],[6,"U100",E,E,N,N],[6,"P100",E,E,N,N],[6,"N100",E,E,N,N],[6,"U101",E,E,N,N],[6,"P101",E,E,N,N],[6,"N101",E,E,N,N],[6,"U102",E,E,N,N],[6,"P102",E,E,N,N],[6,"N102",E,E,N,N],[6,"U103",E,E,N,N],[6,"P103",E,E,N,N],[6,"N103",E,E,N,N],[6,"U104",E,E,N,N],[6,"P104",E,E,N,N],[6,"N104",E,E,N,N],[6,"U105",E,E,N,N],[6,"P105",E,E,N,N],[6,"N105",E,E,N,N],[6,"U106",E,E,N,N],[6,"P106",E,E,N,N],[6,"N106",E,E,N,N],[6,"U107",E,E,N,N],[6,"P107",E,E,N,N],[6,"N107",E,E,N,N],[6,"U108",E,E,N,N],[6,"P108",E,E,N,N],[6,"N108",E,E,N,N],[6,"U109",E,E,N,N],[6,"P109",E,E,N,N],[6,"N109",E,E,N,N],[6,"U110",E,E,N,N],[6,"P110",E,E,N,N],[6,"N110",E,E,N,N],[6,"U111",E,E,N,N],[6,"P111",E,E,N,N],[6,"N111",E,E,N,N],[6,"U112",E,E,N,N],[6,"P112",E,E,N,N],[6,"N112",E,E,N,N],[6,"U113",E,E,N,N],[6,"P113",E,E,N,N],[6,"N113",E,E,N,N],[6,"U114",E,E,N,N],[6,"P114",E,E,N,N],[6,"N114",E,E,N,N],[6,"U115",E,E,N,N],[6,"P115",E,E,N,N],[6,"N115",E,E,N,N],[6,"U116",E,E,N,N],[6,"P116",E,E,N,N],[6,"N116",E,E,N,N],[6,"U117",E,E,N,N],[6,"P117",E,E,N,N],[6,"N117",E,E,N,N],[6,"U118",E,E,N,N],[6,"P118",E,E,N,N],[6,"N118",E,E,N,N],[6,"U119",E,E,N,N],[6,"P119",E,E,N,N],[6,"N119",E,E,N,N],[6,"U120",E,E,N,N],[6,"P120",E,E,N,N],[6,"N120",E,E,N,N],[6,"U121",E,E,N,N],[6,"P121",E,E,N,N],[6,"N121",E,E,N,N],[6,"U122",E,E,N,N],[6,"P122",E,E,N,N],[6,"N122",E,E,N,N],[6,"U123",E,E,N,N],[6,"P123",E,E,N,N],[6,"N123",E,E,N,N],[6,"U124",E,E,N,N],[6,"P124",E,E,N,N],[6,"N124",E,E,N,N],[6,"U125",E,E,N,N],[6,"P125",E,E,N,N],[6,"N125",E,E,N,N],[6,"U126",E,E,N,N],[6,"P126",E,E,N,N],[6,"N126",E,E,N,N],[6,"U127",E,E,N,N],[6,"P127",E,E,N,N],[6,"N127",E,E,N,N],[6,"U128",E,E,N,N],[6,"P128",E,E,N,N],[6,"N128",E,E,N,N],[6,"U129",E,E,N,N],[6,"P129",E,E,N,N],[6,"N129",E,E,N,N],[6,"U130",E,E,N,N],[6,"P130",E,E,N,N],[6,"N130",E,E,N,N],[6,"U131",E,E,N,N],[6,"P131",E,E,N,N],[6,"N131",E,E,N,N],[6,"U132",E,E,N,N],[6,"P132",E,E,N,N],[6,"N132",E,E,N,N],[6,"U133",E,E,N,N],[6,"P133",E,E,N,N],[6,"N133",E,E,N,N],[6,"U134",E,E,N,N],[6,"P134",E,E,N,N],[6,"N134",E,E,N,N],[6,"U135",E,E,N,N],[6,"P135",E,E,N,N],[6,"N135",E,E,N,N],[6,"U136",E,E,N,N],[6,"P136",E,E,N,N],[6,"N136",E,E,N,N],[6,"U137",E,E,N,N],[6,"P137",E,E,N,N],[6,"N137",E,E,N,N],[6,"U138",E,E,N,N],[6,"P138",E,E,N,N],[6,"N138",E,E,N,N],[6,"U139",E,E,N,N],[6,"P139",E,E,N,N],[6,"N139",E,E,N,N],[6,"U140",E,E,N,N],[6,"P140",E,E,N,N],[6,"N140",E,E,N,N],[6,"U141",E,E,N,N],[6,"P141",E,E,N,N],[6,"N141",E,E,N,N],[6,"U142",E,E,N,N],[6,"P142",E,E,N,N],[6,"N142",E,E,N,N],[6,"U143",E,E,N,N],[6,"P143",E,E,N,N],[6,"N143",E,E,N,N],[6,"U144",E,E,N,N],[6,"P144",E,E,N,N],[6,"N144",E,E,N,N],[6,"U145",E,E,N,N],[6,"P145",E,E,N,N],[6,"N145",E,E,N,N],[6,"U146",E,E,N,N],[6,"P146",E,E,N,N],[6,"N146",E,E,N,N],[6,"U147",E,E,N,N],[6,"P147",E,E,N,N],[6,"N147",E,E,N,N],[6,"U148",E,E,N,N],[6,"P148",E,E,N,N],[6,"N148",E,E,N,N],[6,"U149",E,E,N,N],[6,"P149",E,E,N,N],[6,"N149",E,E,N,N],[6,"U150",E,E,N,N],[6,"P150",E,E,N,N],[6,"N150",E,E,N,N],[6,"U151",E,E,N,N],[6,"P151",E,E,N,N],[6,"N151",E,E,N,N],[6,"U152",E,E,N,N],[6,"P152",E,E,N,N],[6,"N152",E,E,N,N],[6,"U153",E,E,N,N],[6,"P153",E,E,N,N],[6,"N153",E,E,N,N],[6,"U154",E,E,N,N],[6,"P154",E,E,N,N],[6,"N154",E,E,N,N],[6,"U155",E,E,N,N],[6,"P155",E,E,N,N],[6,"N155",E,E,N,N],[6,"U156",E,E,N,N],[6,"P156",E,E,N,N],[6,"N156",E,E,N,N],[6,"U157",E,E,N,N],[6,"P157",E,E,N,N],[6,"N157",E,E,N,N],[6,"U158",E,E,N,N],[6,"P158",E,E,N,N],[6,"N158",E,E,N,N],[6,"U159",E,E,N,N],[6,"P159",E,E,N,N],[6,"N159",E,E,N,N],[6,"U160",E,E,N,N],[6,"P160",E,E,N,N],[6,"N160",E,E,N,N],[6,"U161",E,E,N,N],[6,"P161",E,E,N,N],[6,"N161",E,E,N,N],[6,"U162",E,E,N,N],[6,"P162",E,E,N,N],[6,"N162",E,E,N,N],[6,"U163",E,E,N,N],[6,"P163",E,E,N,N],[6,"N163",E,E,N,N],[6,"U164",E,E,N,N],[6,"P164",E,E,N,N],[6,"N164",E,E,N,N],[6,"U165",E,E,N,N],[6,"P165",E,E,N,N],[6,"N165",E,E,N,N],[6,"U166",E,E,N,N],[6,"P166",E,E,N,N],[6,"N166",E,E,N,N],[6,"U167",E,E,N,N],[6,"P167",E,E,N,N],[6,"N167",E,E,N,N],[6,"U168",E,E,N,N],[6,"P168",E,E,N,N],[6,"N168",E,E,N,N],[6,"U169",E,E,N,N],[6,"P169",E,E,N,N],[6,"N169",E,E,N,N],[6,"U170",E,E,N,N],[6,"P170",E,E,N,N],[6,"N170",E,E,N,N],[6,"U171",E,E,N,N],[6,"P171",E,E,N,N],[6,"N171",E,E,N,N],[6,"U172",E,E,N,N],[6,"P172",E,E,N,N],[6,"N172",E,E,N,N],[6,"U173",E,E,N,N],[6,"P173",E,E,N,N],[6,"N173",E,E,N,N],[6,"U174",E,E,N,N],[6,"P174",E,E,N,N],[6,"N174",E,E,N,N],[6,"U175",E,E,N,N],[6,"P175",E,E,N,N],[6,"N175",E,E,N,N],[6,"U176",E,E,N,N],[6,"P176",E,E,N,N],[6,"N176",E,E,N,N],[6,"U177",E,E,N,N],[6,"P177",E,E,N,N],[6,"N177",E,E,N,N],[6,"U178",E,E,N,N],[6,"P178",E,E,N,N],[6,"N178",E,E,N,N],[6,"U179",E,E,N,N],[6,"P179",E,E,N,N],[6,"N179",E,E,N,N],[6,"U180",E,E,N,N],[6,"P180",E,E,N,N],[6,"N180",E,E,N,N],[6,"U181",E,E,N,N],[6,"P181",E,E,N,N],[6,"N181",E,E,N,N],[6,"U182",E,E,N,N],[6,"P182",E,E,N,N],[6,"N182",E,E,N,N],[6,"U183",E,E,N,N],[6,"P183",E,E,N,N],[6,"N183",E,E,N,N],[6,"U184",E,E,N,N],[6,"P184",E,E,N,N],[6,"N184",E,E,N,N],[6,"U185",E,E,N,N],[6,"P185",E,E,N,N],[6,"N185",E,E,N,N],[6,"U186",E,E,N,N],[6,"P186",E,E,N,N],[6,"N186",E,E,N,N],[6,"U187",E,E,N,N],[6,"P187",E,E,N,N],[6,"N187",E,E,N,N],[6,"U188",E,E,N,N],[6,"P188",E,E,N,N],[6,"N188",E,E,N,N],[6,"U189",E,E,N,N],[6,"P189",E,E,N,N],[6,"N189",E,E,N,N],[6,"U190",E,E,N,N],[6,"P190",E,E,N,N],[6,"N190",E,E,N,N],[6,"U191",E,E,N,N],[6,"P191",E,E,N,N],[6,"N191",E,E,N,N],[6,"U192",E,E,N,N],[6,"P192",E,E,N,N],[6,"N192",E,E,N,N],[6,"U193",E,E,N,N],[6,"P193",E,E,N,N],[6,"N193",E,E,N,N],[6,"U194",E,E,N,N],[6,"P194",E,E,N,N],[6,"N194",E,E,N,N],[6,"U195",E,E,N,N],[6,"P195",E,E,N,N],[6,"N195",E,E,N,N],[6,"U196",E,E,N,N],[6,"P196",E,E,N,N],[6,"N196",E,E,N,N],[6,"U197",E,E,N,N],[6,"P197",E,E,N,N],[6,"N197",E,E,N,N],[6,"U198",E,E,N,N],[6,"P198",E,E,N,N],[6,"N198",E,E,N,N],[6,"U199",E,E,N,N],[6,"P199",E,E,N,N],[6,"N199",E,E,N,N],[6,"U200",E,E,N,N],[6,"P200",E,E,N,N],[6,"N200",E,E,N,N],[6,"U201",E,E,N,N],[6,"P201",E,E,N,N],[6,"N201",E,E,N,N],[6,"U202",E,E,N,N],[6,"P202",E,E,N,N],[6,"N202",E,E,N,N],[6,"U203",E,E,N,N],[6,"P203",E,E,N,N],[6,"N203",E,E,N,N],[6,"U204",E,E,N,N],[6,"P204",E,E,N,N],[6,"N204",E,E,N,N],[6,"U205",E,E,N,N],[6,"P205",E,E,N,N],[6,"N205",E,E,N,N],[6,"U206",E,E,N,N],[6,"P206",E,E,N,N],[6,"N206",E,E,N,N],[6,"U207",E,E,N,N],[6,"P207",E,E,N,N],[6,"N207",E,E,N,N],[6,"U208",E,E,N,N],[6,"P208",E,E,N,N],[6,"N208",E,E,N,N],[6,"U209",E,E,N,N],[6,"P209",E,E,N,N],[6,"N209",E,E,N,N],[6,"U210",E,E,N,N],[6,"P210",E,E,N,N],[6,"N210",E,E,N,N],[6,"U211",E,E,N,N],[6,"P211",E,E,N,N],[6,"N211",E,E,N,N],[6,"U212",E,E,N,N],[6,"P212",E,E,N,N],[6,"N212",E,E,N,N],[6,"U213",E,E,N,N],[6,"P213",E,E,N,N],[6,"N213",E,E,N,N],[6,"U214",E,E,N,N],[6,"P214",E,E,N,N],[6,"N214",E,E,N,N],[6,"U215",E,E,N,N],[6,"P215",E,E,N,N],[6,"N215",E,E,N,N],[6,"U216",E,E,N,N],[6,"P216",E,E,N,N],[6,"N216",E,E,N,N],[6,"U217",E,E,N,N],[6,"P217",E,E,N,N],[6,"N217",E,E,N,N],[6,"U218",E,E,N,N],[6,"P218",E,E,N,N],[6,"N218",E,E,N,N],[6,"U219",E,E,N,N],[6,"P219",E,E,N,N],[6,"N219",E,E,N,N],[6,"U220",E,E,N,N],[6,"P220",E,E,N,N],[6,"N220",E,E,N,N],[6,"U221",E,E,N,N],[6,"P221",E,E,N,N],[6,"N221",E,E,N,N],[6,"U222",E,E,N,N],[6,"P222",E,E,N,N],[6,"N222",E,E,N,N],[6,"U223",E,E,N,N],[6,"P223",E,E,N,N],[6,"N223",E,E,N,N],[6,"U224",E,E,N,N],[6,"P224",E,E,N,N],[6,"N224",E,E,N,N],[6,"U225",E,E,N,N],[6,"P225",E,E,N,N],[6,"N225",E,E,N,N],[6,"U226",E,E,N,N],[6,"P226",E,E,N,N],[6,"N226",E,E,N,N],[6,"U227",E,E,N,N],[6,"P227",E,E,N,N],[6,"N227",E,E,N,N],[6,"U228",E,E,N,N],[6,"P228",E,E,N,N],[6,"N228",E,E,N,N],[6,"U229",E,E,N,N],[6,"P229",E,E,N,N],[6,"N229",E,E,N,N],[6,"U230",E,E,N,N],[6,"P230",E,E,N,N],[6,"N230",E,E,N,N],[6,"U231",E,E,N,N],[6,"P231",E,E,N,N],[6,"N231",E,E,N,N],[6,"U232",E,E,N,N],[6,"P232",E,E,N,N],[6,"N232",E,E,N,N],[6,"U233",E,E,N,N],[6,"P233",E,E,N,N],[6,"N233",E,E,N,N],[6,"U234",E,E,N,N],[6,"P234",E,E,N,N],[6,"N234",E,E,N,N],[6,"U235",E,E,N,N],[6,"P235",E,E,N,N],[6,"N235",E,E,N,N],[6,"U236",E,E,N,N],[6,"P236",E,E,N,N],[6,"N236",E,E,N,N],[6,"U237",E,E,N,N],[6,"P237",E,E,N,N],[6,"N237",E,E,N,N],[6,"U238",E,E,N,N],[6,"P238",E,E,N,N],[6,"N238",E,E,N,N],[6,"U239",E,E,N,N],[6,"P239",E,E,N,N],[6,"N239",E,E,N,N],[6,"U240",E,E,N,N],[6,"P240",E,E,N,N],[6,"N240",E,E,N,N],[6,"U241",E,E,N,N],[6,"P241",E,E,N,N],[6,"N241",E,E,N,N],[6,"U242",E,E,N,N],[6,"P242",E,E,N,N],[6,"N242",E,E,N,N],[6,"U243",E,E,N,N],[6,"P243",E,E,N,N],[6,"N243",E,E,N,N],[6,"U244",E,E,N,N],[6,"P244",E,E,N,N],[6,"N244",E,E,N,N],[6,"U245",E,E,N,N],[6,"P245",E,E,N,N],[6,"N245",E,E,N,N],[6,"U246",E,E,N,N],[6,"P246",E,E,N,N],[6,"N246",E,E,N,N],[6,"U247",E,E,N,N],[6,"P247",E,E,N,N],[6,"N247",E,E,N,N],[6,"U248",E,E,N,N],[6,"P248",E,E,N,N],[6,"N248",E,E,N,N],[6,"U249",E,E,N,N],[6,"P249",E,E,N,N],[6,"N249",E,E,N,N],[6,"U250",E,E,N,N],[6,"P250",E,E,N,N],[6,"N250",E,E,N,N],[6,"U251",E,E,N,N],[6,"P251",E,E,N,N],[6,"N251",E,E,N,N],[6,"U252",E,E,N,N],[6,"P252",E,E,N,N],[6,"N252",E,E,N,N],[6,"U253",E,E,N,N],[6,"P253",E,E,N,N],[6,"N253",E,E,N,N],[6,"U254",E,E,N,N],[6,"P254",E,E,N,N],[6,"N254",E,E,N,N],[6,"U255",E,E,N,N],[6,"P255",E,E,N,N],[6,"N255",E,E,N,N],[6,"U256",E,E,N,N],[6,"P256",E,E,N,N],[6,"N256",E,E,N,N],[6,"U257",E,E,N,N],[6,"P257",E,E,N,N],[6,"N257",E,E,N,N],[6,"U258",E,E,N,N],[6,"P258",E,E,N,N],[6,"N258",E,E,N,N],[6,"U259",E,E,N,N],[6,"P259",E,E,N,N],[6,"N259",E,E,N,N],[6,"U260",E,E,N,N],[6,"P260",E,E,N,N],[6,"N260",E,E,N,N],[6,"U261",E,E,N,N],[6,"P261",E,E,N,N],[6,"N261",E,E,N,N],[6,"U262",E,E,N,N],[6,"P262",E,E,N,N],[6,"N262",E,E,N,N],[6,"U263",E,E,N,N],[6,"P263",E,E,N,N],[6,"N263",E,E,N,N],[6,"U264",E,E,N,N],[6,"P264",E,E,N,N],[6,"N264",E,E,N,N],[6,"U265",E,E,N,N],[6,"P265",E,E,N,N],[6,"N265",E,E,N,N],[6,"U266",E,E,N,N],[6,"P266",E,E,N,N],[6,"N266",E,E,N,N],[6,"U267",E,E,N,N],[6,"P267",E,E,N,N],[6,"N267",E,E,N,N],[6,"U268",E,E,N,N],[6,"P268",E,E,N,N],[6,"N268",E,E,N,N],[6,"U269",E,E,N,N],[6,"P269",E,E,N,N],[6,"N269",E,E,N,N],[6,"U270",E,E,N,N],[6,"P270",E,E,N,N],[6,"N270",E,E,N,N],[6,"U271",E,E,N,N],[6,"P271",E,E,N,N],[6,"N271",E,E,N,N],[6,"U272",E,E,N,N],[6,"P272",E,E,N,N],[6,"N272",E,E,N,N],[6,"U273",E,E,N,N],[6,"P273",E,E,N,N],[6,"N273",E,E,N,N],[6,"U274",E,E,N,N],[6,"P274",E,E,N,N],[6,"N274",E,E,N,N],[6,"U275",E,E,N,N],[6,"P275",E,E,N,N],[6,"N275",E,E,N,N],[6,"U276",E,E,N,N],[6,"P276",E,E,N,N],[6,"N276",E,E,N,N],[6,"U277",E,E,N,N],[6,"P277",E,E,N,N],[6,"N277",E,E,N,N],[6,"U278",E,E,N,N],[6,"P278",E,E,N,N],[6,"N278",E,E,N,N],[6,"U279",E,E,N,N],[6,"P279",E,E,N,N],[6,"N279",E,E,N,N],[6,"U280",E,E,N,N],[6,"P280",E,E,N,N],[6,"N280",E,E,N,N],[6,"U281",E,E,N,N],[6,"P281",E,E,N,N],[6,"N281",E,E,N,N],[6,"U282",E,E,N,N],[6,"P282",E,E,N,N],[6,"N282",E,E,N,N],[6,"U283",E,E,N,N],[6,"P283",E,E,N,N],[6,"N283",E,E,N,N],[6,"U284",E,E,N,N],[6,"P284",E,E,N,N],[6,"N284",E,E,N,N],[6,"U285",E,E,N,N],[6,"P285",E,E,N,N],[6,"N285",E,E,N,N],[6,"U286",E,E,N,N],[6,"P286",E,E,N,N],[6,"N286",E,E,N,N],[6,"U287",E,E,N,N],[6,"P287",E,E,N,N],[6,"N287",E,E,N,N],[6,"U288",E,E,N,N],[6,"P288",E,E,N,N],[6,"N288",E,E,N,N],[6,"U289",E,E,N,N],[6,"P289",E,E,N,N],[6,"N289",E,E,N,N],[6,"U290",E,E,N,N],[6,"P290",E,E,N,N],[6,"N290",E,E,N,N],[6,"U291",E,E,N,N],[6,"P291",E,E,N,N],[6,"N291",E,E,N,N],[6,"U292",E,E,N,N],[6,"P292",E,E,N,N],[6,"N292",E,E,N,N],[6,"U293",E,E,N,N],[6,"P293",E,E,N,N],[6,"N293",E,E,N,N],[6,"U294",E,E,N,N],[6,"P294",E,E,N,N],[6,"N294",E,E,N,N],[6,"U295",E,E,N,N],[6,"P295",E,E,N,N],[6,"N295",E,E,N,N],[6,"U296",E,E,N,N],[6,"P296",E,E,N,N],[6,"N296",E,E,N,N],[6,"U297",E,E,N,N],[6,"P297",E,E,N,N],[6,"N297",E,E,N,N],[6,"U298",E,E,N,N],[6,"P298",E,E,N,N],[6,"N298",E,E,N,N],[6,"U299",E,E,N,N],[6,"P299",E,E,N,N],[6,"N299",E,E,N,N],[6,"U300",E,E,N,N],[6,"P300",E,E,N,N],[6,"N300",E,E,N,N],[6,"U301",E,E,N,N],[6,"P301",E,E,N,N],[6,"N301",E,E,N,N],[6,"U302",E,E,N,N],[6,"P302",E,E,N,N],[6,"N302",E,E,N,N],[6,"U303",E,E,N,N],[6,"P303",E,E,N,N],[6,"N303",E,E,N,N],[6,"U304",E,E,N,N],[6,"P304",E,E,N,N],[6,"N304",E,E,N,N],[6,"U305",E,E,N,N],[6,"P305",E,E,N,N],[6,"N305",E,E,N,N],[6,"U306",E,E,N,N],[6,"P306",E,E,N,N],[6,"N306",E,E,N,N],[6,"U307",E,E,N,N],[6,"P307",E,E,N,N],[6,"N307",E,E,N,N],[6,"U308",E,E,N,N],[6,"P308",E,E,N,N],[6,"N308",E,E,N,N],[6,"U309",E,E,N,N],[6,"P309",E,E,N,N],[6,"N309",E,E,N,N],[6,"U310",E,E,N,N],[6,"P310",E,E,N,N],[6,"N310",E,E,N,N],[6,"U311",E,E,N,N],[6,"P311",E,E,N,N],[6,"N311",E,E,N,N],[6,"U312",E,E,N,N],[6,"P312",E,E,N,N],[6,"N312",E,E,N,N],[6,"U313",E,E,N,N],[6,"P313",E,E,N,N],[6,"N313",E,E,N,N],[6,"U314",E,E,N,N],[6,"P314",E,E,N,N],[6,"N314",E,E,N,N],[6,"U315",E,E,N,N],[6,"P315",E,E,N,N],[6,"N315",E,E,N,N],[6,"U316",E,E,N,N],[6,"P316",E,E,N,N],[6,"N316",E,E,N,N],[6,"U317",E,E,N,N],[6,"P317",E,E,N,N],[6,"N317",E,E,N,N],[6,"U318",E,E,N,N],[6,"P318",E,E,N,N],[6,"N318",E,E,N,N],[6,"U319",E,E,N,N],[6,"P319",E,E,N,N],[6,"N319",E,E,N,N],[6,"U320",E,E,N,N],[6,"P320",E,E,N,N],[6,"N320",E,E,N,N],[6,"U321",E,E,N,N],[6,"P321",E,E,N,N],[6,"N321",E,E,N,N],[6,"U322",E,E,N,N],[6,"P322",E,E,N,N],[6,"N322",E,E,N,N],[6,"U323",E,E,N,N],[6,"P323",E,E,N,N],[6,"N323",E,E,N,N],[6,"U324",E,E,N,N],[6,"P324",E,E,N,N],[6,"N324",E,E,N,N],[6,"U325",E,E,N,N],[6,"P325",E,E,N,N],[6,"N325",E,E,N,N],[6,"U326",E,E,N,N],[6,"P326",E,E,N,N],[6,"N326",E,E,N,N],[6,"U327",E,E,N,N],[6,"P327",E,E,N,N],[6,"N327",E,E,N,N],[6,"U328",E,E,N,N],[6,"P328",E,E,N,N],[6,"N328",E,E,N,N],[6,"U329",E,E,N,N],[6,"P329",E,E,N,N],[6,"N329",E,E,N,N],[6,"U330",E,E,N,N],[6,"P330",E,E,N,N],[6,"N330",E,E,N,N],[6,"U331",E,E,N,N],[6,"P331",E,E,N,N],[6,"N331",E,E,N,N],[6,"U332",E,E,N,N],[6,"P332",E,E,N,N],[6,"N332",E,E,N,N],[6,"U333",E,E,N,N],[6,"P333",E,E,N,N],[6,"N333",E,E,N,N],[6,"U334",E,E,N,N],[6,"P334",E,E,N,N],[6,"N334",E,E,N,N],[6,"U335",E,E,N,N],[6,"P335",E,E,N,N],[6,"N335",E,E,N,N],[6,"U336",E,E,N,N],[6,"P336",E,E,N,N],[6,"N336",E,E,N,N],[6,"U337",E,E,N,N],[6,"P337",E,E,N,N],[6,"N337",E,E,N,N],[6,"U338",E,E,N,N],[6,"P338",E,E,N,N],[6,"N338",E,E,N,N],[6,"U339",E,E,N,N],[6,"P339",E,E,N,N],[6,"N339",E,E,N,N],[6,"U340",E,E,N,N],[6,"P340",E,E,N,N],[6,"N340",E,E,N,N],[6,"U341",E,E,N,N],[6,"P341",E,E,N,N],[6,"N341",E,E,N,N],[6,"U342",E,E,N,N],[6,"P342",E,E,N,N],[6,"N342",E,E,N,N],[6,"U343",E,E,N,N],[6,"P343",E,E,N,N],[6,"N343",E,E,N,N],[6,"U344",E,E,N,N],[6,"P344",E,E,N,N],[6,"N344",E,E,N,N],[6,"U345",E,E,N,N],[6,"P345",E,E,N,N],[6,"N345",E,E,N,N],[6,"U346",E,E,N,N],[6,"P346",E,E,N,N],[6,"N346",E,E,N,N],[6,"U347",E,E,N,N],[6,"P347",E,E,N,N],[6,"N347",E,E,N,N],[6,"U348",E,E,N,N],[6,"P348",E,E,N,N],[6,"N348",E,E,N,N],[6,"U349",E,E,N,N],[6,"P349",E,E,N,N],[6,"N349",E,E,N,N],[6,"U350",E,E,N,N],[6,"P350",E,E,N,N],[6,"N350",E,E,N,N],[6,"U351",E,E,N,N],[6,"P351",E,E,N,N],[6,"N351",E,E,N,N],[6,"U352",E,E,N,N],[6,"P352",E,E,N,N],[6,"N352",E,E,N,N],[6,"U353",E,E,N,N],[6,"P353",E,E,N,N],[6,"N353",E,E,N,N],[6,"U354",E,E,N,N],[6,"P354",E,E,N,N],[6,"N354",E,E,N,N],[6,"U355",E,E,N,N],[6,"P355",E,E,N,N],[6,"N355",E,E,N,N],[6,"U356",E,E,N,N],[6,"P356",E,E,N,N],[6,"N356",E,E,N,N],[6,"U357",E,E,N,N],[6,"P357",E,E,N,N],[6,"N357",E,E,N,N],[6,"U358",E,E,N,N],[6,"P358",E,E,N,N],[6,"N358",E,E,N,N],[6,"U359",E,E,N,N],[6,"P359",E,E,N,N],[6,"N359",E,E,N,N],[6,"U360",E,E,N,N],[6,"P360",E,E,N,N],[6,"N360",E,E,N,N],[6,"U361",E,E,N,N],[6,"P361",E,E,N,N],[6,"N361",E,E,N,N],[6,"U362",E,E,N,N],[6,"P362",E,E,N,N],[6,"N362",E,E,N,N],[6,"U363",E,E,N,N],[6,"P363",E,E,N,N],[6,"N363",E,E,N,N],[6,"U364",E,E,N,N],[6,"P364",E,E,N,N],[6,"N364",E,E,N,N],[6,"U365",E,E,N,N],[6,"P365",E,E,N,N],[6,"N365",E,E,N,N],[6,"U366",E,E,N,N],[6,"P366",E,E,N,N],[6,"N366",E,E,N,N],[6,"U367",E,E,N,N],[6,"P367",E,E,N,N],[6,"N367",E,E,N,N],[6,"U368",E,E,N,N],[6,"P368",E,E,N,N],[6,"N368",E,E,N,N],[6,"U369",E,E,N,N],[6,"P369",E,E,N,N],[6,"N369",E,E,N,N],[6,"U370",E,E,N,N],[6,"P370",E,E,N,N],[6,"N370",E,E,N,N],[6,"U371",E,E,N,N],[6,"P371",E,E,N,N],[6,"N371",E,E,N,N],[6,"U372",E,E,N,N],[6,"P372",E,E,N,N],[6,"N372",E,E,N,N],[6,"U373",E,E,N,N],[6,"P373",E,E,N,N],[6,"N373",E,E,N,N],[6,"U374",E,E,N,N],[6,"P374",E,E,N,N],[6,"N374",E,E,N,N],[6,"U375",E,E,N,N],[6,"P375",E,E,N,N],[6,"N375",E,E,N,N],[6,"U376",E,E,N,N],[6,"P376",E,E,N,N],[6,"N376",E,E,N,N],[6,"U377",E,E,N,N],[6,"P377",E,E,N,N],[6,"N377",E,E,N,N],[6,"U378",E,E,N,N],[6,"P378",E,E,N,N],[6,"N378",E,E,N,N],[6,"U379",E,E,N,N],[6,"P379",E,E,N,N],[6,"N379",E,E,N,N],[6,"U380",E,E,N,N],[6,"P380",E,E,N,N],[6,"N380",E,E,N,N],[6,"U381",E,E,N,N],[6,"P381",E,E,N,N],[6,"N381",E,E,N,N],[6,"U382",E,E,N,N],[6,"P382",E,E,N,N],[6,"N382",E,E,N,N],[6,"U383",E,E,N,N],[6,"P383",E,E,N,N],[6,"N383",E,E,N,N],[6,"U384",E,E,N,N],[6,"P384",E,E,N,N],[6,"N384",E,E,N,N],[6,"U385",E,E,N,N],[6,"P385",E,E,N,N],[6,"N385",E,E,N,N],[6,"U386",E,E,N,N],[6,"P386",E,E,N,N],[6,"N386",E,E,N,N],[6,"U387",E,E,N,N],[6,"P387",E,E,N,N],[6,"N387",E,E,N,N],[6,"U388",E,E,N,N],[6,"P388",E,E,N,N],[6,"N388",E,E,N,N],[6,"U389",E,E,N,N],[6,"P389",E,E,N,N],[6,"N389",E,E,N,N],[6,"U390",E,E,N,N],[6,"P390",E,E,N,N],[6,"N390",E,E,N,N],[6,"U391",E,E,N,N],[6,"P391",E,E,N,N],[6,"N391",E,E,N,N],[6,"U392",E,E,N,N],[6,"P392",E,E,N,N],[6,"N392",E,E,N,N],[6,"U393",E,E,N,N],[6,"P393",E,E,N,N],[6,"N393",E,E,N,N],[6,"U394",E,E,N,N],[6,"P394",E,E,N,N],[6,"N394",E,E,N,N],[6,"U395",E,E,N,N],[6,"P395",E,E,N,N],[6,"N395",E,E,N,N],[6,"U396",E,E,N,N],[6,"P396",E,E,N,N],[6,"N396",E,E,N,N],[6,"U397",E,E,N,N],[6,"P397",E,E,N,N],[6,"N397",E,E,N,N],[6,"U398",E,E,N,N],[6,"P398",E,E,N,N],[6,"N398",E,E,N,N],[6,"U399",E,E,N,N],[6,"P399",E,E,N,N],[6,"N399",E,E,N,N],[6,"U400",E,E,N,N],[6,"P400",E,E,N,N],[6,"N400",E,E,N,N],[6,"U401",E,E,N,N],[6,"P401",E,E,N,N],[6,"N401",E,E,N,N],[6,"U402",E,E,N,N],[6,"P402",E,E,N,N],[6,"N402",E,E,N,N],[6,"U403",E,E,N,N],[6,"P403",E,E,N,N],[6,"N403",E,E,N,N],[6,"U404",E,E,N,N],[6,"P404",E,E,N,N],[6,"N404",E,E,N,N],[6,"U405",E,E,N,N],[6,"P405",E,E,N,N],[6,"N405",E,E,N,N],[6,"U406",E,E,N,N],[6,"P406",E,E,N,N],[6,"N406",E,E,N,N],[6,"U407",E,E,N,N],[6,"P407",E,E,N,N],[6,"N407",E,E,N,N],[6,"U408",E,E,N,N],[6,"P408",E,E,N,N],[6,"N408",E,E,N,N],[6,"U409",E,E,N,N],[6,"P409",E,E,N,N],[6,"N409",E,E,N,N],[6,"U410",E,E,N,N],[6,"P410",E,E,N,N],[6,"N410",E,E,N,N],[6,"U411",E,E,N,N],[6,"P411",E,E,N,N],[6,"N411",E,E,N,N],[6,"U412",E,E,N,N],[6,"P412",E,E,N,N],[6,"N412",E,E,N,N],[6,"U413",E,E,N,N],[6,"P413",E,E,N,N],[6,"N413",E,E,N,N],[6,"U414",E,E,N,N],[6,"P414",E,E,N,N],[6,"N414",E,E,N,N],[6,"U415",E,E,N,N],[6,"P415",E,E,N,N],[6,"N415",E,E,N,N],[6,"U416",E,E,N,N],[6,"P416",E,E,N,N],[6,"N416",E,E,N,N],[6,"U417",E,E,N,N],[6,"P417",E,E,N,N],[6,"N417",E,E,N,N],[6,"U418",E,E,N,N],[6,"P418",E,E,N,N],[6,"N418",E,E,N,N],[6,"U419",E,E,N,N],[6,"P419",E,E,N,N],[6,"N419",E,E,N,N],[6,"U420",E,E,N,N],[6,"P420",E,E,N,N],[6,"N420",E,E,N,N],[6,"U421",E,E,N,N],[6,"P421",E,E,N,N],[6,"N421",E,E,N,N],[6,"U422",E,E,N,N],[6,"P422",E,E,N,N],[6,"N422",E,E,N,N],[6,"U423",E,E,N,N],[6,"P423",E,E,N,N],[6,"N423",E,E,N,N],[6,"U424",E,E,N,N],[6,"P424",E,E,N,N],[6,"N424",E,E,N,N],[6,"U425",E,E,N,N],[6,"P425",E,E,N,N],[6,"N425",E,E,N,N],[6,"U426",E,E,N,N],[6,"P426",E,E,N,N],[6,"N426",E,E,N,N],[6,"U427",E,E,N,N],[6,"P427",E,E,N,N],[6,"N427",E,E,N,N],[6,"U428",E,E,N,N],[6,"P428",E,E,N,N],[6,"N428",E,E,N,N],[6,"U429",E,E,N,N],[6,"P429",E,E,N,N],[6,"N429",E,E,N,N],[6,"U430",E,E,N,N],[6,"P430",E,E,N,N],[6,"N430",E,E,N,N],[6,"U431",E,E,N,N],[6,"P431",E,E,N,N],[6,"N431",E,E,N,N],[6,"U432",E,E,N,N],[6,"P432",E,E,N,N],[6,"N432",E,E,N,N],[6,"U433",E,E,N,N],[6,"P433",E,E,N,N],[6,"N433",E,E,N,N],[6,"U434",E,E,N,N],[6,"P434",E,E,N,N],[6,"N434",E,E,N,N],[6,"U435",E,E,N,N],[6,"P435",E,E,N,N],[6,"N435",E,E,N,N],[6,"U436",E,E,N,N],[6,"P436",E,E,N,N],[6,"N436",E,E,N,N],[6,"U437",E,E,N,N],[6,"P437",E,E,N,N],[6,"N437",E,E,N,N],[6,"U438",E,E,N,N],[6,"P438",E,E,N,N],[6,"N438",E,E,N,N],[6,"U439",E,E,N,N],[6,"P439",E,E,N,N],[6,"N439",E,E,N,N],[6,"U440",E,E,N,N],[6,"P440",E,E,N,N],[6,"N440",E,E,N,N],[6,"U441",E,E,N,N],[6,"P441",E,E,N,N],[6,"N441",E,E,N,N],[6,"U442",E,E,N,N],[6,"P442",E,E,N,N],[6,"N442",E,E,N,N],[6,"U443",E,E,N,N],[6,"P443",E,E,N,N],[6,"N443",E,E,N,N],[6,"U444",E,E,N,N],[6,"P444",E,E,N,N],[6,"N444",E,E,N,N],[6,"U445",E,E,N,N],[6,"P445",E,E,N,N],[6,"N445",E,E,N,N],[6,"U446",E,E,N,N],[6,"P446",E,E,N,N],[6,"N446",E,E,N,N],[6,"U447",E,E,N,N],[6,"P447",E,E,N,N],[6,"N447",E,E,N,N],[6,"U448",E,E,N,N],[6,"P448",E,E,N,N],[6,"N448",E,E,N,N],[6,"U449",E,E,N,N],[6,"P449",E,E,N,N],[6,"N449",E,E,N,N],[6,"U450",E,E,N,N],[6,"P450",E,E,N,N],[6,"N450",E,E,N,N],[6,"U451",E,E,N,N],[6,"P451",E,E,N,N],[6,"N451",E,E,N,N],[6,"U452",E,E,N,N],[6,"P452",E,E,N,N],[6,"N452",E,E,N,N],[6,"U453",E,E,N,N],[6,"P453",E,E,N,N],[6,"N453",E,E,N,N],[6,"U454",E,E,N,N],[6,"P454",E,E,N,N],[6,"N454",E,E,N,N],[6,"U455",E,E,N,N],[6,"P455",E,E,N,N],[6,"N455",E,E,N,N],[6,"U456",E,E,N,N],[6,"P456",E,E,N,N],[6,"N456",E,E,N,N],[6,"U457",E,E,N,N],[6,"P457",E,E,N,N],[6,"N457",E,E,N,N],[6,"U458",E,E,N,N],[6,"P458",E,E,N,N],[6,"N458",E,E,N,N],[6,"U459",E,E,N,N],[6,"P459",E,E,N,N],[6,"N459",E,E,N,N],[6,"U460",E,E,N,N],[6,"P460",E,E,N,N],[6,"N460",E,E,N,N],[6,"U461",E,E,N,N],[6,"P461",E,E,N,N],[6,"N461",E,E,N,N],[6,"U462",E,E,N,N],[6,"P462",E,E,N,N],[6,"N462",E,E,N,N],[6,"U463",E,E,N,N],[6,"P463",E,E,N,N],[6,"N463",E,E,N,N],[6,"U464",E,E,N,N],[6,"P464",E,E,N,N],[6,"N464",E,E,N,N],[6,"U465",E,E,N,N],[6,"P465",E,E,N,N],[6,"N465",E,E,N,N],[6,"U466",E,E,N,N],[6,"P466",E,E,N,N],[6,"N466",E,E,N,N],[6,"U467",E,E,N,N],[6,"P467",E,E,N,N],[6,"N467",E,E,N,N],[6,"U468",E,E,N,N],[6,"P468",E,E,N,N],[6,"N468",E,E,N,N],[6,"U469",E,E,N,N],[6,"P469",E,E,N,N],[6,"N469",E,E,N,N],[6,"U470",E,E,N,N],[6,"P470",E,E,N,N],[6,"N470",E,E,N,N],[6,"U471",E,E,N,N],[6,"P471",E,E,N,N],[6,"N471",E,E,N,N],[6,"U472",E,E,N,N],[6,"P472",E,E,N,N],[6,"N472",E,E,N,N],[6,"U473",E,E,N,N],[6,"P473",E,E,N,N],[6,"N473",E,E,N,N],[6,"U474",E,E,N,N],[6,"P474",E,E,N,N],[6,"N474",E,E,N,N],[6,"U475",E,E,N,N],[6,"P475",E,E,N,N],[6,"N475",E,E,N,N],[6,"U476",E,E,N,N],[6,"P476",E,E,N,N],[6,"N476",E,E,N,N],[6,"U477",E,E,N,N],[6,"P477",E,E,N,N],[6,"N477",E,E,N,N],[6,"U478",E,E,N,N],[6,"P478",E,E,N,N],[6,"N478",E,E,N,N],[6,"U479",E,E,N,N],[6,"P479",E,E,N,N],[6,"N479",E,E,N,N],[6,"U480",E,E,N,N],[6,"P480",E,E,N,N],[6,"N480",E,E,N,N],[6,"U481",E,E,N,N],[6,"P481",E,E,N,N],[6,"N481",E,E,N,N],[6,"U482",E,E,N,N],[6,"P482",E,E,N,N],[6,"N482",E,E,N,N],[6,"U483",E,E,N,N],[6,"P483",E,E,N,N],[6,"N483",E,E,N,N],[6,"U484",E,E,N,N],[6,"P484",E,E,N,N],[6,"N484",E,E,N,N],[6,"U485",E,E,N,N],[6,"P485",E,E,N,N],[6,"N485",E,E,N,N],[6,"U486",E,E,N,N],[6,"P486",E,E,N,N],[6,"N486",E,E,N,N],[6,"U487",E,E,N,N],[6,"P487",E,E,N,N],[6,"N487",E,E,N,N],[6,"U488",E,E,N,N],[6,"P488",E,E,N,N],[6,"N488",E,E,N,N],[6,"U489",E,E,N,N],[6,"P489",E,E,N,N],[6,"N489",E,E,N,N],[6,"U490",E,E,N,N],[6,"P490",E,E,N,N],[6,"N490",E,E,N,N],[6,"U491",E,E,N,N],[6,"P491",E,E,N,N],[6,"N491",E,E,N,N],[6,"U492",E,E,N,N],[6,"P492",E,E,N,N],[6,"N492",E,E,N,N],[6,"U493",E,E,N,N],[6,"P493",E,E,N,N],[6,"N493",E,E,N,N],[6,"U494",E,E,N,N],[6,"P494",E,E,N,N],[6,"N494",E,E,N,N],[6,"U495",E,E,N,N],[6,"P495",E,E,N,N],[6,"N495",E,E,N,N],[6,"U496",E,E,N,N],[6,"P496",E,E,N,N],[6,"N496",E,E,N,N],[6,"U497",E,E,N,N],[6,"P497",E,E,N,N],[6,"N497",E,E,N,N],[6,"U498",E,E,N,N],[6,"P498",E,E,N,N],[6,"N498",E,E,N,N],[6,"U499",E,E,N,N],[6,"P499",E,E,N,N],[6,"N499",E,E,N,N],[6,"U500",E,E,N,N],[6,"P500",E,E,N,N],[6,"N500",E,E,N,N],[6,"U501",E,E,N,N],[6,"P501",E,E,N,N],[6,"N501",E,E,N,N],[6,"U502",E,E,N,N],[6,"P502",E,E,N,N],[6,"N502",E,E,N,N],[6,"U503",E,E,N,N],[6,"P503",E,E,N,N],[6,"N503",E,E,N,N],[6,"U504",E,E,N,N],[6,"P504",E,E,N,N],[6,"N504",E,E,N,N],[6,"U505",E,E,N,N],[6,"P505",E,E,N,N],[6,"N505",E,E,N,N],[6,"U506",E,E,N,N],[6,"P506",E,E,N,N],[6,"N506",E,E,N,N],[6,"U507",E,E,N,N],[6,"P507",E,E,N,N],[6,"N507",E,E,N,N],[6,"U508",E,E,N,N],[6,"P508",E,E,N,N],[6,"N508",E,E,N,N],[6,"U509",E,E,N,N],[6,"P509",E,E,N,N],[6,"N509",E,E,N,N],[6,"U510",E,E,N,N],[6,"P510",E,E,N,N],[6,"N510",E,E,N,N],[6,"U511",E,E,N,N],[6,"P511",E,E,N,N],[6,"N511",E,E,N,N],[6,"U512",E,E,N,N],[6,"P512",E,E,N,N],[6,"N512",E,E,N,N],[6,"U513",E,E,N,N],[6,"P513",E,E,N,N],[6,"N513",E,E,N,N],[6,"U514",E,E,N,N],[6,"P514",E,E,N,N],[6,"N514",E,E,N,N],[6,"U515",E,E,N,N],[6,"P515",E,E,N,N],[6,"N515",E,E,N,N],[6,"U516",E,E,N,N],[6,"P516",E,E,N,N],[6,"N516",E,E,N,N],[6,"U517",E,E,N,N],[6,"P517",E,E,N,N],[6,"N517",E,E,N,N],[6,"U518",E,E,N,N],[6,"P518",E,E,N,N],[6,"N518",E,E,N,N],[6,"U519",E,E,N,N],[6,"P519",E,E,N,N],[6,"N519",E,E,N,N],[6,"U520",E,E,N,N],[6,"P520",E,E,N,N],[6,"N520",E,E,N,N],[6,"U521",E,E,N,N],[6,"P521",E,E,N,N],[6,"N521",E,E,N,N],[6,"U522",E,E,N,N],[6,"P522",E,E,N,N],[6,"N522",E,E,N,N],[6,"U523",E,E,N,N],[6,"P523",E,E,N,N],[6,"N523",E,E,N,N],[6,"U524",E,E,N,N],[6,"P524",E,E,N,N],[6,"N524",E,E,N,N],[6,"U525",E,E,N,N],[6,"P525",E,E,N,N],[6,"N525",E,E,N,N],[6,"U526",E,E,N,N],[6,"P526",E,E,N,N],[6,"N526",E,E,N,N],[6,"U527",E,E,N,N],[6,"P527",E,E,N,N],[6,"N527",E,E,N,N],[6,"U528",E,E,N,N],[6,"P528",E,E,N,N],[6,"N528",E,E,N,N],[6,"U529",E,E,N,N],[6,"P529",E,E,N,N],[6,"N529",E,E,N,N],[6,"U530",E,E,N,N],[6,"P530",E,E,N,N],[6,"N530",E,E,N,N],[6,"U531",E,E,N,N],[6,"P531",E,E,N,N],[6,"N531",E,E,N,N],[6,"U532",E,E,N,N],[6,"P532",E,E,N,N],[6,"N532",E,E,N,N],[6,"U533",E,E,N,N],[6,"P533",E,E,N,N],[6,"N533",E,E,N,N],[6,"U534",E,E,N,N],[6,"P534",E,E,N,N],[6,"N534",E,E,N,N],[6,"U535",E,E,N,N],[6,"P535",E,E,N,N],[6,"N535",E,E,N,N],[6,"U536",E,E,N,N],[6,"P536",E,E,N,N],[6,"N536",E,E,N,N],[6,"U537",E,E,N,N],[6,"P537",E,E,N,N],[6,"N537",E,E,N,N],[6,"U538",E,E,N,N],[6,"P538",E,E,N,N],[6,"N538",E,E,N,N],[6,"U539",E,E,N,N],[6,"P539",E,E,N,N],[6,"N539",E,E,N,N],[6,"U540",E,E,N,N],[6,"P540",E,E,N,N],[6,"N540",E,E,N,N],[6,"U541",E,E,N,N],[6,"P541",E,E,N,N],[6,"N541",E,E,N,N],[6,"U542",E,E,N,N],[6,"P542",E,E,N,N],[6,"N542",E,E,N,N],[6,"U543",E,E,N,N],[6,"P543",E,E,N,N],[6,"N543",E,E,N,N],[6,"U544",E,E,N,N],[6,"P544",E,E,N,N],[6,"N544",E,E,N,N],[6,"U545",E,E,N,N],[6,"P545",E,E,N,N],[6,"N545",E,E,N,N],[6,"U546",E,E,N,N],[6,"P546",E,E,N,N],[6,"N546",E,E,N,N],[6,"U547",E,E,N,N],[6,"P547",E,E,N,N],[6,"N547",E,E,N,N],[6,"U548",E,E,N,N],[6,"P548",E,E,N,N],[6,"N548",E,E,N,N],[6,"U549",E,E,N,N],[6,"P549",E,E,N,N],[6,"N549",E,E,N,N],[6,"U550",E,E,N,N],[6,"P550",E,E,N,N],[6,"N550",E,E,N,N],[6,"U551",E,E,N,N],[6,"P551",E,E,N,N],[6,"N551",E,E,N,N],[6,"U552",E,E,N,N],[6,"P552",E,E,N,N],[6,"N552",E,E,N,N],[6,"U553",E,E,N,N],[6,"P553",E,E,N,N],[6,"N553",E,E,N,N],[6,"U554",E,E,N,N],[6,"P554",E,E,N,N],[6,"N554",E,E,N,N],[6,"U555",E,E,N,N],[6,"P555",E,E,N,N],[6,"N555",E,E,N,N],[6,"U556",E,E,N,N],[6,"P556",E,E,N,N],[6,"N556",E,E,N,N],[6,"U557",E,E,N,N],[6,"P557",E,E,N,N],[6,"N557",E,E,N,N],[6,"U558",E,E,N,N],[6,"P558",E,E,N,N],[6,"N558",E,E,N,N],[6,"U559",E,E,N,N],[6,"P559",E,E,N,N],[6,"N559",E,E,N,N],[6,"U560",E,E,N,N],[6,"P560",E,E,N,N],[6,"N560",E,E,N,N],[6,"U561",E,E,N,N],[6,"P561",E,E,N,N],[6,"N561",E,E,N,N],[6,"U562",E,E,N,N],[6,"P562",E,E,N,N],[6,"N562",E,E,N,N],[6,"U563",E,E,N,N],[6,"P563",E,E,N,N],[6,"N563",E,E,N,N],[6,"U564",E,E,N,N],[6,"P564",E,E,N,N],[6,"N564",E,E,N,N],[6,"U565",E,E,N,N],[6,"P565",E,E,N,N],[6,"N565",E,E,N,N],[6,"U566",E,E,N,N],[6,"P566",E,E,N,N],[6,"N566",E,E,N,N],[6,"U567",E,E,N,N],[6,"P567",E,E,N,N],[6,"N567",E,E,N,N],[6,"U568",E,E,N,N],[6,"P568",E,E,N,N],[6,"N568",E,E,N,N],[6,"U569",E,E,N,N],[6,"P569",E,E,N,N],[6,"N569",E,E,N,N],[6,"U570",E,E,N,N],[6,"P570",E,E,N,N],[6,"N570",E,E,N,N],[6,"U571",E,E,N,N],[6,"P571",E,E,N,N],[6,"N571",E,E,N,N],[6,"U572",E,E,N,N],[6,"P572",E,E,N,N],[6,"N572",E,E,N,N],[6,"U573",E,E,N,N],[6,"P573",E,E,N,N],[6,"N573",E,E,N,N],[6,"U574",E,E,N,N],[6,"P574",E,E,N,N],[6,"N574",E,E,N,N],[6,"U575",E,E,N,N],[6,"P575",E,E,N,N],[6,"N575",E,E,N,N],[6,"U576",E,E,N,N],[6,"P576",E,E,N,N],[6,"N576",E,E,N,N],[6,"U577",E,E,N,N],[6,"P577",E,E,N,N],[6,"N577",E,E,N,N],[6,"U578",E,E,N,N],[6,"P578",E,E,N,N],[6,"N578",E,E,N,N],[6,"U579",E,E,N,N],[6,"P579",E,E,N,N],[6,"N579",E,E,N,N],[6,"U580",E,E,N,N],[6,"P580",E,E,N,N],[6,"N580",E,E,N,N],[6,"U581",E,E,N,N],[6,"P581",E,E,N,N],[6,"N581",E,E,N,N],[6,"U582",E,E,N,N],[6,"P582",E,E,N,N],[6,"N582",E,E,N,N],[6,"U583",E,E,N,N],[6,"P583",E,E,N,N],[6,"N583",E,E,N,N],[6,"U584",E,E,N,N],[6,"P584",E,E,N,N],[6,"N584",E,E,N,N],[6,"U585",E,E,N,N],[6,"P585",E,E,N,N],[6,"N585",E,E,N,N],[6,"U586",E,E,N,N],[6,"P586",E,E,N,N],[6,"N586",E,E,N,N],[6,"U587",E,E,N,N],[6,"P587",E,E,N,N],[6,"N587",E,E,N,N],[6,"U588",E,E,N,N],[6,"P588",E,E,N,N],[6,"N588",E,E,N,N],[6,"U589",E,E,N,N],[6,"P589",E,E,N,N],[6,"N589",E,E,N,N],[6,"U590",E,E,N,N],[6,"P590",E,E,N,N],[6,"N590",E,E,N,N],[6,"U591",E,E,N,N],[6,"P591",E,E,N,N],[6,"N591",E,E,N,N],[6,"U592",E,E,N,N],[6,"P592",E,E,N,N],[6,"N592",E,E,N,N],[6,"U593",E,E,N,N],[6,"P593",E,E,N,N],[6,"N593",E,E,N,N],[6,"U594",E,E,N,N],[6,"P594",E,E,N,N],[6,"N594",E,E,N,N],[6,"U595",E,E,N,N],[6,"P595",E,E,N,N],[6,"N595",E,E,N,N],[6,"U596",E,E,N,N],[6,"P596",E,E,N,N],[6,"N596",E,E,N,N],[6,"U597",E,E,N,N],[6,"P597",E,E,N,N],[6,"N597",E,E,N,N],[6,"U598",E,E,N,N],[6,"P598",E,E,N,N],[6,"N598",E,E,N,N],[6,"U599",E,E,N,N],[6,"P599",E,E,N,N],[6,"N599",E,E,N,N],[6,"U600",E,E,N,N],[6,"P600",E,E,N,N],[6,"N600",E,E,N,N],[6,"U601",E,E,N,N],[6,"P601",E,E,N,N],[6,"N601",E,E,N,N],[6,"U602",E,E,N,N],[6,"P602",E,E,N,N],[6,"N602",E,E,N,N],[6,"U603",E,E,N,N],[6,"P603",E,E,N,N],[6,"N603",E,E,N,N],[6,"U604",E,E,N,N],[6,"P604",E,E,N,N],[6,"N604",E,E,N,N],[6,"U605",E,E,N,N],[6,"P605",E,E,N,N],[6,"N605",E,E,N,N],[6,"U606",E,E,N,N],[6,"P606",E,E,N,N],[6,"N606",E,E,N,N],[6,"U607",E,E,N,N],[6,"P607",E,E,N,N],[6,"N607",E,E,N,N],[6,"U608",E,E,N,N],[6,"P608",E,E,N,N],[6,"N608",E,E,N,N],[6,"U609",E,E,N,N],[6,"P609",E,E,N,N],[6,"N609",E,E,N,N],[6,"U610",E,E,N,N],[6,"P610",E,E,N,N],[6,"N610",E,E,N,N],[6,"U611",E,E,N,N],[6,"P611",E,E,N,N],[6,"N611",E,E,N,N],[6,"U612",E,E,N,N],[6,"P612",E,E,N,N],[6,"N612",E,E,N,N],[6,"U613",E,E,N,N],[6,"P613",E,E,N,N],[6,"N613",E,E,N,N],[6,"U614",E,E,N,N],[6,"P614",E,E,N,N],[6,"N614",E,E,N,N],[6,"U615",E,E,N,N],[6,"P615",E,E,N,N],[6,"N615",E,E,N,N],[6,"U616",E,E,N,N],[6,"P616",E,E,N,N],[6,"N616",E,E,N,N],[6,"U617",E,E,N,N],[6,"P617",E,E,N,N],[6,"N617",E,E,N,N],[6,"U618",E,E,N,N],[6,"P618",E,E,N,N],[6,"N618",E,E,N,N],[6,"U619",E,E,N,N],[6,"P619",E,E,N,N],[6,"N619",E,E,N,N],[6,"U620",E,E,N,N],[6,"P620",E,E,N,N],[6,"N620",E,E,N,N],[6,"U621",E,E,N,N],[6,"P621",E,E,N,N],[6,"N621",E,E,N,N],[6,"U622",E,E,N,N],[6,"P622",E,E,N,N],[6,"N622",E,E,N,N],[6,"U623",E,E,N,N],[6,"P623",E,E,N,N],[6,"N623",E,E,N,N],[6,"U624",E,E,N,N],[6,"P624",E,E,N,N],[6,"N624",E,E,N,N],[6,"U625",E,E,N,N],[6,"P625",E,E,N,N],[6,"N625",E,E,N,N],[6,"U626",E,E,N,N],[6,"P626",E,E,N,N],[6,"N626",E,E,N,N],[6,"U627",E,E,N,N],[6,"P627",E,E,N,N],[6,"N627",E,E,N,N],[6,"U628",E,E,N,N],[6,"P628",E,E,N,N],[6,"N628",E,E,N,N],[6,"U629",E,E,N,N],[6,"P629",E,E,N,N],[6,"N629",E,E,N,N],[6,"U630",E,E,N,N],[6,"P630",E,E,N,N],[6,"N630",E,E,N,N],[6,"U631",E,E,N,N],[6,"P631",E,E,N,N],[6,"N631",E,E,N,N],[6,"U632",E,E,N,N],[6,"P632",E,E,N,N],[6,"N632",E,E,N,N],[6,"U633",E,E,N,N],[6,"P633",E,E,N,N],[6,"N633",E,E,N,N],[6,"U634",E,E,N,N],[6,"P634",E,E,N,N],[6,"N634",E,E,N,N],[6,"U635",E,E,N,N],[6,"P635",E,E,N,N],[6,"N635",E,E,N,N],[6,"U636",E,E,N,N],[6,"P636",E,E,N,N],[6,"N636",E,E,N,N],[6,"U637",E,E,N,N],[6,"P637",E,E,N,N],[6,"N637",E,E,N,N],[6,"U638",E,E,N,N],[6,"P638",E,E,N,N],[6,"N638",E,E,N,N],[6,"U639",E,E,N,N],[6,"P639",E,E,N,N],[6,"N639",E,E,N,N],[6,"U640",E,E,N,N],[6,"P640",E,E,N,N],[6,"N640",E,E,N,N],[6,"U641",E,E,N,N],[6,"P641",E,E,N,N],[6,"N641",E,E,N,N],[6,"U642",E,E,N,N],[6,"P642",E,E,N,N],[6,"N642",E,E,N,N],[6,"U643",E,E,N,N],[6,"P643",E,E,N,N],[6,"N643",E,E,N,N],[6,"U644",E,E,N,N],[6,"P644",E,E,N,N],[6,"N644",E,E,N,N],[6,"U645",E,E,N,N],[6,"P645",E,E,N,N],[6,"N645",E,E,N,N],[6,"U646",E,E,N,N],[6,"P646",E,E,N,N],[6,"N646",E,E,N,N],[6,"U647",E,E,N,N],[6,"P647",E,E,N,N],[6,"N647",E,E,N,N],[6,"U648",E,E,N,N],[6,"P648",E,E,N,N],[6,"N648",E,E,N,N],[6,"U649",E,E,N,N],[6,"P649",E,E,N,N],[6,"N649",E,E,N,N],[6,"U650",E,E,N,N],[6,"P650",E,E,N,N],[6,"N650",E,E,N,N],[6,"U651",E,E,N,N],[6,"P651",E,E,N,N],[6,"N651",E,E,N,N],[6,"U652",E,E,N,N],[6,"P652",E,E,N,N],[6,"N652",E,E,N,N],[6,"U653",E,E,N,N],[6,"P653",E,E,N,N],[6,"N653",E,E,N,N],[6,"U654",E,E,N,N],[6,"P654",E,E,N,N],[6,"N654",E,E,N,N],[6,"U655",E,E,N,N],[6,"P655",E,E,N,N],[6,"N655",E,E,N,N],[6,"U656",E,E,N,N],[6,"P656",E,E,N,N],[6,"N656",E,E,N,N],[6,"U657",E,E,N,N],[6,"P657",E,E,N,N],[6,"N657",E,E,N,N],[6,"U658",E,E,N,N],[6,"P658",E,E,N,N],[6,"N658",E,E,N,N],[6,"U659",E,E,N,N],[6,"P659",E,E,N,N],[6,"N659",E,E,N,N],[6,"U660",E,E,N,N],[6,"P660",E,E,N,N],[6,"N660",E,E,N,N],[6,"U661",E,E,N,N],[6,"P661",E,E,N,N],[6,"N661",E,E,N,N],[6,"U662",E,E,N,N],[6,"P662",E,E,N,N],[6,"N662",E,E,N,N],[6,"U663",E,E,N,N],[6,"P663",E,E,N,N],[6,"N663",E,E,N,N],[6,"U664",E,E,N,N],[6,"P664",E,E,N,N],[6,"N664",E,E,N,N],[6,"U665",E,E,N,N],[6,"P665",E,E,N,N],[6,"N665",E,E,N,N],[6,"U666",E,E,N,N],[6,"P666",E,E,N,N],[6,"N666",E,E,N,N],[6,"U667",E,E,N,N],[6,"P667",E,E,N,N],[6,"N667",E,E,N,N],[6,"U668",E,E,N,N],[6,"P668",E,E,N,N],[6,"N668",E,E,N,N],[6,"U669",E,E,N,N],[6,"P669",E,E,N,N],[6,"N669",E,E,N,N],[6,"U670",E,E,N,N],[6,"P670",E,E,N,N],[6,"N670",E,E,N,N],[6,"U671",E,E,N,N],[6,"P671",E,E,N,N],[6,"N671",E,E,N,N],[6,"U672",E,E,N,N],[6,"P672",E,E,N,N],[6,"N672",E,E,N,N],[6,"U673",E,E,N,N],[6,"P673",E,E,N,N],[6,"N673",E,E,N,N],[6,"U674",E,E,N,N],[6,"P674",E,E,N,N],[6,"N674",E,E,N,N],[6,"U675",E,E,N,N],[6,"P675",E,E,N,N],[6,"N675",E,E,N,N],[6,"U676",E,E,N,N],[6,"P676",E,E,N,N],[6,"N676",E,E,N,N],[6,"U677",E,E,N,N],[6,"P677",E,E,N,N],[6,"N677",E,E,N,N],[6,"U678",E,E,N,N],[6,"P678",E,E,N,N],[6,"N678",E,E,N,N],[6,"U679",E,E,N,N],[6,"P679",E,E,N,N],[6,"N679",E,E,N,N],[6,"U680",E,E,N,N],[6,"P680",E,E,N,N],[6,"N680",E,E,N,N],[6,"U681",E,E,N,N],[6,"P681",E,E,N,N],[6,"N681",E,E,N,N],[6,"U682",E,E,N,N],[6,"P682",E,E,N,N],[6,"N682",E,E,N,N],[6,"U683",E,E,N,N],[6,"P683",E,E,N,N],[6,"N683",E,E,N,N],[6,"U684",E,E,N,N],[6,"P684",E,E,N,N],[6,"N684",E,E,N,N],[6,"U685",E,E,N,N],[6,"P685",E,E,N,N],[6,"N685",E,E,N,N],[6,"U686",E,E,N,N],[6,"P686",E,E,N,N],[6,"N686",E,E,N,N],[6,"U687",E,E,N,N],[6,"P687",E,E,N,N],[6,"N687",E,E,N,N],[6,"U688",E,E,N,N],[6,"P688",E,E,N,N],[6,"N688",E,E,N,N],[6,"U689",E,E,N,N],[6,"P689",E,E,N,N],[6,"N689",E,E,N,N],[6,"U690",E,E,N,N],[6,"P690",E,E,N,N],[6,"N690",E,E,N,N],[6,"U691",E,E,N,N],[6,"P691",E,E,N,N],[6,"N691",E,E,N,N],[6,"U692",E,E,N,N],[6,"P692",E,E,N,N],[6,"N692",E,E,N,N],[6,"U693",E,E,N,N],[6,"P693",E,E,N,N],[6,"N693",E,E,N,N],[6,"U694",E,E,N,N],[6,"P694",E,E,N,N],[6,"N694",E,E,N,N],[6,"U695",E,E,N,N],[6,"P695",E,E,N,N],[6,"N695",E,E,N,N],[6,"U696",E,E,N,N],[6,"P696",E,E,N,N],[6,"N696",E,E,N,N],[6,"U697",E,E,N,N],[6,"P697",E,E,N,N],[6,"N697",E,E,N,N],[6,"U698",E,E,N,N],[6,"P698",E,E,N,N],[6,"N698",E,E,N,N],[6,"U699",E,E,N,N],[6,"P699",E,E,N,N],[6,"N699",E,E,N,N],[6,"U700",E,E,N,N],[6,"P700",E,E,N,N],[6,"N700",E,E,N,N],[6,"U701",E,E,N,N],[6,"P701",E,E,N,N],[6,"N701",E,E,N,N],[6,"U702",E,E,N,N],[6,"P702",E,E,N,N],[6,"N702",E,E,N,N],[6,"U703",E,E,N,N],[6,"P703",E,E,N,N],[6,"N703",E,E,N,N],[6,"U704",E,E,N,N],[6,"P704",E,E,N,N],[6,"N704",E,E,N,N],[6,"U705",E,E,N,N],[6,"P705",E,E,N,N],[6,"N705",E,E,N,N],[6,"U706",E,E,N,N],[6,"P706",E,E,N,N],[6,"N706",E,E,N,N],[6,"U707",E,E,N,N],[6,"P707",E,E,N,N],[6,"N707",E,E,N,N],[6,"U708",E,E,N,N],[6,"P708",E,E,N,N],[6,"N708",E,E,N,N],[6,"U709",E,E,N,N],[6,"P709",E,E,N,N],[6,"N709",E,E,N,N],[6,"U710",E,E,N,N],[6,"P710",E,E,N,N],[6,"N710",E,E,N,N],[6,"U711",E,E,N,N],[6,"P711",E,E,N,N],[6,"N711",E,E,N,N],[6,"U712",E,E,N,N],[6,"P712",E,E,N,N],[6,"N712",E,E,N,N],[6,"U713",E,E,N,N],[6,"P713",E,E,N,N],[6,"N713",E,E,N,N],[6,"U714",E,E,N,N],[6,"P714",E,E,N,N],[6,"N714",E,E,N,N],[6,"U715",E,E,N,N],[6,"P715",E,E,N,N],[6,"N715",E,E,N,N],[6,"U716",E,E,N,N],[6,"P716",E,E,N,N],[6,"N716",E,E,N,N],[6,"U717",E,E,N,N],[6,"P717",E,E,N,N],[6,"N717",E,E,N,N],[6,"U718",E,E,N,N],[6,"P718",E,E,N,N],[6,"N718",E,E,N,N],[6,"U719",E,E,N,N],[6,"P719",E,E,N,N],[6,"N719",E,E,N,N],[6,"U720",E,E,N,N],[6,"P720",E,E,N,N],[6,"N720",E,E,N,N],[6,"U721",E,E,N,N],[6,"P721",E,E,N,N],[6,"N721",E,E,N,N],[6,"U722",E,E,N,N],[6,"P722",E,E,N,N],[6,"N722",E,E,N,N],[6,"U723",E,E,N,N],[6,"P723",E,E,N,N],[6,"N723",E,E,N,N],[6,"U724",E,E,N,N],[6,"P724",E,E,N,N],[6,"N724",E,E,N,N],[6,"U725",E,E,N,N],[6,"P725",E,E,N,N],[6,"N725",E,E,N,N],[6,"U726",E,E,N,N],[6,"P726",E,E,N,N],[6,"N726",E,E,N,N],[6,"U727",E,E,N,N],[6,"P727",E,E,N,N],[6,"N727",E,E,N,N],[6,"U728",E,E,N,N],[6,"P728",E,E,N,N],[6,"N728",E,E,N,N],[6,"U729",E,E,N,N],[6,"P729",E,E,N,N],[6,"N729",E,E,N,N],[6,"U730",E,E,N,N],[6,"P730",E,E,N,N],[6,"N730",E,E,N,N],[6,"U731",E,E,N,N],[6,"P731",E,E,N,N],[6,"N731",E,E,N,N],[6,"U732",E,E,N,N],[6,"P732",E,E,N,N],[6,"N732",E,E,N,N],[6,"U733",E,E,N,N],[6,"P733",E,E,N,N],[6,"N733",E,E,N,N],[6,"U734",E,E,N,N],[6,"P734",E,E,N,N],[6,"N734",E,E,N,N],[6,"U735",E,E,N,N],[6,"P735",E,E,N,N],[6,"N735",E,E,N,N],[6,"U736",E,E,N,N],[6,"P736",E,E,N,N],[6,"N736",E,E,N,N],[6,"U737",E,E,N,N],[6,"P737",E,E,N,N],[6,"N737",E,E,N,N],[6,"U738",E,E,N,N],[6,"P738",E,E,N,N],[6,"N738",E,E,N,N],[6,"U739",E,E,N,N],[6,"P739",E,E,N,N],[6,"N739",E,E,N,N],[6,"U740",E,E,N,N],[6,"P740",E,E,N,N],[6,"N740",E,E,N,N],[6,"U741",E,E,N,N],[6,"P741",E,E,N,N],[6,"N741",E,E,N,N],[6,"U742",E,E,N,N],[6,"P742",E,E,N,N],[6,"N742",E,E,N,N],[6,"U743",E,E,N,N],[6,"P743",E,E,N,N],[6,"N743",E,E,N,N],[6,"U744",E,E,N,N],[6,"P744",E,E,N,N],[6,"N744",E,E,N,N],[6,"U745",E,E,N,N],[6,"P745",E,E,N,N],[6,"N745",E,E,N,N],[6,"U746",E,E,N,N],[6,"P746",E,E,N,N],[6,"N746",E,E,N,N],[6,"U747",E,E,N,N],[6,"P747",E,E,N,N],[6,"N747",E,E,N,N],[6,"U748",E,E,N,N],[6,"P748",E,E,N,N],[6,"N748",E,E,N,N],[6,"U749",E,E,N,N],[6,"P749",E,E,N,N],[6,"N749",E,E,N,N],[6,"U750",E,E,N,N],[6,"P750",E,E,N,N],[6,"N750",E,E,N,N],[6,"U751",E,E,N,N],[6,"P751",E,E,N,N],[6,"N751",E,E,N,N],[6,"U752",E,E,N,N],[6,"P752",E,E,N,N],[6,"N752",E,E,N,N],[6,"U753",E,E,N,N],[6,"P753",E,E,N,N],[6,"N753",E,E,N,N],[6,"U754",E,E,N,N],[6,"P754",E,E,N,N],[6,"N754",E,E,N,N],[6,"U755",E,E,N,N],[6,"P755",E,E,N,N],[6,"N755",E,E,N,N],[6,"U756",E,E,N,N],[6,"P756",E,E,N,N],[6,"N756",E,E,N,N],[6,"U757",E,E,N,N],[6,"P757",E,E,N,N],[6,"N757",E,E,N,N],[6,"U758",E,E,N,N],[6,"P758",E,E,N,N],[6,"N758",E,E,N,N],[6,"U759",E,E,N,N],[6,"P759",E,E,N,N],[6,"N759",E,E,N,N],[6,"U760",E,E,N,N],[6,"P760",E,E,N,N],[6,"N760",E,E,N,N],[6,"U761",E,E,N,N],[6,"P761",E,E,N,N],[6,"N761",E,E,N,N],[6,"U762",E,E,N,N],[6,"P762",E,E,N,N],[6,"N762",E,E,N,N],[6,"U763",E,E,N,N],[6,"P763",E,E,N,N],[6,"N763",E,E,N,N],[6,"U764",E,E,N,N],[6,"P764",E,E,N,N],[6,"N764",E,E,N,N],[6,"U765",E,E,N,N],[6,"P765",E,E,N,N],[6,"N765",E,E,N,N],[6,"U766",E,E,N,N],[6,"P766",E,E,N,N],[6,"N766",E,E,N,N],[6,"U767",E,E,N,N],[6,"P767",E,E,N,N],[6,"N767",E,E,N,N],[6,"U768",E,E,N,N],[6,"P768",E,E,N,N],[6,"N768",E,E,N,N],[6,"U769",E,E,N,N],[6,"P769",E,E,N,N],[6,"N769",E,E,N,N],[6,"U770",E,E,N,N],[6,"P770",E,E,N,N],[6,"N770",E,E,N,N],[6,"U771",E,E,N,N],[6,"P771",E,E,N,N],[6,"N771",E,E,N,N],[6,"U772",E,E,N,N],[6,"P772",E,E,N,N],[6,"N772",E,E,N,N],[6,"U773",E,E,N,N],[6,"P773",E,E,N,N],[6,"N773",E,E,N,N],[6,"U774",E,E,N,N],[6,"P774",E,E,N,N],[6,"N774",E,E,N,N],[6,"U775",E,E,N,N],[6,"P775",E,E,N,N],[6,"N775",E,E,N,N],[6,"U776",E,E,N,N],[6,"P776",E,E,N,N],[6,"N776",E,E,N,N],[6,"U777",E,E,N,N],[6,"P777",E,E,N,N],[6,"N777",E,E,N,N],[6,"U778",E,E,N,N],[6,"P778",E,E,N,N],[6,"N778",E,E,N,N],[6,"U779",E,E,N,N],[6,"P779",E,E,N,N],[6,"N779",E,E,N,N],[6,"U780",E,E,N,N],[6,"P780",E,E,N,N],[6,"N780",E,E,N,N],[6,"U781",E,E,N,N],[6,"P781",E,E,N,N],[6,"N781",E,E,N,N],[6,"U782",E,E,N,N],[6,"P782",E,E,N,N],[6,"N782",E,E,N,N],[6,"U783",E,E,N,N],[6,"P783",E,E,N,N],[6,"N783",E,E,N,N],[6,"U784",E,E,N,N],[6,"P784",E,E,N,N],[6,"N784",E,E,N,N],[6,"U785",E,E,N,N],[6,"P785",E,E,N,N],[6,"N785",E,E,N,N],[6,"U786",E,E,N,N],[6,"P786",E,E,N,N],[6,"N786",E,E,N,N],[6,"U787",E,E,N,N],[6,"P787",E,E,N,N],[6,"N787",E,E,N,N],[6,"U788",E,E,N,N],[6,"P788",E,E,N,N],[6,"N788",E,E,N,N],[6,"U789",E,E,N,N],[6,"P789",E,E,N,N],[6,"N789",E,E,N,N],[6,"U790",E,E,N,N],[6,"P790",E,E,N,N],[6,"N790",E,E,N,N],[6,"U791",E,E,N,N],[6,"P791",E,E,N,N],[6,"N791",E,E,N,N],[6,"U792",E,E,N,N],[6,"P792",E,E,N,N],[6,"N792",E,E,N,N],[6,"U793",E,E,N,N],[6,"P793",E,E,N,N],[6,"N793",E,E,N,N],[6,"U794",E,E,N,N],[6,"P794",E,E,N,N],[6,"N794",E,E,N,N],[6,"U795",E,E,N,N],[6,"P795",E,E,N,N],[6,"N795",E,E,N,N],[6,"U796",E,E,N,N],[6,"P796",E,E,N,N],[6,"N796",E,E,N,N],[6,"U797",E,E,N,N],[6,"P797",E,E,N,N],[6,"N797",E,E,N,N],[6,"U798",E,E,N,N],[6,"P798",E,E,N,N],[6,"N798",E,E,N,N],[6,"U799",E,E,N,N],[6,"P799",E,E,N,N],[6,"N799",E,E,N,N],[6,"U800",E,E,N,N],[6,"P800",E,E,N,N],[6,"N800",E,E,N,N],[6,"U801",E,E,N,N],[6,"P801",E,E,N,N],[6,"N801",E,E,N,N],[6,"U802",E,E,N,N],[6,"P802",E,E,N,N],[6,"N802",E,E,N,N],[6,"U803",E,E,N,N],[6,"P803",E,E,N,N],[6,"N803",E,E,N,N],[6,"U804",E,E,N,N],[6,"P804",E,E,N,N],[6,"N804",E,E,N,N],[6,"U805",E,E,N,N],[6,"P805",E,E,N,N],[6,"N805",E,E,N,N],[6,"U806",E,E,N,N],[6,"P806",E,E,N,N],[6,"N806",E,E,N,N],[6,"U807",E,E,N,N],[6,"P807",E,E,N,N],[6,"N807",E,E,N,N],[6,"U808",E,E,N,N],[6,"P808",E,E,N,N],[6,"N808",E,E,N,N],[6,"U809",E,E,N,N],[6,"P809",E,E,N,N],[6,"N809",E,E,N,N],[6,"U810",E,E,N,N],[6,"P810",E,E,N,N],[6,"N810",E,E,N,N],[6,"U811",E,E,N,N],[6,"P811",E,E,N,N],[6,"N811",E,E,N,N],[6,"U812",E,E,N,N],[6,"P812",E,E,N,N],[6,"N812",E,E,N,N],[6,"U813",E,E,N,N],[6,"P813",E,E,N,N],[6,"N813",E,E,N,N],[6,"U814",E,E,N,N],[6,"P814",E,E,N,N],[6,"N814",E,E,N,N],[6,"U815",E,E,N,N],[6,"P815",E,E,N,N],[6,"N815",E,E,N,N],[6,"U816",E,E,N,N],[6,"P816",E,E,N,N],[6,"N816",E,E,N,N],[6,"U817",E,E,N,N],[6,"P817",E,E,N,N],[6,"N817",E,E,N,N],[6,"U818",E,E,N,N],[6,"P818",E,E,N,N],[6,"N818",E,E,N,N],[6,"U819",E,E,N,N],[6,"P819",E,E,N,N],[6,"N819",E,E,N,N],[6,"U820",E,E,N,N],[6,"P820",E,E,N,N],[6,"N820",E,E,N,N],[6,"U821",E,E,N,N],[6,"P821",E,E,N,N],[6,"N821",E,E,N,N],[6,"U822",E,E,N,N],[6,"P822",E,E,N,N],[6,"N822",E,E,N,N],[6,"U823",E,E,N,N],[6,"P823",E,E,N,N],[6,"N823",E,E,N,N],[6,"U824",E,E,N,N],[6,"P824",E,E,N,N],[6,"N824",E,E,N,N],[6,"U825",E,E,N,N],[6,"P825",E,E,N,N],[6,"N825",E,E,N,N],[6,"U826",E,E,N,N],[6,"P826",E,E,N,N],[6,"N826",E,E,N,N],[6,"U827",E,E,N,N],[6,"P827",E,E,N,N],[6,"N827",E,E,N,N],[6,"U828",E,E,N,N],[6,"P828",E,E,N,N],[6,"N828",E,E,N,N],[6,"U829",E,E,N,N],[6,"P829",E,E,N,N],[6,"N829",E,E,N,N],[6,"U830",E,E,N,N],[6,"P830",E,E,N,N],[6,"N830",E,E,N,N],[6,"U831",E,E,N,N],[6,"P831",E,E,N,N],[6,"N831",E,E,N,N],[6,"U832",E,E,N,N],[6,"P832",E,E,N,N],[6,"N832",E,E,N,N],[6,"U833",E,E,N,N],[6,"P833",E,E,N,N],[6,"N833",E,E,N,N],[6,"U834",E,E,N,N],[6,"P834",E,E,N,N],[6,"N834",E,E,N,N],[6,"U835",E,E,N,N],[6,"P835",E,E,N,N],[6,"N835",E,E,N,N],[6,"U836",E,E,N,N],[6,"P836",E,E,N,N],[6,"N836",E,E,N,N],[6,"U837",E,E,N,N],[6,"P837",E,E,N,N],[6,"N837",E,E,N,N],[6,"U838",E,E,N,N],[6,"P838",E,E,N,N],[6,"N838",E,E,N,N],[6,"U839",E,E,N,N],[6,"P839",E,E,N,N],[6,"N839",E,E,N,N],[6,"U840",E,E,N,N],[6,"P840",E,E,N,N],[6,"N840",E,E,N,N],[6,"U841",E,E,N,N],[6,"P841",E,E,N,N],[6,"N841",E,E,N,N],[6,"U842",E,E,N,N],[6,"P842",E,E,N,N],[6,"N842",E,E,N,N],[6,"U843",E,E,N,N],[6,"P843",E,E,N,N],[6,"N843",E,E,N,N],[6,"U844",E,E,N,N],[6,"P844",E,E,N,N],[6,"N844",E,E,N,N],[6,"U845",E,E,N,N],[6,"P845",E,E,N,N],[6,"N845",E,E,N,N],[6,"U846",E,E,N,N],[6,"P846",E,E,N,N],[6,"N846",E,E,N,N],[6,"U847",E,E,N,N],[6,"P847",E,E,N,N],[6,"N847",E,E,N,N],[6,"U848",E,E,N,N],[6,"P848",E,E,N,N],[6,"N848",E,E,N,N],[6,"U849",E,E,N,N],[6,"P849",E,E,N,N],[6,"N849",E,E,N,N],[6,"U850",E,E,N,N],[6,"P850",E,E,N,N],[6,"N850",E,E,N,N],[6,"U851",E,E,N,N],[6,"P851",E,E,N,N],[6,"N851",E,E,N,N],[6,"U852",E,E,N,N],[6,"P852",E,E,N,N],[6,"N852",E,E,N,N],[6,"U853",E,E,N,N],[6,"P853",E,E,N,N],[6,"N853",E,E,N,N],[6,"U854",E,E,N,N],[6,"P854",E,E,N,N],[6,"N854",E,E,N,N],[6,"U855",E,E,N,N],[6,"P855",E,E,N,N],[6,"N855",E,E,N,N],[6,"U856",E,E,N,N],[6,"P856",E,E,N,N],[6,"N856",E,E,N,N],[6,"U857",E,E,N,N],[6,"P857",E,E,N,N],[6,"N857",E,E,N,N],[6,"U858",E,E,N,N],[6,"P858",E,E,N,N],[6,"N858",E,E,N,N],[6,"U859",E,E,N,N],[6,"P859",E,E,N,N],[6,"N859",E,E,N,N],[6,"U860",E,E,N,N],[6,"P860",E,E,N,N],[6,"N860",E,E,N,N],[6,"U861",E,E,N,N],[6,"P861",E,E,N,N],[6,"N861",E,E,N,N],[6,"U862",E,E,N,N],[6,"P862",E,E,N,N],[6,"N862",E,E,N,N],[6,"U863",E,E,N,N],[6,"P863",E,E,N,N],[6,"N863",E,E,N,N],[6,"U864",E,E,N,N],[6,"P864",E,E,N,N],[6,"N864",E,E,N,N],[6,"U865",E,E,N,N],[6,"P865",E,E,N,N],[6,"N865",E,E,N,N],[6,"U866",E,E,N,N],[6,"P866",E,E,N,N],[6,"N866",E,E,N,N],[6,"U867",E,E,N,N],[6,"P867",E,E,N,N],[6,"N867",E,E,N,N],[6,"U868",E,E,N,N],[6,"P868",E,E,N,N],[6,"N868",E,E,N,N],[6,"U869",E,E,N,N],[6,"P869",E,E,N,N],[6,"N869",E,E,N,N],[6,"U870",E,E,N,N],[6,"P870",E,E,N,N],[6,"N870",E,E,N,N],[6,"U871",E,E,N,N],[6,"P871",E,E,N,N],[6,"N871",E,E,N,N],[6,"U872",E,E,N,N],[6,"P872",E,E,N,N],[6,"N872",E,E,N,N],[6,"U873",E,E,N,N],[6,"P873",E,E,N,N],[6,"N873",E,E,N,N],[6,"U874",E,E,N,N],[6,"P874",E,E,N,N],[6,"N874",E,E,N,N],[6,"U875",E,E,N,N],[6,"P875",E,E,N,N],[6,"N875",E,E,N,N],[6,"U876",E,E,N,N],[6,"P876",E,E,N,N],[6,"N876",E,E,N,N],[6,"U877",E,E,N,N],[6,"P877",E,E,N,N],[6,"N877",E,E,N,N],[6,"U878",E,E,N,N],[6,"P878",E,E,N,N],[6,"N878",E,E,N,N],[6,"U879",E,E,N,N],[6,"P879",E,E,N,N],[6,"N879",E,E,N,N],[6,"U880",E,E,N,N],[6,"P880",E,E,N,N],[6,"N880",E,E,N,N],[6,"U881",E,E,N,N],[6,"P881",E,E,N,N],[6,"N881",E,E,N,N],[6,"U882",E,E,N,N],[6,"P882",E,E,N,N],[6,"N882",E,E,N,N],[6,"U883",E,E,N,N],[6,"P883",E,E,N,N],[6,"N883",E,E,N,N],[6,"U884",E,E,N,N],[6,"P884",E,E,N,N],[6,"N884",E,E,N,N],[6,"U885",E,E,N,N],[6,"P885",E,E,N,N],[6,"N885",E,E,N,N],[6,"U886",E,E,N,N],[6,"P886",E,E,N,N],[6,"N886",E,E,N,N],[6,"U887",E,E,N,N],[6,"P887",E,E,N,N],[6,"N887",E,E,N,N],[6,"U888",E,E,N,N],[6,"P888",E,E,N,N],[6,"N888",E,E,N,N],[6,"U889",E,E,N,N],[6,"P889",E,E,N,N],[6,"N889",E,E,N,N],[6,"U890",E,E,N,N],[6,"P890",E,E,N,N],[6,"N890",E,E,N,N],[6,"U891",E,E,N,N],[6,"P891",E,E,N,N],[6,"N891",E,E,N,N],[6,"U892",E,E,N,N],[6,"P892",E,E,N,N],[6,"N892",E,E,N,N],[6,"U893",E,E,N,N],[6,"P893",E,E,N,N],[6,"N893",E,E,N,N],[6,"U894",E,E,N,N],[6,"P894",E,E,N,N],[6,"N894",E,E,N,N],[6,"U895",E,E,N,N],[6,"P895",E,E,N,N],[6,"N895",E,E,N,N],[6,"U896",E,E,N,N],[6,"P896",E,E,N,N],[6,"N896",E,E,N,N],[6,"U897",E,E,N,N],[6,"P897",E,E,N,N],[6,"N897",E,E,N,N],[6,"U898",E,E,N,N],[6,"P898",E,E,N,N],[6,"N898",E,E,N,N],[6,"U899",E,E,N,N],[6,"P899",E,E,N,N],[6,"N899",E,E,N,N],[6,"U900",E,E,N,N],[6,"P900",E,E,N,N],[6,"N900",E,E,N,N],[6,"U901",E,E,N,N],[6,"P901",E,E,N,N],[6,"N901",E,E,N,N],[6,"U902",E,E,N,N],[6,"P902",E,E,N,N],[6,"N902",E,E,N,N],[6,"U903",E,E,N,N],[6,"P903",E,E,N,N],[6,"N903",E,E,N,N],[6,"U904",E,E,N,N],[6,"P904",E,E,N,N],[6,"N904",E,E,N,N],[6,"U905",E,E,N,N],[6,"P905",E,E,N,N],[6,"N905",E,E,N,N],[6,"U906",E,E,N,N],[6,"P906",E,E,N,N],[6,"N906",E,E,N,N],[6,"U907",E,E,N,N],[6,"P907",E,E,N,N],[6,"N907",E,E,N,N],[6,"U908",E,E,N,N],[6,"P908",E,E,N,N],[6,"N908",E,E,N,N],[6,"U909",E,E,N,N],[6,"P909",E,E,N,N],[6,"N909",E,E,N,N],[6,"U910",E,E,N,N],[6,"P910",E,E,N,N],[6,"N910",E,E,N,N],[6,"U911",E,E,N,N],[6,"P911",E,E,N,N],[6,"N911",E,E,N,N],[6,"U912",E,E,N,N],[6,"P912",E,E,N,N],[6,"N912",E,E,N,N],[6,"U913",E,E,N,N],[6,"P913",E,E,N,N],[6,"N913",E,E,N,N],[6,"U914",E,E,N,N],[6,"P914",E,E,N,N],[6,"N914",E,E,N,N],[6,"U915",E,E,N,N],[6,"P915",E,E,N,N],[6,"N915",E,E,N,N],[6,"U916",E,E,N,N],[6,"P916",E,E,N,N],[6,"N916",E,E,N,N],[6,"U917",E,E,N,N],[6,"P917",E,E,N,N],[6,"N917",E,E,N,N],[6,"U918",E,E,N,N],[6,"P918",E,E,N,N],[6,"N918",E,E,N,N],[6,"U919",E,E,N,N],[6,"P919",E,E,N,N],[6,"N919",E,E,N,N],[6,"U920",E,E,N,N],[6,"P920",E,E,N,N],[6,"N920",E,E,N,N],[6,"U921",E,E,N,N],[6,"P921",E,E,N,N],[6,"N921",E,E,N,N],[6,"U922",E,E,N,N],[6,"P922",E,E,N,N],[6,"N922",E,E,N,N],[6,"U923",E,E,N,N],[6,"P923",E,E,N,N],[6,"N923",E,E,N,N],[6,"U924",E,E,N,N],[6,"P924",E,E,N,N],[6,"N924",E,E,N,N],[6,"U925",E,E,N,N],[6,"P925",E,E,N,N],[6,"N925",E,E,N,N],[6,"U926",E,E,N,N],[6,"P926",E,E,N,N],[6,"N926",E,E,N,N],[6,"U927",E,E,N,N],[6,"P927",E,E,N,N],[6,"N927",E,E,N,N],[6,"U928",E,E,N,N],[6,"P928",E,E,N,N],[6,"N928",E,E,N,N],[6,"U929",E,E,N,N],[6,"P929",E,E,N,N],[6,"N929",E,E,N,N],[6,"U930",E,E,N,N],[6,"P930",E,E,N,N],[6,"N930",E,E,N,N],[6,"U931",E,E,N,N],[6,"P931",E,E,N,N],[6,"N931",E,E,N,N],[6,"U932",E,E,N,N],[6,"P932",E,E,N,N],[6,"N932",E,E,N,N],[6,"U933",E,E,N,N],[6,"P933",E,E,N,N],[6,"N933",E,E,N,N],[6,"U934",E,E,N,N],[6,"P934",E,E,N,N],[6,"N934",E,E,N,N],[6,"U935",E,E,N,N],[6,"P935",E,E,N,N],[6,"N935",E,E,N,N],[6,"U936",E,E,N,N],[6,"P936",E,E,N,N],[6,"N936",E,E,N,N],[6,"U937",E,E,N,N],[6,"P937",E,E,N,N],[6,"N937",E,E,N,N],[6,"U938",E,E,N,N],[6,"P938",E,E,N,N],[6,"N938",E,E,N,N],[6,"U939",E,E,N,N],[6,"P939",E,E,N,N],[6,"N939",E,E,N,N],[6,"U940",E,E,N,N],[6,"P940",E,E,N,N],[6,"N940",E,E,N,N],[6,"U941",E,E,N,N],[6,"P941",E,E,N,N],[6,"N941",E,E,N,N],[6,"U942",E,E,N,N],[6,"P942",E,E,N,N],[6,"N942",E,E,N,N],[6,"U943",E,E,N,N],[6,"P943",E,E,N,N],[6,"N943",E,E,N,N],[6,"U944",E,E,N,N],[6,"P944",E,E,N,N],[6,"N944",E,E,N,N],[6,"U945",E,E,N,N],[6,"P945",E,E,N,N],[6,"N945",E,E,N,N],[6,"U946",E,E,N,N],[6,"P946",E,E,N,N],[6,"N946",E,E,N,N],[6,"U947",E,E,N,N],[6,"P947",E,E,N,N],[6,"N947",E,E,N,N],[6,"U948",E,E,N,N],[6,"P948",E,E,N,N],[6,"N948",E,E,N,N],[6,"U949",E,E,N,N],[6,"P949",E,E,N,N],[6,"N949",E,E,N,N],[6,"U950",E,E,N,N],[6,"P950",E,E,N,N],[6,"N950",E,E,N,N],[6,"U951",E,E,N,N],[6,"P951",E,E,N,N],[6,"N951",E,E,N,N],[6,"U952",E,E,N,N],[6,"P952",E,E,N,N],[6,"N952",E,E,N,N],[6,"U953",E,E,N,N],[6,"P953",E,E,N,N],[6,"N953",E,E,N,N],[6,"U954",E,E,N,N],[6,"P954",E,E,N,N],[6,"N954",E,E,N,N],[6,"U955",E,E,N,N],[6,"P955",E,E,N,N],[6,"N955",E,E,N,N],[6,"U956",E,E,N,N],[6,"P956",E,E,N,N],[6,"N956",E,E,N,N],[6,"U957",E,E,N,N],[6,"P957",E,E,N,N],[6,"N957",E,E,N,N],[6,"U958",E,E,N,N],[6,"P958",E,E,N,N],[6,"N958",E,E,N,N],[6,"U959",E,E,N,N],[6,"P959",E,E,N,N],[6,"N959",E,E,N,N],[6,"U960",E,E,N,N],[6,"P960",E,E,N,N],[6,"N960",E,E,N,N],[6,"U961",E,E,N,N],[6,"P961",E,E,N,N],[6,"N961",E,E,N,N],[6,"U962",E,E,N,N],[6,"P962",E,E,N,N],[6,"N962",E,E,N,N],[6,"U963",E,E,N,N],[6,"P963",E,E,N,N],[6,"N963",E,E,N,N],[6,"U964",E,E,N,N],[6,"P964",E,E,N,N],[6,"N964",E,E,N,N],[6,"U965",E,E,N,N],[6,"P965",E,E,N,N],[6,"N965",E,E,N,N],[6,"U966",E,E,N,N],[6,"P966",E,E,N,N],[6,"N966",E,E,N,N],[6,"U967",E,E,N,N],[6,"P967",E,E,N,N],[6,"N967",E,E,N,N],[6,"U968",E,E,N,N],[6,"P968",E,E,N,N],[6,"N968",E,E,N,N],[6,"U969",E,E,N,N],[6,"P969",E,E,N,N],[6,"N969",E,E,N,N],[6,"U970",E,E,N,N],[6,"P970",E,E,N,N],[6,"N970",E,E,N,N],[6,"U971",E,E,N,N],[6,"P971",E,E,N,N],[6,"N971",E,E,N,N],[6,"U972",E,E,N,N],[6,"P972",E,E,N,N],[6,"N972",E,E,N,N],[6,"U973",E,E,N,N],[6,"P973",E,E,N,N],[6,"N973",E,E,N,N],[6,"U974",E,E,N,N],[6,"P974",E,E,N,N],[6,"N974",E,E,N,N],[6,"U975",E,E,N,N],[6,"P975",E,E,N,N],[6,"N975",E,E,N,N],[6,"U976",E,E,N,N],[6,"P976",E,E,N,N],[6,"N976",E,E,N,N],[6,"U977",E,E,N,N],[6,"P977",E,E,N,N],[6,"N977",E,E,N,N],[6,"U978",E,E,N,N],[6,"P978",E,E,N,N],[6,"N978",E,E,N,N],[6,"U979",E,E,N,N],[6,"P979",E,E,N,N],[6,"N979",E,E,N,N],[6,"U980",E,E,N,N],[6,"P980",E,E,N,N],[6,"N980",E,E,N,N],[6,"U981",E,E,N,N],[6,"P981",E,E,N,N],[6,"N981",E,E,N,N],[6,"U982",E,E,N,N],[6,"P982",E,E,N,N],[6,"N982",E,E,N,N],[6,"U983",E,E,N,N],[6,"P983",E,E,N,N],[6,"N983",E,E,N,N],[6,"U984",E,E,N,N],[6,"P984",E,E,N,N],[6,"N984",E,E,N,N],[6,"U985",E,E,N,N],[6,"P985",E,E,N,N],[6,"N985",E,E,N,N],[6,"U986",E,E,N,N],[6,"P986",E,E,N,N],[6,"N986",E,E,N,N],[6,"U987",E,E,N,N],[6,"P987",E,E,N,N],[6,"N987",E,E,N,N],[6,"U988",E,E,N,N],[6,"P988",E,E,N,N],[6,"N988",E,E,N,N],[6,"U989",E,E,N,N],[6,"P989",E,E,N,N],[6,"N989",E,E,N,N],[6,"U990",E,E,N,N],[6,"P990",E,E,N,N],[6,"N990",E,E,N,N],[6,"U991",E,E,N,N],[6,"P991",E,E,N,N],[6,"N991",E,E,N,N],[6,"U992",E,E,N,N],[6,"P992",E,E,N,N],[6,"N992",E,E,N,N],[6,"U993",E,E,N,N],[6,"P993",E,E,N,N],[6,"N993",E,E,N,N],[6,"U994",E,E,N,N],[6,"P994",E,E,N,N],[6,"N994",E,E,N,N],[6,"U995",E,E,N,N],[6,"P995",E,E,N,N],[6,"N995",E,E,N,N],[6,"U996",E,E,N,N],[6,"P996",E,E,N,N],[6,"N996",E,E,N,N],[6,"U997",E,E,N,N],[6,"P997",E,E,N,N],[6,"N997",E,E,N,N],[6,"U998",E,E,N,N],[6,"P998",E,E,N,N],[6,"N998",E,E,N,N],[6,"U999",E,E,N,N],[6,"P999",E,E,N,N],[6,"N999",E,E,N,N],[6,"U1000",E,E,N,N],[6,"P1000",E,E,N,N],[6,"N1000",E,E,N,N],[6,"U1001",E,E,N,N],[6,"P1001",E,E,N,N],[6,"N1001",E,E,N,N],[6,"U1002",E,E,N,N],[6,"P1002",E,E,N,N],[6,"N1002",E,E,N,N],[6,"U1003",E,E,N,N],[6,"P1003",E,E,N,N],[6,"N1003",E,E,N,N],[6,"U1004",E,E,N,N],[6,"P1004",E,E,N,N],[6,"N1004",E,E,N,N],[6,"U1005",E,E,N,N],[6,"P1005",E,E,N,N],[6,"N1005",E,E,N,N],[6,"U1006",E,E,N,N],[6,"P1006",E,E,N,N],[6,"N1006",E,E,N,N],[6,"U1007",E,E,N,N],[6,"P1007",E,E,N,N],[6,"N1007",E,E,N,N],[6,"U1008",E,E,N,N],[6,"P1008",E,E,N,N],[6,"N1008",E,E,N,N],[6,"U1009",E,E,N,N],[6,"P1009",E,E,N,N],[6,"N1009",E,E,N,N],[6,"U1010",E,E,N,N],[6,"P1010",E,E,N,N],[6,"N1010",E,E,N,N],[6,"U1011",E,E,N,N],[6,"P1011",E,E,N,N],[6,"N1011",E,E,N,N],[6,"U1012",E,E,N,N],[6,"P1012",E,E,N,N],[6,"N1012",E,E,N,N],[6,"U1013",E,E,N,N],[6,"P1013",E,E,N,N],[6,"N1013",E,E,N,N],[6,"U1014",E,E,N,N],[6,"P1014",E,E,N,N],[6,"N1014",E,E,N,N],[6,"U1015",E,E,N,N],[6,"P1015",E,E,N,N],[6,"N1015",E,E,N,N],[6,"U1016",E,E,N,N],[6,"P1016",E,E,N,N],[6,"N1016",E,E,N,N],[6,"U1017",E,E,N,N],[6,"P1017",E,E,N,N],[6,"N1017",E,E,N,N],[6,"U1018",E,E,N,N],[6,"P1018",E,E,N,N],[6,"N1018",E,E,N,N],[6,"U1019",E,E,N,N],[6,"P1019",E,E,N,N],[6,"N1019",E,E,N,N],[6,"U1020",E,E,N,N],[6,"P1020",E,E,N,N],[6,"N1020",E,E,N,N],[6,"U1021",E,E,N,N],[6,"P1021",E,E,N,N],[6,"N1021",E,E,N,N],[6,"U1022",E,E,N,N],[6,"P1022",E,E,N,N],[6,"N1022",E,E,N,N],[6,"U1023",E,E,N,N],[6,"P1023",E,E,N,N],[6,"N1023",E,E,N,N],[6,"U1024",E,E,N,N],[6,"P1024",E,E,N,N],[6,"N1024",E,E,N,N],[6,"U2048",E,E,N,N],[6,"P2048",E,E,N,N],[6,"N2048",E,E,N,N],[6,"U4096",E,E,N,N],[6,"P4096",E,E,N,N],[6,"N4096",E,E,N,N],[6,"U8192",E,E,N,N],[6,"P8192",E,E,N,N],[6,"N8192",E,E,N,N],[6,"U16384",E,E,N,N],[6,"P16384",E,E,N,N],[6,"N16384",E,E,N,N],[6,"U32768",E,E,N,N],[6,"P32768",E,E,N,N],[6,"N32768",E,E,N,N],[6,"U65536",E,E,N,N],[6,"P65536",E,E,N,N],[6,"N65536",E,E,N,N],[6,"U131072",E,E,N,N],[6,"P131072",E,E,N,N],[6,"N131072",E,E,N,N],[6,"U262144",E,E,N,N],[6,"P262144",E,E,N,N],[6,"N262144",E,E,N,N],[6,"U524288",E,E,N,N],[6,"P524288",E,E,N,N],[6,"N524288",E,E,N,N],[6,"U1048576",E,E,N,N],[6,"P1048576",E,E,N,N],[6,"N1048576",E,E,N,N],[6,"U2097152",E,E,N,N],[6,"P2097152",E,E,N,N],[6,"N2097152",E,E,N,N],[6,"U4194304",E,E,N,N],[6,"P4194304",E,E,N,N],[6,"N4194304",E,E,N,N],[6,"U8388608",E,E,N,N],[6,"P8388608",E,E,N,N],[6,"N8388608",E,E,N,N],[6,"U16777216",E,E,N,N],[6,"P16777216",E,E,N,N],[6,"N16777216",E,E,N,N],[6,"U33554432",E,E,N,N],[6,"P33554432",E,E,N,N],[6,"N33554432",E,E,N,N],[6,"U67108864",E,E,N,N],[6,"P67108864",E,E,N,N],[6,"N67108864",E,E,N,N],[6,"U134217728",E,E,N,N],[6,"P134217728",E,E,N,N],[6,"N134217728",E,E,N,N],[6,"U268435456",E,E,N,N],[6,"P268435456",E,E,N,N],[6,"N268435456",E,E,N,N],[6,"U536870912",E,E,N,N],[6,"P536870912",E,E,N,N],[6,"N536870912",E,E,N,N],[6,"U1073741824",E,E,N,N],[6,"P1073741824",E,E,N,N],[6,"N1073741824",E,E,N,N],[6,"U2147483648",E,E,N,N],[6,"P2147483648",E,E,N,N],[6,"N2147483648",E,E,N,N],[6,"U4294967296",E,E,N,N],[6,"P4294967296",E,E,N,N],[6,"N4294967296",E,E,N,N],[6,"U8589934592",E,E,N,N],[6,"P8589934592",E,E,N,N],[6,"N8589934592",E,E,N,N],[6,"U17179869184",E,E,N,N],[6,"P17179869184",E,E,N,N],[6,"N17179869184",E,E,N,N],[6,"U34359738368",E,E,N,N],[6,"P34359738368",E,E,N,N],[6,"N34359738368",E,E,N,N],[6,"U68719476736",E,E,N,N],[6,"P68719476736",E,E,N,N],[6,"N68719476736",E,E,N,N],[6,"U137438953472",E,E,N,N],[6,"P137438953472",E,E,N,N],[6,"N137438953472",E,E,N,N],[6,"U274877906944",E,E,N,N],[6,"P274877906944",E,E,N,N],[6,"N274877906944",E,E,N,N],[6,"U549755813888",E,E,N,N],[6,"P549755813888",E,E,N,N],[6,"N549755813888",E,E,N,N],[6,"U1099511627776",E,E,N,N],[6,"P1099511627776",E,E,N,N],[6,"N1099511627776",E,E,N,N],[6,"U2199023255552",E,E,N,N],[6,"P2199023255552",E,E,N,N],[6,"N2199023255552",E,E,N,N],[6,"U4398046511104",E,E,N,N],[6,"P4398046511104",E,E,N,N],[6,"N4398046511104",E,E,N,N],[6,"U8796093022208",E,E,N,N],[6,"P8796093022208",E,E,N,N],[6,"N8796093022208",E,E,N,N],[6,"U17592186044416",E,E,N,N],[6,"P17592186044416",E,E,N,N],[6,"N17592186044416",E,E,N,N],[6,"U35184372088832",E,E,N,N],[6,"P35184372088832",E,E,N,N],[6,"N35184372088832",E,E,N,N],[6,"U70368744177664",E,E,N,N],[6,"P70368744177664",E,E,N,N],[6,"N70368744177664",E,E,N,N],[6,"U140737488355328",E,E,N,N],[6,"P140737488355328",E,E,N,N],[6,"N140737488355328",E,E,N,N],[6,"U281474976710656",E,E,N,N],[6,"P281474976710656",E,E,N,N],[6,"N281474976710656",E,E,N,N],[6,"U562949953421312",E,E,N,N],[6,"P562949953421312",E,E,N,N],[6,"N562949953421312",E,E,N,N],[6,"U1125899906842624",E,E,N,N],[6,"P1125899906842624",E,E,N,N],[6,"N1125899906842624",E,E,N,N],[6,"U2251799813685248",E,E,N,N],[6,"P2251799813685248",E,E,N,N],[6,"N2251799813685248",E,E,N,N],[6,"U4503599627370496",E,E,N,N],[6,"P4503599627370496",E,E,N,N],[6,"N4503599627370496",E,E,N,N],[6,"U9007199254740992",E,E,N,N],[6,"P9007199254740992",E,E,N,N],[6,"N9007199254740992",E,E,N,N],[6,"U18014398509481984",E,E,N,N],[6,"P18014398509481984",E,E,N,N],[6,"N18014398509481984",E,E,N,N],[6,"U36028797018963968",E,E,N,N],[6,"P36028797018963968",E,E,N,N],[6,"N36028797018963968",E,E,N,N],[6,"U72057594037927936",E,E,N,N],[6,"P72057594037927936",E,E,N,N],[6,"N72057594037927936",E,E,N,N],[6,"U144115188075855872",E,E,N,N],[6,"P144115188075855872",E,E,N,N],[6,"N144115188075855872",E,E,N,N],[6,"U288230376151711744",E,E,N,N],[6,"P288230376151711744",E,E,N,N],[6,"N288230376151711744",E,E,N,N],[6,"U576460752303423488",E,E,N,N],[6,"P576460752303423488",E,E,N,N],[6,"N576460752303423488",E,E,N,N],[6,"U1152921504606846976",E,E,N,N],[6,"P1152921504606846976",E,E,N,N],[6,"N1152921504606846976",E,E,N,N],[6,"U2305843009213693952",E,E,N,N],[6,"P2305843009213693952",E,E,N,N],[6,"N2305843009213693952",E,E,N,N],[6,"U4611686018427387904",E,E,N,N],[6,"P4611686018427387904",E,E,N,N],[6,"N4611686018427387904",E,E,N,N],[6,"U9223372036854775808",E,E,N,N],[6,"U10000",E,E,N,N],[6,"P10000",E,E,N,N],[6,"N10000",E,E,N,N],[6,"U100000",E,E,N,N],[6,"P100000",E,E,N,N],[6,"N100000",E,E,N,N],[6,"U1000000",E,E,N,N],[6,"P1000000",E,E,N,N],[6,"N1000000",E,E,N,N],[6,"U10000000",E,E,N,N],[6,"P10000000",E,E,N,N],[6,"N10000000",E,E,N,N],[6,"U100000000",E,E,N,N],[6,"P100000000",E,E,N,N],[6,"N100000000",E,E,N,N],[6,"U1000000000",E,E,N,N],[6,"P1000000000",E,E,N,N],[6,"N1000000000",E,E,N,N],[6,"U10000000000",E,E,N,N],[6,"P10000000000",E,E,N,N],[6,"N10000000000",E,E,N,N],[6,"U100000000000",E,E,N,N],[6,"P100000000000",E,E,N,N],[6,"N100000000000",E,E,N,N],[6,"U1000000000000",E,E,N,N],[6,"P1000000000000",E,E,N,N],[6,"N1000000000000",E,E,N,N],[6,"U10000000000000",E,E,N,N],[6,"P10000000000000",E,E,N,N],[6,"N10000000000000",E,E,N,N],[6,"U100000000000000",E,E,N,N],[6,"P100000000000000",E,E,N,N],[6,"N100000000000000",E,E,N,N],[6,"U1000000000000000",E,E,N,N],[6,"P1000000000000000",E,E,N,N],[6,"N1000000000000000",E,E,N,N],[6,"U10000000000000000",E,E,N,N],[6,"P10000000000000000",E,E,N,N],[6,"N10000000000000000",E,E,N,N],[6,"U100000000000000000",E,E,N,N],[6,"P100000000000000000",E,E,N,N],[6,"N100000000000000000",E,E,N,N],[6,"U1000000000000000000",E,E,N,N],[6,"P1000000000000000000",E,E,N,N],[6,"N1000000000000000000",E,E,N,N],[6,"U10000000000000000000",E,E,N,N],[0,"bit",R[29],"Type-level bits.",N,N],[3,"B0",R[37],"The type-level bit 0.",N,N],[3,"B1",E,"The type-level bit 1.",N,N],[11,"new",E,R[28],0,[[],["b0"]]],[11,"new",E,R[28],1,[[],["b1"]]],[0,"uint",R[29],"Type-level unsigned integers.",N,N],[3,"UTerm",R[44],"The terminating type for `UInt`; it always comes after the…",N,N],[3,"UInt",E,"`UInt` is defined recursively, where `B` is the least…",N,N],[6,"GetBitOut",E,E,N,N],[6,"SetBitOut",E,"Alias for the result of calling `SetBit`: `SetBitOut<N, I,…",N,N],[8,"GetBit",E,E,N,N],[16,R[33],E,E,2,N],[8,"SetBit",E,"A type operator that, when implemented for unsigned…",N,N],[16,R[33],E,E,3,N],[11,"new",E,R[30],4,[[],["uterm"]]],[11,"new",E,R[30],5,[[],["uint"]]],[0,"int",R[29],"Type-level signed integers.",N,N],[3,"PInt",R[46],"Type-level signed integers with positive sign.",N,N],[3,"NInt",E,"Type-level signed integers with negative sign.",N,N],[3,"Z0",E,"The type-level signed integer 0.",N,N],[11,"new",E,R[31],6,[[],["pint"]]],[11,"new",E,R[31],7,[[],["nint"]]],[11,"new",E,"Instantiates a singleton representing the integer 0.",8,[[],["z0"]]],[0,"marker_traits",R[29],"All of the marker traits used in typenum.",N,N],[8,"NonZero","typenum::marker_traits","A marker trait to designate that a type is not zero. All…",N,N],[8,"Ord",E,"A Marker trait for the types `Greater`, `Equal`, and `Less`.",N,N],[10,R[48],E,E,9,[[],[R[49]]]],[8,"Bit",E,"The marker trait for compile time bits.",N,N],[18,"U8",E,E,10,N],[18,"BOOL",E,E,10,N],[10,"to_u8",E,E,10,[[],["u8"]]],[10,R[50],E,E,10,[[],["bool"]]],[8,R[61],E,"The marker trait for compile time unsigned integers.",N,N],[18,"U8",E,E,11,N],[18,"U16",E,E,11,N],[18,"U32",E,E,11,N],[18,"U64",E,E,11,N],[18,"USIZE",E,E,11,N],[18,"I8",E,E,11,N],[18,"I16",E,E,11,N],[18,"I32",E,E,11,N],[18,"I64",E,E,11,N],[18,"ISIZE",E,E,11,N],[10,"to_u8",E,E,11,[[],["u8"]]],[10,"to_u16",E,E,11,[[],["u16"]]],[10,"to_u32",E,E,11,[[],["u32"]]],[10,"to_u64",E,E,11,[[],["u64"]]],[10,R[51],E,E,11,[[],[R[7]]]],[10,"to_i8",E,E,11,[[],["i8"]]],[10,R[52],E,E,11,[[],["i16"]]],[10,R[53],E,E,11,[[],["i32"]]],[10,R[54],E,E,11,[[],["i64"]]],[10,R[32],E,E,11,[[],["isize"]]],[8,"Integer",E,"The marker trait for compile time signed integers.",N,N],[18,"I8",E,E,12,N],[18,"I16",E,E,12,N],[18,"I32",E,E,12,N],[18,"I64",E,E,12,N],[18,"ISIZE",E,E,12,N],[10,"to_i8",E,E,12,[[],["i8"]]],[10,R[52],E,E,12,[[],["i16"]]],[10,R[53],E,E,12,[[],["i32"]]],[10,R[54],E,E,12,[[],["i64"]]],[10,R[32],E,E,12,[[],["isize"]]],[8,"TypeArray",E,"The marker trait for type-level arrays of type-level…",N,N],[8,"PowerOfTwo",E,"The marker trait for type-level numbers which are a power…",N,N],[0,"type_operators",R[29],"Useful type operators that are not defined in `core::ops`.",N,N],[8,"Same","typenum::type_operators","A type operator that ensures that `Rhs` is the same as…",N,N],[16,R[33],E,"Should always be `Self`",13,N],[8,"Abs",E,"A type operator that returns the absolute value.",N,N],[16,R[33],E,"The absolute value.",14,N],[8,"Pow",E,"A type operator that provides exponentiation by repeated…",N,N],[16,R[33],E,"The result of the exponentiation.",15,N],[10,"powi",E,R[34],15,[[["exp"]]]],[8,"Cmp",E,"A type operator for comparing `Self` and `Rhs`. It…",N,N],[16,R[33],E,"The result of the comparison. It should only ever be one…",16,N],[8,"Len",E,"A type operator that gives the length of an `Array` or the…",N,N],[16,R[33],E,"The length as a type-level unsigned integer.",17,N],[10,"len",E,R[34],17,[[["self"]]]],[8,R[62],E,"Division as a partial function. This type operator…",N,N],[16,R[33],E,"The type of the result of the division",18,N],[10,R[45],E,"Method for performing the division",18,[[["rhs"]]]],[8,"Min",E,"A type operator that returns the minimum of `Self` and…",N,N],[16,R[33],E,"The type of the minimum of `Self` and `Rhs`",19,N],[10,"min",E,"Method returning the minimum",19,[[["rhs"]]]],[8,"Max",E,"A type operator that returns the maximum of `Self` and…",N,N],[16,R[33],E,"The type of the maximum of `Self` and `Rhs`",20,N],[10,"max",E,"Method returning the maximum",20,[[["rhs"]]]],[8,"IsLess",E,"A type operator that returns `True` if `Self < Rhs`,…",N,N],[16,R[33],E,R[35],21,N],[10,R[43],E,R[36],21,[[["rhs"]]]],[8,"IsEqual",E,"A type operator that returns `True` if `Self == Rhs`,…",N,N],[16,R[33],E,R[35],22,N],[10,R[38],E,R[36],22,[[["rhs"]]]],[8,R[63],E,"A type operator that returns `True` if `Self > Rhs`,…",N,N],[16,R[33],E,R[35],23,N],[10,R[39],E,R[36],23,[[["rhs"]]]],[8,R[64],E,"A type operator that returns `True` if `Self <= Rhs`,…",N,N],[16,R[33],E,R[35],24,N],[10,R[40],E,R[36],24,[[["rhs"]]]],[8,R[65],E,"A type operator that returns `True` if `Self != Rhs`,…",N,N],[16,R[33],E,R[35],25,N],[10,R[41],E,R[36],25,[[["rhs"]]]],[8,R[66],E,"A type operator that returns `True` if `Self >= Rhs`,…",N,N],[16,R[33],E,R[35],26,N],[10,R[42],E,R[36],26,[[["rhs"]]]],[0,"operator_aliases",R[29],"Aliases for the type operators used in this crate. Their…",N,N],[6,"And","typenum::operator_aliases","Alias for the associated type of `BitAnd`: `And<A, B> = <A…",N,N],[6,"Or",E,"Alias for the associated type of `BitOr`: `Or<A, B> = <A…",N,N],[6,"Xor",E,"Alias for the associated type of `BitXor`: `Xor<A, B> = <A…",N,N],[6,"Shleft",E,"Alias for the associated type of `Shl`: `Shleft<A, B> = <A…",N,N],[6,"Shright",E,"Alias for the associated type of `Shr`: `Shright<A, B> =…",N,N],[6,"Sum",E,"Alias for the associated type of `Add`: `Sum<A, B> = <A as…",N,N],[6,"Diff",E,"Alias for the associated type of `Sub`: `Diff<A, B> = <A…",N,N],[6,"Prod",E,"Alias for the associated type of `Mul`: `Prod<A, B> = <A…",N,N],[6,"Quot",E,"Alias for the associated type of `Div`: `Quot<A, B> = <A…",N,N],[6,"Mod",E,"Alias for the associated type of `Rem`: `Mod<A, B> = <A as…",N,N],[6,"PartialQuot",E,"Alias for the associated type of `PartialDiv`:…",N,N],[6,"Negate",E,"Alias for the associated type of `Neg`: `Negate<A> = <A as…",N,N],[6,"AbsVal",E,"Alias for the associated type of `Abs`: `AbsVal<A> = <A as…",N,N],[6,"Exp",E,"Alias for the associated type of `Pow`: `Exp<A, B> = <A as…",N,N],[6,"Add1",E,"Alias to make it easy to add 1: `Add1<A> = <A as…",N,N],[6,"Sub1",E,"Alias to make it easy to subtract 1: `Sub1<A> = <A as…",N,N],[6,"Square",E,"Alias to make it easy to square. `Square<A> = <A as…",N,N],[6,"Cube",E,"Alias to make it easy to cube. `Cube<A> = <Square<A> as…",N,N],[6,"Compare",E,"Alias for the associated type of `Cmp`: `Compare<A, B> =…",N,N],[6,"Length",E,"Alias for the associated type of `Len`: `Length<A> = <A as…",N,N],[6,"Minimum",E,"Alias for the associated type of `Min`: `Minimum<A, B> =…",N,N],[6,"Maximum",E,"Alias for the associated type of `Max`: `Maximum<A, B> =…",N,N],[6,"Le",E,"Alias for the associated type of `IsLess`: `Le<A, B> = <A…",N,N],[6,"Eq",E,"Alias for the associated type of `IsEqual`: `Eq<A, B> = <A…",N,N],[6,"Gr",E,"Alias for the associated type of `IsGreater`: `Gr<A, B> =…",N,N],[6,"GrEq",E,"Alias for the associated type of `IsGreaterOrEqual`:…",N,N],[6,"LeEq",E,"Alias for the associated type of `IsLessOrEqual`: `LeEq<A,…",N,N],[6,"NotEq",E,"Alias for the associated type of `IsNotEqual`: `NotEq<A,…",N,N],[0,"array",R[29],"A type-level array of type-level numbers.",N,N],[3,"ATerm",R[47],"The terminating type for type arrays.",N,N],[3,"TArr",E,"`TArr` is a type that acts as an array of types. It is…",N,N],[14,"op",R[29],"Convenient type operations.",N,N],[14,"cmp",E,"A convenience macro for comparing type numbers. Use `op!`…",N,N],[14,"tarr",E,"Create a new type-level arrray. Only usable on Rust 1.13.0…",N,N],[14,"assert_type_eq",E,"Asserts that two types are the same.",N,N],[14,"assert_type",E,"Asserts that a type is `True`, aka `B1`.",N,N],[11,R[10],E,E,27,[[[U]],[R[0]]]],[11,"from",E,E,27,[[[T]],[T]]],[11,"into",E,E,27,[[],[U]]],[11,R[12],E,E,27,[[],[R[0]]]],[11,R[25],E,E,27,[[["self"]],[T]]],[11,R[13],E,E,27,[[["self"]],[T]]],[11,R[14],E,E,27,[[["self"]],[R[26]]]],[11,R[10],E,E,28,[[[U]],[R[0]]]],[11,"from",E,E,28,[[[T]],[T]]],[11,"into",E,E,28,[[],[U]]],[11,R[12],E,E,28,[[],[R[0]]]],[11,R[25],E,E,28,[[["self"]],[T]]],[11,R[13],E,E,28,[[["self"]],[T]]],[11,R[14],E,E,28,[[["self"]],[R[26]]]],[11,R[10],E,E,29,[[[U]],[R[0]]]],[11,"from",E,E,29,[[[T]],[T]]],[11,"into",E,E,29,[[],[U]]],[11,R[12],E,E,29,[[],[R[0]]]],[11,R[25],E,E,29,[[["self"]],[T]]],[11,R[13],E,E,29,[[["self"]],[T]]],[11,R[14],E,E,29,[[["self"]],[R[26]]]],[11,R[43],R[37],E,0,[[["b"]]]],[11,R[38],E,E,0,[[["b"]]]],[11,R[39],E,E,0,[[["b"]]]],[11,R[40],E,E,0,[[["b"]]]],[11,R[41],E,E,0,[[["b"]]]],[11,R[42],E,E,0,[[["b"]]]],[11,R[10],E,E,0,[[[U]],[R[0]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[12],E,E,0,[[],[R[0]]]],[11,R[25],E,E,0,[[["self"]],[T]]],[11,R[13],E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[["self"]],[R[26]]]],[11,R[43],E,E,1,[[["b"]]]],[11,R[38],E,E,1,[[["b"]]]],[11,R[39],E,E,1,[[["b"]]]],[11,R[40],E,E,1,[[["b"]]]],[11,R[41],E,E,1,[[["b"]]]],[11,R[42],E,E,1,[[["b"]]]],[11,R[10],E,E,1,[[[U]],[R[0]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[12],E,E,1,[[],[R[0]]]],[11,R[25],E,E,1,[[["self"]],[T]]],[11,R[13],E,E,1,[[["self"]],[T]]],[11,R[14],E,E,1,[[["self"]],[R[26]]]],[11,"powi",R[44],E,4,[[["n"]]]],[11,R[45],E,E,4,[[["n"]]]],[11,R[43],E,E,4,[[["b"]]]],[11,R[38],E,E,4,[[["b"]]]],[11,R[39],E,E,4,[[["b"]]]],[11,R[40],E,E,4,[[["b"]]]],[11,R[41],E,E,4,[[["b"]]]],[11,R[42],E,E,4,[[["b"]]]],[11,R[10],E,E,4,[[[U]],[R[0]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[12],E,E,4,[[],[R[0]]]],[11,R[25],E,E,4,[[["self"]],[T]]],[11,R[13],E,E,4,[[["self"]],[T]]],[11,R[14],E,E,4,[[["self"]],[R[26]]]],[11,"powi",E,E,5,[[["n"]]]],[11,R[45],E,E,5,[[["n"]]]],[11,R[43],E,E,5,[[["b"]]]],[11,R[38],E,E,5,[[["b"]]]],[11,R[39],E,E,5,[[["b"]]]],[11,R[40],E,E,5,[[["b"]]]],[11,R[41],E,E,5,[[["b"]]]],[11,R[42],E,E,5,[[["b"]]]],[11,R[10],E,E,5,[[[U]],[R[0]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[12],E,E,5,[[],[R[0]]]],[11,R[25],E,E,5,[[["self"]],[T]]],[11,R[13],E,E,5,[[["self"]],[T]]],[11,R[14],E,E,5,[[["self"]],[R[26]]]],[11,"powi",R[46],E,6,[[["n"]]]],[11,R[45],E,E,6,[[["n"]]]],[11,R[43],E,E,6,[[["b"]]]],[11,R[38],E,E,6,[[["b"]]]],[11,R[39],E,E,6,[[["b"]]]],[11,R[40],E,E,6,[[["b"]]]],[11,R[41],E,E,6,[[["b"]]]],[11,R[42],E,E,6,[[["b"]]]],[11,R[10],E,E,6,[[[U]],[R[0]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[12],E,E,6,[[],[R[0]]]],[11,R[25],E,E,6,[[["self"]],[T]]],[11,R[13],E,E,6,[[["self"]],[T]]],[11,R[14],E,E,6,[[["self"]],[R[26]]]],[11,"powi",E,E,7,[[["n"]]]],[11,R[45],E,E,7,[[["n"]]]],[11,R[43],E,E,7,[[["b"]]]],[11,R[38],E,E,7,[[["b"]]]],[11,R[39],E,E,7,[[["b"]]]],[11,R[40],E,E,7,[[["b"]]]],[11,R[41],E,E,7,[[["b"]]]],[11,R[42],E,E,7,[[["b"]]]],[11,R[10],E,E,7,[[[U]],[R[0]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[12],E,E,7,[[],[R[0]]]],[11,R[25],E,E,7,[[["self"]],[T]]],[11,R[13],E,E,7,[[["self"]],[T]]],[11,R[14],E,E,7,[[["self"]],[R[26]]]],[11,"powi",E,E,8,[[["n"]]]],[11,R[45],E,E,8,[[["n"]]]],[11,R[43],E,E,8,[[["b"]]]],[11,R[38],E,E,8,[[["b"]]]],[11,R[39],E,E,8,[[["b"]]]],[11,R[40],E,E,8,[[["b"]]]],[11,R[41],E,E,8,[[["b"]]]],[11,R[42],E,E,8,[[["b"]]]],[11,R[10],E,E,8,[[[U]],[R[0]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[12],E,E,8,[[],[R[0]]]],[11,R[25],E,E,8,[[["self"]],[T]]],[11,R[13],E,E,8,[[["self"]],[T]]],[11,R[14],E,E,8,[[["self"]],[R[26]]]],[11,R[45],R[47],E,30,[[["n"]]]],[11,R[10],E,E,30,[[[U]],[R[0]]]],[11,"from",E,E,30,[[[T]],[T]]],[11,"into",E,E,30,[[],[U]]],[11,R[12],E,E,30,[[],[R[0]]]],[11,R[25],E,E,30,[[["self"]],[T]]],[11,R[13],E,E,30,[[["self"]],[T]]],[11,R[14],E,E,30,[[["self"]],[R[26]]]],[11,R[45],E,E,31,[[["n"]]]],[11,R[10],E,E,31,[[[U]],[R[0]]]],[11,"from",E,E,31,[[[T]],[T]]],[11,"into",E,E,31,[[],[U]]],[11,R[12],E,E,31,[[],[R[0]]]],[11,R[25],E,E,31,[[["self"]],[T]]],[11,R[13],E,E,31,[[["self"]],[T]]],[11,R[14],E,E,31,[[["self"]],[R[26]]]],[11,R[48],R[29],E,27,[[],[R[49]]]],[11,R[48],E,E,28,[[],[R[49]]]],[11,R[48],E,E,29,[[],[R[49]]]],[11,"to_u8",R[37],E,0,[[],["u8"]]],[11,R[50],E,E,0,[[],["bool"]]],[11,"to_u8",E,E,1,[[],["u8"]]],[11,R[50],E,E,1,[[],["bool"]]],[11,"to_u8",R[44],E,4,[[],["u8"]]],[11,"to_u16",E,E,4,[[],["u16"]]],[11,"to_u32",E,E,4,[[],["u32"]]],[11,"to_u64",E,E,4,[[],["u64"]]],[11,R[51],E,E,4,[[],[R[7]]]],[11,"to_i8",E,E,4,[[],["i8"]]],[11,R[52],E,E,4,[[],["i16"]]],[11,R[53],E,E,4,[[],["i32"]]],[11,R[54],E,E,4,[[],["i64"]]],[11,R[32],E,E,4,[[],["isize"]]],[11,"to_u8",E,E,5,[[],["u8"]]],[11,"to_u16",E,E,5,[[],["u16"]]],[11,"to_u32",E,E,5,[[],["u32"]]],[11,"to_u64",E,E,5,[[],["u64"]]],[11,R[51],E,E,5,[[],[R[7]]]],[11,"to_i8",E,E,5,[[],["i8"]]],[11,R[52],E,E,5,[[],["i16"]]],[11,R[53],E,E,5,[[],["i32"]]],[11,R[54],E,E,5,[[],["i64"]]],[11,R[32],E,E,5,[[],["isize"]]],[11,"to_i8",R[46],E,8,[[],["i8"]]],[11,R[52],E,E,8,[[],["i16"]]],[11,R[53],E,E,8,[[],["i32"]]],[11,R[54],E,E,8,[[],["i64"]]],[11,R[32],E,E,8,[[],["isize"]]],[11,"to_i8",E,E,6,[[],["i8"]]],[11,R[52],E,E,6,[[],["i16"]]],[11,R[53],E,E,6,[[],["i32"]]],[11,R[54],E,E,6,[[],["i64"]]],[11,R[32],E,E,6,[[],["isize"]]],[11,"to_i8",E,E,7,[[],["i8"]]],[11,R[52],E,E,7,[[],["i16"]]],[11,R[53],E,E,7,[[],["i32"]]],[11,R[54],E,E,7,[[],["i64"]]],[11,R[32],E,E,7,[[],["isize"]]],[11,"powi",E,E,8,[[["z0"]]]],[11,"powi",E,E,8,[[["pint"]]]],[11,"powi",E,E,8,[[["nint"]]]],[11,"powi",R[29],E,32,[[["nint"]]]],[11,"powi",E,E,33,[[["nint",["uint"]],["uint",["b0"]]]]],[11,"powi",E,E,33,[[["nint",["uint"]],["uint",["b1"]]]]],[11,"powi",R[46],E,6,[[["z0"]]]],[11,"powi",E,E,7,[[["z0"]]]],[11,"powi",E,E,6,[[["pint"]]]],[11,"powi",E,E,7,[[["pint",["uint"]],["uint",["b0"]]]]],[11,"powi",E,E,7,[[["pint",["uint"]],["uint",["b1"]]]]],[11,"len",R[44],E,4,[[["self"]]]],[11,"len",E,E,5,[[["self"]]]],[11,"len",R[47],E,30,[[["self"]]]],[11,"len",E,E,31,[[["self"]]]],[11,R[45],R[44],E,4,[[["uint"]]]],[11,R[45],E,E,5,[[["uint"]]]],[11,R[45],R[47],E,30,[[["rhs"]]]],[11,R[45],E,E,31,[[["rhs"]]]],[11,"min",R[37],E,0,[[["b0"]],["b0"]]],[11,"min",E,E,0,[[["b1"]],["b0"]]],[11,"min",E,E,1,[[["b0"]],["b0"]]],[11,"min",E,E,1,[[["b1"]],["b1"]]],[11,"min",R[44],E,4,[[[U]]]],[11,"min",E,E,5,[[["ur"]]]],[11,"min",R[46],E,8,[[["z0"]]]],[11,"min",E,E,8,[[["pint"]]]],[11,"min",E,E,8,[[["nint"]]]],[11,"min",E,E,6,[[["z0"]]]],[11,"min",E,E,7,[[["z0"]]]],[11,"min",E,E,6,[[["pint"]]]],[11,"min",E,E,7,[[["pint"]]]],[11,"min",E,E,6,[[["nint"]]]],[11,"min",E,E,7,[[["nint"]]]],[11,"max",R[37],E,0,[[["b0"]],["b0"]]],[11,"max",E,E,0,[[["b1"]],["b1"]]],[11,"max",E,E,1,[[["b0"]],["b1"]]],[11,"max",E,E,1,[[["b1"]],["b1"]]],[11,"max",R[44],E,4,[[[U]]]],[11,"max",E,E,5,[[["ur"]]]],[11,"max",R[46],E,8,[[["z0"]]]],[11,"max",E,E,8,[[["pint"]]]],[11,"max",E,E,8,[[["nint"]]]],[11,"max",E,E,6,[[["z0"]]]],[11,"max",E,E,7,[[["z0"]]]],[11,"max",E,E,6,[[["pint"]]]],[11,"max",E,E,7,[[["pint"]]]],[11,"max",E,E,6,[[["nint"]]]],[11,"max",E,E,7,[[["nint"]]]],[11,"fmt",R[37],E,0,[[["self"],[R[55]]],[R[0]]]],[11,"fmt",E,E,1,[[["self"],[R[55]]],[R[0]]]],[11,"fmt",R[44],E,4,[[["self"],[R[55]]],[R[0]]]],[11,"fmt",E,E,5,[[["self"],[R[55]]],[R[0]]]],[11,"fmt",R[46],E,6,[[["self"],[R[55]]],[R[0]]]],[11,"fmt",E,E,7,[[["self"],[R[55]]],[R[0]]]],[11,"fmt",E,E,8,[[["self"],[R[55]]],[R[0]]]],[11,"fmt",R[47],E,30,[[["self"],[R[55]]],[R[0]]]],[11,"fmt",E,E,31,[[["self"],[R[55]]],[R[0]]]],[11,"fmt",R[29],E,27,[[["self"],[R[55]]],[R[0]]]],[11,"fmt",E,E,28,[[["self"],[R[55]]],[R[0]]]],[11,"fmt",E,E,29,[[["self"],[R[55]]],[R[0]]]],[11,"sub",R[44],E,4,[[["b0"]]]],[11,"sub",E,E,5,[[["b0"]]]],[11,"sub",E,E,5,[[["b1"]]]],[11,"sub",E,E,5,[[["b1"]]]],[11,"sub",E,E,5,[[["b1"]]]],[11,"sub",E,E,4,[[["uterm"]]]],[11,"sub",E,E,5,[[["ur"]]]],[11,"sub",R[46],E,8,[[["z0"]]]],[11,"sub",E,E,8,[[["pint"]]]],[11,"sub",E,E,8,[[["nint"]]]],[11,"sub",E,E,6,[[["z0"]]]],[11,"sub",E,E,7,[[["z0"]]]],[11,"sub",E,E,6,[[["nint"]]]],[11,"sub",E,E,7,[[["pint"]]]],[11,"sub",E,E,6,[[["pint"]]]],[11,"sub",E,E,7,[[["nint"]]]],[11,"sub",R[47],E,30,[[["aterm"]]]],[11,"sub",E,E,31,[[["tarr"]]]],[11,"eq",R[37],E,0,[[["b0"],["self"]],["bool"]]],[11,"eq",E,E,1,[[["self"],["b1"]],["bool"]]],[11,"eq",R[44],E,4,[[["self"],["uterm"]],["bool"]]],[11,"eq",E,E,5,[[["self"],["uint"]],["bool"]]],[11,"ne",E,E,5,[[["self"],["uint"]],["bool"]]],[11,"eq",R[46],E,6,[[["self"],["pint"]],["bool"]]],[11,"ne",E,E,6,[[["self"],["pint"]],["bool"]]],[11,"eq",E,E,7,[[["nint"],["self"]],["bool"]]],[11,"ne",E,E,7,[[["nint"],["self"]],["bool"]]],[11,"eq",E,E,8,[[["self"],["z0"]],["bool"]]],[11,"eq",R[47],E,30,[[["self"],["aterm"]],["bool"]]],[11,"eq",E,E,31,[[["self"],["tarr"]],["bool"]]],[11,"ne",E,E,31,[[["self"],["tarr"]],["bool"]]],[11,"eq",R[29],E,27,[[["self"],[R[57]]],["bool"]]],[11,"eq",E,E,28,[[["less"],["self"]],["bool"]]],[11,"eq",E,E,29,[[["equal"],["self"]],["bool"]]],[11,"cmp",R[37],E,0,[[["b0"],["self"]],[R[49]]]],[11,"cmp",E,E,1,[[["self"],["b1"]],[R[49]]]],[11,"cmp",R[44],E,4,[[["self"],["uterm"]],[R[49]]]],[11,"cmp",E,E,5,[[["self"],["uint"]],[R[49]]]],[11,"cmp",R[46],E,6,[[["self"],["pint"]],[R[49]]]],[11,"cmp",E,E,7,[[["nint"],["self"]],[R[49]]]],[11,"cmp",E,E,8,[[["self"],["z0"]],[R[49]]]],[11,"cmp",R[47],E,30,[[["self"],["aterm"]],[R[49]]]],[11,"cmp",E,E,31,[[["self"],["tarr"]],[R[49]]]],[11,"cmp",R[29],E,27,[[["self"],[R[57]]],[R[49]]]],[11,"cmp",E,E,28,[[["less"],["self"]],[R[49]]]],[11,"cmp",E,E,29,[[["equal"],["self"]],[R[49]]]],[11,R[56],R[37],E,0,[[["b0"],["self"]],[[R[20],[R[49]]],[R[49]]]]],[11,R[56],E,E,1,[[["self"],["b1"]],[[R[20],[R[49]]],[R[49]]]]],[11,R[56],R[44],E,4,[[["self"],["uterm"]],[[R[20],[R[49]]],[R[49]]]]],[11,R[56],E,E,5,[[["self"],["uint"]],[[R[20],[R[49]]],[R[49]]]]],[11,"lt",E,E,5,[[["self"],["uint"]],["bool"]]],[11,"le",E,E,5,[[["self"],["uint"]],["bool"]]],[11,"gt",E,E,5,[[["self"],["uint"]],["bool"]]],[11,"ge",E,E,5,[[["self"],["uint"]],["bool"]]],[11,R[56],R[46],E,6,[[["self"],["pint"]],[[R[20],[R[49]]],[R[49]]]]],[11,"lt",E,E,6,[[["self"],["pint"]],["bool"]]],[11,"le",E,E,6,[[["self"],["pint"]],["bool"]]],[11,"gt",E,E,6,[[["self"],["pint"]],["bool"]]],[11,"ge",E,E,6,[[["self"],["pint"]],["bool"]]],[11,R[56],E,E,7,[[["nint"],["self"]],[[R[20],[R[49]]],[R[49]]]]],[11,"lt",E,E,7,[[["nint"],["self"]],["bool"]]],[11,"le",E,E,7,[[["nint"],["self"]],["bool"]]],[11,"gt",E,E,7,[[["nint"],["self"]],["bool"]]],[11,"ge",E,E,7,[[["nint"],["self"]],["bool"]]],[11,R[56],E,E,8,[[["self"],["z0"]],[[R[20],[R[49]]],[R[49]]]]],[11,R[56],R[47],E,30,[[["self"],["aterm"]],[[R[20],[R[49]]],[R[49]]]]],[11,R[56],E,E,31,[[["self"],["tarr"]],[[R[20],[R[49]]],[R[49]]]]],[11,"lt",E,E,31,[[["self"],["tarr"]],["bool"]]],[11,"le",E,E,31,[[["self"],["tarr"]],["bool"]]],[11,"gt",E,E,31,[[["self"],["tarr"]],["bool"]]],[11,"ge",E,E,31,[[["self"],["tarr"]],["bool"]]],[11,R[56],R[29],E,27,[[["self"],[R[57]]],[[R[20],[R[49]]],[R[49]]]]],[11,R[56],E,E,28,[[["less"],["self"]],[[R[20],[R[49]]],[R[49]]]]],[11,R[56],E,E,29,[[["equal"],["self"]],[[R[20],[R[49]]],[R[49]]]]],[11,"hash",R[37],E,0,[[["self"],["__h"]]]],[11,"hash",E,E,1,[[["self"],["__h"]]]],[11,"hash",R[44],E,4,[[["self"],["__h"]]]],[11,"hash",E,E,5,[[["__hub"],["self"]]]],[11,"hash",R[46],E,6,[[["__hu"],["self"]]]],[11,"hash",E,E,7,[[["__hu"],["self"]]]],[11,"hash",E,E,8,[[["self"],["__h"]]]],[11,"hash",R[47],E,30,[[["self"],["__h"]]]],[11,"hash",E,E,31,[[["self"],["__hva"]]]],[11,"hash",R[29],E,27,[[["self"],["__h"]]]],[11,"hash",E,E,28,[[["self"],["__h"]]]],[11,"hash",E,E,29,[[["self"],["__h"]]]],[11,"add",R[44],E,4,[[["b0"]]]],[11,"add",E,E,5,[[["b0"]]]],[11,"add",E,E,4,[[["b1"]]]],[11,"add",E,E,5,[[["b1"]]]],[11,"add",E,E,5,[[["b1"]]]],[11,"add",E,E,4,[[[U]]]],[11,"add",E,E,5,[[["uterm"]]]],[11,"add",E,E,5,[[["b0"],["uint",["b0"]]]]],[11,"add",E,E,5,[[["b1"],["uint",["b1"]]]]],[11,"add",E,E,5,[[["b0"],["uint",["b0"]]]]],[11,"add",E,E,5,[[["b1"],["uint",["b1"]]]]],[11,"add",R[46],E,8,[[["i"]]]],[11,"add",E,E,6,[[["z0"]]]],[11,"add",E,E,7,[[["z0"]]]],[11,"add",E,E,6,[[["pint"]]]],[11,"add",E,E,7,[[["nint"]]]],[11,"add",E,E,6,[[["nint"]]]],[11,"add",E,E,7,[[["pint"]]]],[11,"add",R[47],E,30,[[["aterm"]]]],[11,"add",E,E,31,[[["tarr"]]]],[11,"mul",R[44],E,5,[[["b0"]]]],[11,"mul",E,E,4,[[["b0"]]]],[11,"mul",E,E,4,[[["b1"]]]],[11,"mul",E,E,5,[[["b1"]]]],[11,"mul",E,E,5,[[["uterm"]]]],[11,"mul",E,E,4,[[[U]]]],[11,"mul",E,E,5,[[["uint"]]]],[11,"mul",E,E,5,[[["uint"]]]],[11,"mul",R[46],E,8,[[["i"]]]],[11,"mul",E,E,6,[[["z0"]]]],[11,"mul",E,E,7,[[["z0"]]]],[11,"mul",E,E,6,[[["pint"]]]],[11,"mul",E,E,7,[[["nint"]]]],[11,"mul",E,E,6,[[["nint"]]]],[11,"mul",E,E,7,[[["pint"]]]],[11,"mul",R[47],E,30,[[["rhs"]]]],[11,"mul",E,E,31,[[["rhs"]]]],[11,"mul",R[46],E,8,[[["aterm"]]]],[11,"mul",E,E,6,[[["aterm"]]]],[11,"mul",E,E,7,[[["aterm"]]]],[11,"mul",E,E,8,[[["tarr"]]]],[11,"mul",E,E,6,[[["tarr"]]]],[11,"mul",E,E,7,[[["tarr"]]]],[11,"div",R[44],E,4,[[["uint"]]]],[11,"div",E,E,5,[[["uint"]]]],[11,"div",R[46],E,8,[[["i"]]]],[11,"div",E,E,6,[[["pint"]]]],[11,"div",E,E,6,[[["nint"]]]],[11,"div",E,E,7,[[["pint"]]]],[11,"div",E,E,7,[[["nint"]]]],[11,"div",R[47],E,30,[[["rhs"]]]],[11,"div",E,E,31,[[["rhs"]]]],[11,"rem",R[44],E,4,[[["uint"]]]],[11,"rem",E,E,5,[[["uint"]]]],[11,"rem",R[46],E,8,[[["i"]]]],[11,"rem",E,E,6,[[["pint"]]]],[11,"rem",E,E,6,[[["nint"]]]],[11,"rem",E,E,7,[[["pint"]]]],[11,"rem",E,E,7,[[["nint"]]]],[11,"rem",R[47],E,30,[[["rhs"]]]],[11,"rem",E,E,31,[[["rhs"]]]],[11,"neg",R[46],E,8,[[]]],[11,"neg",E,E,6,[[]]],[11,"neg",E,E,7,[[]]],[11,"neg",R[47],E,30,[[]]],[11,"neg",E,E,31,[[]]],[11,"not",R[37],E,0,[[]]],[11,"not",E,E,1,[[]]],[11,R[58],E,E,0,[[["rhs"]]]],[11,R[58],E,E,1,[[["b0"]]]],[11,R[58],E,E,1,[[["b1"]]]],[11,R[58],R[44],E,4,[[["ur"]]]],[11,R[58],E,E,5,[[["ur"]]]],[11,"bitor",R[37],E,0,[[["b0"]]]],[11,"bitor",E,E,0,[[["b1"]]]],[11,"bitor",E,E,1,[[["rhs"]]]],[11,"bitor",R[44],E,4,[[[U]]]],[11,"bitor",E,E,5,[[["uterm"]]]],[11,"bitor",E,E,5,[[["b0"],["uint",["b0"]]]]],[11,"bitor",E,E,5,[[["b1"],["uint",["b1"]]]]],[11,"bitor",E,E,5,[[["b0"],["uint",["b0"]]]]],[11,"bitor",E,E,5,[[["b1"],["uint",["b1"]]]]],[11,R[59],R[37],E,0,[[["b0"]]]],[11,R[59],E,E,1,[[["b0"]]]],[11,R[59],E,E,0,[[["b1"]]]],[11,R[59],E,E,1,[[["b1"]]]],[11,R[59],R[44],E,4,[[["ur"]]]],[11,R[59],E,E,5,[[["ur"]]]],[11,"shl",E,E,4,[[["b0"]]]],[11,"shl",E,E,4,[[["b1"]]]],[11,"shl",E,E,5,[[["b0"]]]],[11,"shl",E,E,5,[[["b1"]]]],[11,"shl",E,E,5,[[["uterm"]]]],[11,"shl",E,E,4,[[[U]]]],[11,"shl",E,E,5,[[["uint"]]]],[11,"shr",E,E,4,[[[U]]]],[11,"shr",E,E,5,[[["uterm"]]]],[11,"shr",E,E,4,[[["b0"]]]],[11,"shr",E,E,4,[[["b1"]]]],[11,"shr",E,E,5,[[["b0"]]]],[11,"shr",E,E,5,[[["b1"]]]],[11,"shr",E,E,5,[[["uint"]]]],[11,"clone",R[37],E,0,[[["self"]],["b0"]]],[11,"clone",E,E,1,[[["self"]],["b1"]]],[11,"clone",R[44],E,4,[[["self"]],["uterm"]]],[11,"clone",E,E,5,[[["self"]],["uint"]]],[11,"clone",R[46],E,6,[[["self"]],["pint"]]],[11,"clone",E,E,7,[[["self"]],["nint"]]],[11,"clone",E,E,8,[[["self"]],["z0"]]],[11,"clone",R[47],E,30,[[["self"]],["aterm"]]],[11,"clone",E,E,31,[[["self"]],["tarr"]]],[11,"clone",R[29],E,27,[[["self"]],[R[57]]]],[11,"clone",E,E,28,[[["self"]],["less"]]],[11,"clone",E,E,29,[[["self"]],["equal"]]],[11,R[60],R[37],E,0,[[],["b0"]]],[11,R[60],E,E,1,[[],["b1"]]],[11,R[60],R[44],E,4,[[],["uterm"]]],[11,R[60],E,E,5,[[],["uint"]]],[11,R[60],R[46],E,6,[[],["pint"]]],[11,R[60],E,E,7,[[],["nint"]]],[11,R[60],E,E,8,[[],["z0"]]],[11,R[60],R[29],E,27,[[],[R[57]]]],[11,R[60],E,E,28,[[],["less"]]],[11,R[60],E,E,29,[[],["equal"]]]],"p":[[3,"B0"],[3,"B1"],[8,"GetBit"],[8,"SetBit"],[3,"UTerm"],[3,"UInt"],[3,"PInt"],[3,"NInt"],[3,"Z0"],[8,"Ord"],[8,"Bit"],[8,R[61]],[8,"Integer"],[8,"Same"],[8,"Abs"],[8,"Pow"],[8,"Cmp"],[8,"Len"],[8,R[62]],[8,"Min"],[8,"Max"],[8,"IsLess"],[8,"IsEqual"],[8,R[63]],[8,R[64]],[8,R[65]],[8,R[66]],[3,"Greater"],[3,"Less"],[3,"Equal"],[3,"ATerm"],[3,"TArr"],[6,"P1"],[6,"N1"]]};
searchIndex["volatile_register"]={"doc":"Volatile access to memory mapped hardware registers","i":[[3,"RO","volatile_register","Read-Only register",N,N],[3,"RW",E,"Read-Write register",N,N],[3,"WO",E,"Write-Only register",N,N],[11,"read",E,R[11],0,[[["self"]],[T]]],[11,"modify",E,"Performs a read-modify-write operation",1,[[["self"],["f"]]]],[11,"read",E,R[11],1,[[["self"]],[T]]],[11,"write",E,"Writes a `value` into the register",1,[[["self"],[T]]]],[11,"write",E,"Writes `value` into the register",2,[[["self"],[T]]]],[11,R[10],E,E,0,[[[U]],[R[0]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[12],E,E,0,[[],[R[0]]]],[11,R[25],E,E,0,[[["self"]],[T]]],[11,R[13],E,E,0,[[["self"]],[T]]],[11,R[14],E,E,0,[[["self"]],[R[26]]]],[11,R[10],E,E,1,[[[U]],[R[0]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[12],E,E,1,[[],[R[0]]]],[11,R[25],E,E,1,[[["self"]],[T]]],[11,R[13],E,E,1,[[["self"]],[T]]],[11,R[14],E,E,1,[[["self"]],[R[26]]]],[11,R[10],E,E,2,[[[U]],[R[0]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[12],E,E,2,[[],[R[0]]]],[11,R[25],E,E,2,[[["self"]],[T]]],[11,R[13],E,E,2,[[["self"]],[T]]],[11,R[14],E,E,2,[[["self"]],[R[26]]]]],"p":[[3,"RO"],[3,"RW"],[3,"WO"]]};
initSearch(searchIndex);addSearchOptions(searchIndex);