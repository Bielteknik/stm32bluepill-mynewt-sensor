initSidebarItems({"constant":[["COAP_DEFAULT_MAX_AGE",""],["COAP_DEFAULT_PORT",""],["COAP_ETAG_LEN",""],["COAP_HEADER_LEN",""],["COAP_HEADER_OPTION_DELTA_MASK",""],["COAP_HEADER_OPTION_SHORT_LENGTH_MASK",""],["COAP_LINK_FORMAT_FILTERING",""],["COAP_MAX_ATTEMPTS",""],["COAP_MAX_RETRANSMIT",""],["COAP_MAX_URI",""],["COAP_MAX_URI_QUERY",""],["COAP_OBSERVE_REFRESH_INTERVAL",""],["COAP_PORT_UNSECURED",""],["COAP_PROXY_OPTION_PROCESSING",""],["COAP_RESPONSE_RANDOM_FACTOR",""],["COAP_TCP_LENGTH16_OFF",""],["COAP_TCP_LENGTH32_OFF",""],["COAP_TCP_LENGTH8_OFF",""],["COAP_TCP_TYPE0",""],["COAP_TCP_TYPE16",""],["COAP_TCP_TYPE32",""],["COAP_TCP_TYPE8",""],["COAP_TOKEN_LEN",""]],"fn":[["do_sensor_post",""],["init_sensor_coap","Init the Sensor CoAP module. Called by sysinit() during startup, defined in pkg.yml."],["init_sensor_post",""],["json_rep_end_root_object","End the JSON representation.  Assume top level is object. `{... --> {...}`"],["json_rep_finalize","Finalise the payload and return the payload size."],["json_rep_new","Prepare to write a new JSON CoAP payload into the mbuf."],["json_rep_reset","Close the current JSON CoAP payload.  Erase the JSON encoder."],["json_rep_start_root_object","Start the JSON representation.  Assume top level is object. `--> {`"],["sensor_coap_ready",""]],"static":[["coap_error_message",""],["coap_json_encoder",""],["coap_json_mbuf",""],["coap_json_value",""],["coap_stats",""]],"struct":[["__BindgenBitfieldUnit",""],["__BindgenUnionField",""],["__IncompleteArrayField",""],["json_value__bindgen_ty_1",""],["json_value__bindgen_ty_1__bindgen_ty_1",""],["oc_endpoint",""],["oc_ep_hdr",""],["oc_server_handle",""],["os_mbuf","Chained memory buffer."],["os_mbuf__bindgen_ty_1",""],["os_mbuf_pool","A mbuf pool from which to allocate mbufs. This contains a pointer to the os mempool to allocate mbufs out of, the total number of elements in the pool, and the amount of \"user\" data in a non-packet header mbuf. The total pool size, in bytes, should be:  os_mbuf_count * (omp_databuf_len + sizeof(struct os_mbuf))"],["os_mbuf_pool__bindgen_ty_1",""],["os_memblock","A memory block structure. This simply contains a pointer to the free list chain and is only used when the block is on the free list. When the block has been removed from the free list the entire memory block is usable by the caller."],["os_memblock__bindgen_ty_1",""],["os_mempool","Memory pool"],["os_mempool__bindgen_ty_1",""],["os_mempool__bindgen_ty_2",""],["sensor_value",""],["stats_coap_stats",""]],"type":[["__uint16_t",""],["__uint32_t",""],["__uint64_t",""],["__uint8_t",""],["json_write_func_t",""],["oc_endpoint_t",""]]});